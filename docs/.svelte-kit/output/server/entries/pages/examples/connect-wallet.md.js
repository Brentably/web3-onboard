import { c as create_ssr_component, a as add_attribute, j as subscribe, e as escape, v as validate_component } from "../../../chunks/index-8615df27.js";
import clsx from "clsx";
import Onboard from "@web3-onboard/core";
import injectedModule from "@web3-onboard/injected-wallets";
import { C as CodeFence } from "../../../chunks/CodeFence-7825ab22.js";
import { C as CodeInline } from "../../../chunks/CodeInline-cb589915.js";
import { L as Link } from "../../../chunks/Link-6f161fc2.js";
/* empty css                                                              *//* empty css                                                                      */import { f as frontmatter } from "../../../chunks/kitDocs-4c2b738a.js";
import { T as Tabs, a as TabPanel } from "../../../chunks/Tabs-dd4460a7.js";
import "../../../chunks/contexts-8ef4e4d1.js";
import "../../../chunks/ssr-eca022de.js";
const Chip = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { class: __class = "" } = $$props;
  if ($$props.class === void 0 && $$bindings.class && __class !== void 0)
    $$bindings.class(__class);
  return `<div${add_attribute("class", clsx("inline-flex h-6 items-center justify-center rounded-full px-2.5 py-1 text-xs tracking-wide font-mono font-medium", "border border-gray-divider shadow-sm", __class), 0)}><span class="${"mt-px"}">${slots.default ? slots.default({}) : ``}</span></div>`;
});
var Chip$1 = Chip;
const INFURA_ID = "e0b15c21b7d54cd4814586334af72618";
const ConnectWallet = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
  let connectedAccount;
  let buttonText;
  let account;
  let $wallets$, $$unsubscribe_wallets$;
  const injected = injectedModule();
  const onboard = Onboard({
    wallets: [injected],
    chains: [
      {
        id: "0x1",
        token: "ETH",
        label: "Ethereum Mainnet",
        rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`
      },
      {
        id: "0x3",
        token: "tROP",
        label: "Ethereum Ropsten Testnet",
        rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`
      }
    ],
    appMetadata: {
      name: "Documentation",
      icon: "<svg></svg>",
      description: "Example showcasing how to connect a wallet.",
      recommendedInjectedWallets: [
        {
          name: "MetaMask",
          url: "https://metamask.io"
        },
        {
          name: "Coinbase",
          url: "https://wallet.coinbase.com/"
        }
      ]
    },
    accountCenter: {
      desktop: { enabled: false },
      mobile: { enabled: false }
    }
  });
  const trunc = (address) => address ? address.slice(0, 6) + "..." + address.slice(-6) : null;
  const wallets$ = onboard.state.select("wallets");
  $$unsubscribe_wallets$ = subscribe(wallets$, (value) => $wallets$ = value);
  connectedAccount = (_b = (_a = $wallets$ == null ? void 0 : $wallets$[0]) == null ? void 0 : _a.accounts) == null ? void 0 : _b[0];
  buttonText = ((_c = $wallets$ == null ? void 0 : $wallets$[0]) == null ? void 0 : _c.provider) ? "Disconnect" : "Connect";
  account = ((_d = connectedAccount == null ? void 0 : connectedAccount.ens) == null ? void 0 : _d.name) ? {
    ens: connectedAccount == null ? void 0 : connectedAccount.ens,
    address: trunc(connectedAccount == null ? void 0 : connectedAccount.address)
  } : {
    address: trunc(connectedAccount == null ? void 0 : connectedAccount.address)
  };
  $$unsubscribe_wallets$();
  return `<div class="${"flex items-center justify-center border-gray-divider border rounded-md h-40 p-4"}">${((_e = $wallets$ == null ? void 0 : $wallets$[0]) == null ? void 0 : _e.provider) ? `<div class="${"flex items-center w-full px-3 py-2 border border-gray-divider bg-gray-elevate text-gray-inverse rounded-md"}"><div class="${"w-9 h-9 rounded-full overflow-hidden mr-2"}">${((_g = (_f = account == null ? void 0 : account.ens) == null ? void 0 : _f.avatar) == null ? void 0 : _g.url) ? `<img${add_attribute("src", (_i = (_h = account == null ? void 0 : account.ens) == null ? void 0 : _h.avatar) == null ? void 0 : _i.url, 0)} alt="${""}">` : `<div class="${"bg-gradient-to-r from-cyan-500 to-blue-500 w-full h-full"}"></div>`}</div>
      <div><div class="${""}">${escape((account == null ? void 0 : account.ens) ? `${(_j = account == null ? void 0 : account.ens) == null ? void 0 : _j.name} (${account == null ? void 0 : account.address})` : `${account == null ? void 0 : account.address}`)}</div>
        <div class="${"text-sm"}">Connected to ${validate_component(Chip$1, "Chip").$$render($$result, {}, {}, {
    default: () => {
      var _a2;
      return `${escape((_a2 = $wallets$ == null ? void 0 : $wallets$[0]) == null ? void 0 : _a2.label)}`;
    }
  })}</div></div>

      <button class="${"ml-auto rounded-lg bg-gray-inverse hover:bg-gray-hover hover:text-gray-inverse transition-all px-4 h-10 text-base text-gray-current"}">${escape(buttonText)}</button></div>` : `<button class="${"rounded-lg bg-gray-inverse hover:bg-gray-hover hover:text-gray-inverse transition-all px-4 h-10 text-base text-gray-current"}">${escape(buttonText)}</button>`}</div>`;
});
const ReactConnectWallet = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<h2 id="${"step-1-import-configure"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#step-1-import-configure",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Step 1: Import + Configure</h2>
<p>Import the libraries and any wallets you would like to use. For this example, we are going to use the injected wallets module. You can easily add more wallet support to your dapp via our other wallet modules. Additionally, we&#39;ll setup web3-onboard to support 2 chains: Ethereum mainnet and Polygon mainnet.</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    title: "App.tsx",
    lang: "javascript",
    ext: "js",
    linesCount: 49,
    rawCode: "import { Web3OnboardProvider, init } from '@web3-onboard/react'\nimport injectedModule from '@web3-onboard/injected-wallets'\n\nconst INFURA_KEY = ''\n\nconst ethereumRopsten = {\n  id: '0x3',\n  token: 'rETH',\n  label: 'Ethereum Ropsten',\n  rpcUrl: `https://ropsten.infura.io/v3/${INFURA_KEY}`\n}\n\nconst polygonMainnet = {\n  id: '0x89',\n  token: 'MATIC',\n  label: 'Polygon',\n  rpcUrl: 'https://matic-mainnet.chainstacklabs.com'\n}\n\nconst chains = [ethereumRopsten, polygonMainnet]\n\nconst wallets = [injectedModule()]\n\nconst appMetadata = {\n  name: 'Connect Wallet Example',\n  icon: '<svg>My App Icon</svg>',\n  description: 'Example showcasing how to connect a wallet.',\n  recommendedInjectedWallets: [\n    { name: 'MetaMask', url: 'https://metamask.io' },\n    { name: 'Coinbase', url: 'https://wallet.coinbase.com/' }\n  ]\n}\n\nconst web3Onboard = init({\n  wallets,\n  chains\n  appMetadata\n})\n\nfunction App() {\n  return (\n    <Web3OnboardProvider web3Onboard={web3Onboard}>\n      <ConnectWallet />\n    </Web3OnboardProvider>\n  )\n}\n\nexport default MyApp\n",
    showCopyCode: true,
    code: '<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">Web3OnboardProvider</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">init</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/react</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> INFURA_KEY </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> ethereumRopsten </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x3</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">rETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Ropsten</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">https://ropsten.infura.io/v3/</span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">INFURA_KEY</span><span style="color: #89DDFF">}`</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> polygonMainnet </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x89</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MATIC</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Polygon</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://matic-mainnet.chainstacklabs.com</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> chains </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> [ethereumRopsten</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> polygonMainnet]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> wallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> [</span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> appMetadata </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Connect Wallet Example</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;svg&gt;My App Icon&lt;/svg&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">description</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Example showcasing how to connect a wallet.</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">recommendedInjectedWallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MetaMask</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">url</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://metamask.io</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Coinbase</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">url</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://wallet.coinbase.com/</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  ]</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> web3Onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">init</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  wallets</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  chains</span></span>\n<span class="line"><span style="color: #A6ACCD">  appMetadata</span></span>\n<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">App</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> (</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Web3OnboardProvider</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">web3Onboard</span><span style="color: #89DDFF">={</span><span style="color: #A6ACCD">web3Onboard</span><span style="color: #89DDFF">}&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">ConnectWallet</span><span style="color: #89DDFF"> /&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #FFCB6B">Web3OnboardProvider</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #F07178">  )</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> MyApp</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h2 id="${"step-2-display-the-connect-wallet-button"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#step-2-display-the-connect-wallet-button",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Step 2: Display the connect wallet button</h2>
<p>In another file we&#39;ll create the component that will display our connect wallet button. We&#39;ll be using the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "useConnectWallet" }, {}, {})} hook in order to achieve this.</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    title: "ConnectWallet.tsx",
    lang: "javascript",
    ext: "js",
    linesCount: 26,
    rawCode: "import { useEffect } from 'react'\nimport { useConnectWallet } from '@web3-onboard/react'\nimport { ethers } from 'ethers'\n\nexport default function ConnectWallet() {\n  const [{ wallet, connecting }, connect, disconnect] = useConnectWallet()\n  const [ethersProvider, setProvider] = useState<ethers.providers.Web3Provider | null>()\n\n  useEffect(() => {\n    // If the wallet has a provider than the wallet is connected\n    if (wallet?.provider) {\n      setProvider(new ethers.providers.Web3Provider(wallet.provider, 'any'))\n    }\n  }, [wallet])\n\n  return (\n    <div>\n      <button\n        disabled={connecting}\n        onClick={connect}>\n        Connect\n      </button>\n    </div>\n  )\n}\n",
    showCopyCode: true,
    code: '<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useEffect</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">react</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useConnectWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/react</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethers</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ethers</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">ConnectWallet</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">[{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connecting</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connect</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">disconnect</span><span style="color: #89DDFF">]</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useConnectWallet</span><span style="color: #F07178">()</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">ethersProvider</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">setProvider</span><span style="color: #89DDFF">]</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useState</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">ethers</span><span style="color: #89DDFF">.</span><span style="color: #FFCB6B">providers</span><span style="color: #89DDFF">.</span><span style="color: #FFCB6B">Web3Provider</span><span style="color: #F07178"> </span><span style="color: #89DDFF">|</span><span style="color: #F07178"> </span><span style="color: #FFCB6B">null</span><span style="color: #89DDFF">&gt;</span><span style="color: #F07178">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #82AAFF">useEffect</span><span style="color: #F07178">(</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">// If the wallet has a provider than the wallet is connected</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">provider</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">      </span><span style="color: #82AAFF">setProvider</span><span style="color: #F07178">(</span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethers</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">providers</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Web3Provider</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">provider</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">any</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">))</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">},</span><span style="color: #F07178"> [</span><span style="color: #A6ACCD">wallet</span><span style="color: #F07178">])</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> (</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span></span>\n<span class="line"><span style="color: #89DDFF">        </span><span style="color: #C792EA">disabled</span><span style="color: #89DDFF">={</span><span style="color: #A6ACCD">connecting</span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #89DDFF">        </span><span style="color: #C792EA">onClick</span><span style="color: #89DDFF">={</span><span style="color: #A6ACCD">connect</span><span style="color: #89DDFF">}&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">        Connect</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #F07178">  )</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h2 id="${"step-3-display-account-information"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#step-3-display-account-information",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Step 3: Display account information</h2>
<p>Now that we have our wallet connected, let&#39;s display some basic information, such as the connected wallet&#39;s address, ENS name, and avatar.</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    title: "ConnectWallet.tsx",
    lang: "javascript",
    ext: "js",
    linesCount: 49,
    highlightLines: [[8, 8], [10, 19], [28, 37]],
    rawCode: `import { useEffect } from 'react'
import { useConnectWallet } from '@web3-onboard/react'
import { ethers } from 'ethers'

export default function ConnectWallet() {
  const [{ wallet, connecting }, connect, disconnect] = useConnectWallet()
  const [ethersProvider, setProvider] = useState<ethers.providers.Web3Provider | null>()
  const [account, setAccount] = useState<Account | null>(null)

  useEffect(() => {
    if (wallet?.provider) {
      const { name, avatar } = wallet?.accounts[0].ens ?? {}
      setAccount({
        address: wallet.accounts[0].address,
        balance: wallet.accounts[0].balance,
        ens: { name, avatar: avatar?.url }
      })
    }
  }, [wallet])

  useEffect(() => {
    // If the wallet has a provider than the wallet is connected
    if (wallet?.provider) {
      setProvider(new ethers.providers.Web3Provider(wallet.provider, 'any'))
    }
  }, [wallet])

  if(wallet?.provider) {
    return (
        <div>
          <img src={ens?.avatar} alt="ENS Avatar" />
          <div>{ ens?.name ? ens.name : address }</div>
          <div>Connected to {wallet.label}</div>
          <button onClick={() => { disconnect({ label: wallet.label }) }>Disconnect</button>
        </div>
    )
  }

  return (
    <div>
      <button
        disabled={connecting}
        onClick={connect}>
        Connect
      </button>
    </div>
  )
}
`,
    showCopyCode: true,
    code: '<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useEffect</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">react</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useConnectWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/react</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethers</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ethers</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">ConnectWallet</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">[{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connecting</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connect</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">disconnect</span><span style="color: #89DDFF">]</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useConnectWallet</span><span style="color: #F07178">()</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">ethersProvider</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">setProvider</span><span style="color: #89DDFF">]</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useState</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">ethers</span><span style="color: #89DDFF">.</span><span style="color: #FFCB6B">providers</span><span style="color: #89DDFF">.</span><span style="color: #FFCB6B">Web3Provider</span><span style="color: #F07178"> </span><span style="color: #89DDFF">|</span><span style="color: #F07178"> </span><span style="color: #FFCB6B">null</span><span style="color: #89DDFF">&gt;</span><span style="color: #F07178">()</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">account</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">setAccount</span><span style="color: #89DDFF">]</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useState</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Account</span><span style="color: #F07178"> </span><span style="color: #89DDFF">|</span><span style="color: #F07178"> </span><span style="color: #FFCB6B">null</span><span style="color: #89DDFF">&gt;</span><span style="color: #F07178">(</span><span style="color: #89DDFF">null</span><span style="color: #F07178">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #82AAFF">useEffect</span><span style="color: #F07178">(</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">provider</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">      </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">name</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">avatar</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">accounts</span><span style="color: #F07178">[</span><span style="color: #F78C6C">0</span><span style="color: #F07178">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">ens</span><span style="color: #F07178"> </span><span style="color: #89DDFF">??</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{}</span></span>\n<span class="line"><span style="color: #F07178">      </span><span style="color: #82AAFF">setAccount</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">        address</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">accounts</span><span style="color: #F07178">[</span><span style="color: #F78C6C">0</span><span style="color: #F07178">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">address</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #F07178">        balance</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">accounts</span><span style="color: #F07178">[</span><span style="color: #F78C6C">0</span><span style="color: #F07178">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">balance</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #F07178">        ens</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">name</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> avatar</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">avatar</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">url</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">},</span><span style="color: #F07178"> [</span><span style="color: #A6ACCD">wallet</span><span style="color: #F07178">])</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #82AAFF">useEffect</span><span style="color: #F07178">(</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">// If the wallet has a provider than the wallet is connected</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">provider</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">      </span><span style="color: #82AAFF">setProvider</span><span style="color: #F07178">(</span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethers</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">providers</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Web3Provider</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">provider</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">any</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">))</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">},</span><span style="color: #F07178"> [</span><span style="color: #A6ACCD">wallet</span><span style="color: #F07178">])</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">provider</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> (</span></span>\n<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">img</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">={</span><span style="color: #A6ACCD">ens</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">avatar</span><span style="color: #89DDFF">} </span><span style="color: #C792EA">alt</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">ENS Avatar</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> /&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;{</span><span style="color: #A6ACCD"> ens</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">name </span><span style="color: #89DDFF">?</span><span style="color: #A6ACCD"> ens</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name </span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> address </span><span style="color: #89DDFF">}&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Connected to </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">label</span><span style="color: #89DDFF">}&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">onClick</span><span style="color: #89DDFF">={()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #82AAFF">disconnect</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> label</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">label</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">) </span><span style="color: #89DDFF">}&gt;</span><span style="color: #A6ACCD">Disconnect</span><span style="color: #89DDFF">&lt;/</span><span style="color: #A6ACCD">button</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">&lt;/</span><span style="color: #A6ACCD">div</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">    )</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #C792EA">return</span><span style="color: #89DDFF"> (</span></span>\n<span class="line"><span style="color: #89DDFF">    &lt;div&gt;</span></span>\n<span class="line"><span style="color: #89DDFF">      &lt;button</span></span>\n<span class="line"><span style="color: #89DDFF">        </span><span style="color: #C792EA">disabled</span><span style="color: #89DDFF">={</span><span style="color: #A6ACCD">connecting</span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #89DDFF">        </span><span style="color: #C792EA">onClick</span><span style="color: #89DDFF">={</span><span style="color: #A6ACCD">connect</span><span style="color: #89DDFF">}&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">        Connect</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #F07178">  )</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}`;
});
const SvelteConnectWallet = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<h2 id="${"step-1-import-configure"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#step-1-import-configure",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Step 1: Import + Configure</h2>
<p>Import the libraries and any wallets you would like to use. For this example, we are going to use the injected wallets module. You can easily add more wallet support to your dapp via our other wallet modules. Additionally, we&#39;ll setup web3-onboard to support 2 chains: Ethereum mainnet and Polygon mainnet.</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    title: "onboard.js",
    lang: "javascript",
    ext: "js",
    linesCount: 40,
    rawCode: "import Onboard from '@web3-onboard/core'\nimport injectedModule from '@web3-onboard/injected-wallets'\n\nconst INFURA_KEY = ''\n\nconst wallets = [injectedModule()]\n\nconst chains = [\n  {\n    id: '0x1',\n    token: 'ETH',\n    label: 'Ethereum Mainnet',\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`\n  },\n  {\n    id: '0x89',\n    token: 'MATIC',\n    label: 'Polygon',\n    rpcUrl: 'https://matic-mainnet.chainstacklabs.com'\n  }\n]\n\nconst appMetadata = {\n  name: 'Connect Wallet Example',\n  icon: '<svg>My App Icon</svg>',\n  description: 'Example showcasing how to connect a wallet.',\n  recommendedInjectedWallets: [\n    { name: 'MetaMask', url: 'https://metamask.io' },\n    { name: 'Coinbase', url: 'https://wallet.coinbase.com/' }\n  ]\n}\n\nconst onboard = Onboard({\n  wallets,\n  chains,\n  appMetadata,\n})\n\nexport default onboard\n",
    showCopyCode: true,
    code: '<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> INFURA_KEY </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> wallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> [</span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> chains </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> [</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/</span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">INFURA_ID</span><span style="color: #89DDFF">}`</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x89</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MATIC</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Polygon</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://matic-mainnet.chainstacklabs.com</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> appMetadata </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Connect Wallet Example</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;svg&gt;My App Icon&lt;/svg&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">description</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Example showcasing how to connect a wallet.</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">recommendedInjectedWallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MetaMask</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">url</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://metamask.io</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Coinbase</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">url</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://wallet.coinbase.com/</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  ]</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  wallets</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  chains</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  appMetadata</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> onboard</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h2 id="${"step-2-display-the-connect-wallet-button"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#step-2-display-the-connect-wallet-button",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Step 2: Display the connect wallet button</h2>
<p>In main ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "App.svelte" }, {}, {})} file we&#39;ll import our previously initialized web3-onboard instance and then display our connect wallet button.</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    title: "App.svelte",
    lang: "svelte",
    ext: "svelte",
    linesCount: 12,
    rawCode: `<script&#8203 lang="js">
import onboard from './onboard.js'
<\/script>

<div>
  <button
    disabled={connecting}
    onClick={connect}>
    Connect
  </button>
</div>
`,
    showCopyCode: true,
    code: '<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">js</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./onboard.js</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span></span>\n<span class="line"><span style="color: #89DDFF">    </span><span style="color: #C792EA">disabled</span><span style="color: #89DDFF">={</span><span style="color: #A6ACCD">connecting</span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #89DDFF">    </span><span style="color: #C792EA">onClick</span><span style="color: #89DDFF">={</span><span style="color: #A6ACCD">connect</span><span style="color: #89DDFF">}&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">    Connect</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h2 id="${"step-3-display-account-information"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#step-3-display-account-information",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Step 3: Display account information</h2>
<p>Now that we have our wallet connected, let&#39;s display some basic information, such as the connected wallet&#39;s address, ENS name, and avatar.</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    title: "App.svelte",
    lang: "svelte",
    ext: "svelte",
    linesCount: 41,
    rawCode: `<script&#8203 lang="js">
  import onboard from './onboard.js'
  
  // Subscribe to wallet updates
  const wallets$ = onboard.state.select('wallets')

  // The first wallet in the array of connected wallets
  $: connectedAccount = $wallets$?.[0]?.accounts?.[0]

  $: account = connectedAccount?.ens?.name
  ? {
      ens: connectedAccount?.ens,
      address: connectedAccount?.address
    }
  : { address: connectedAccount?.address }
  
  const connect = async () => {
    await onboard.connectWallet()
  }

  const disconnect = ({ label }) => {
    onboard.disconnectWallet({ label })
  }
<\/script>

{#if $wallets$?.[0]?.provider}
  <div>
    <img src={ens?.avatar} alt="ENS Avatar" />
    <div>{ ens?.name ? ens.name : address }</div>
    <div>Connected to {wallet.label}</div>
    <button onClick={() => { disconnect($wallets$?.[0]) }>Disconnect</button>
  </div>
{:else}
  <div>
    <button
      onClick={connect}>
      Connect
    </button>
  </div>
{/if}
`,
    showCopyCode: true,
    code: '<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">js</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./onboard.js</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// Subscribe to wallet updates</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> wallets$ </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">select</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">wallets</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// The first wallet in the array of connected wallets</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">$</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> connectedAccount </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">$</span><span style="color: #A6ACCD">wallets$</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">[</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">accounts</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">[</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">$</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> account </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> connectedAccount</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">ens</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">name</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">?</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">ens</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> connectedAccount</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">ens</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">address</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> connectedAccount</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">address</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">address</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> connectedAccount</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">address </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connect </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">async</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #F07178">()</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> disconnect </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">({</span><span style="color: #A6ACCD"> label </span><span style="color: #89DDFF">})</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">disconnectWallet</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">label</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF">{#</span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">$</span><span style="color: #A6ACCD">wallets$</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">[</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">provider</span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">img</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">={</span><span style="color: #A6ACCD">ens</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">avatar</span><span style="color: #89DDFF">} </span><span style="color: #C792EA">alt</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">ENS Avatar</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> /&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;{</span><span style="color: #A6ACCD"> ens</span><span style="color: #89DDFF">?.</span><span style="color: #A6ACCD">name </span><span style="color: #89DDFF">?</span><span style="color: #A6ACCD"> ens</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name </span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> address </span><span style="color: #89DDFF">}&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Connected to </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD">wallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">label</span><span style="color: #89DDFF">}&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">onClick</span><span style="color: #89DDFF">={()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #82AAFF">disconnect</span><span style="color: #F07178">(</span><span style="color: #89DDFF">$</span><span style="color: #A6ACCD">wallets$</span><span style="color: #89DDFF">?.</span><span style="color: #F07178">[</span><span style="color: #F78C6C">0</span><span style="color: #F07178">]) </span><span style="color: #89DDFF">}&gt;</span><span style="color: #A6ACCD">Disconnect</span><span style="color: #89DDFF">&lt;/</span><span style="color: #A6ACCD">button</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;/</span><span style="color: #A6ACCD">div</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178">:</span><span style="color: #89DDFF; font-style: italic">else</span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  &lt;</span><span style="color: #FFCB6B">div</span><span style="color: #A6ACCD">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD">button</span></span>\n<span class="line"><span style="color: #A6ACCD">      onClick</span><span style="color: #89DDFF">={</span><span style="color: #A6ACCD">connect</span><span style="color: #89DDFF">}&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">      Connect</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #A6ACCD">button</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;/</span><span style="color: #A6ACCD">div</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #89DDFF">{/</span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #89DDFF">}</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}`;
});
const Connect_wallet = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $frontmatter, $$unsubscribe_frontmatter;
  $$unsubscribe_frontmatter = subscribe(frontmatter, (value) => $frontmatter = value);
  const frameworks = ["react", "svelte"];
  $$unsubscribe_frontmatter();
  return `<h1>${escape($frontmatter.title)}</h1>
${validate_component(ConnectWallet, "ConnectWallet").$$render($$result, {}, {}, {})}
<div class="${"w-full h-5"}"></div>
${validate_component(Tabs, "Tabs").$$render($$result, { values: frameworks }, {}, {
    default: () => {
      return `${validate_component(TabPanel, "TabPanel").$$render($$result, { value: "react" }, {}, {
        default: () => {
          return `${validate_component(ReactConnectWallet, "ReactConnectWallet").$$render($$result, {}, {}, {})}`;
        }
      })}
  ${validate_component(TabPanel, "TabPanel").$$render($$result, { value: "svelte" }, {}, {
        default: () => {
          return `${validate_component(SvelteConnectWallet, "SvelteConnectWallet").$$render($$result, {}, {}, {})}`;
        }
      })}`;
    }
  })}`;
});
export { Connect_wallet as default };

import { c as create_ssr_component, v as validate_component } from "../../../../chunks/index-8615df27.js";
import { C as CodeFence } from "../../../../chunks/CodeFence-7825ab22.js";
import "clsx";
import { C as CodeInline } from "../../../../chunks/CodeInline-cb589915.js";
import { L as Link } from "../../../../chunks/Link-6f161fc2.js";
import { A as Admonition } from "../../../../chunks/Admonition-16022ae4.js";
/* empty css                                                                 */import { T as Tabs, a as TabPanel } from "../../../../chunks/Tabs-dd4460a7.js";
import "../../../../chunks/contexts-8ef4e4d1.js";
import "../../../../chunks/ssr-eca022de.js";
const Core = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `<h1>@web3-onboard/core</h1>
<p>This is the core package that contains all of the UI and logic to be able to seamlessly connect user&#39;s wallets to your app and track the state of those wallets. Onboard no longer contains any wallet specific code, so wallets need to be passed in upon initialization.</p>
<h2 id="${"install"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#install",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Install</h2>
<p>Install the core module:</p>
${validate_component(Tabs, "Tabs").$$render($$result, { values: ["yarn", "npm"] }, {}, {
    default: () => {
      return `${validate_component(TabPanel, "TabPanel").$$render($$result, { value: "yarn" }, {}, {
        default: () => {
          return `${validate_component(CodeFence, "CodeFence").$$render($$result, {
            lang: "bash",
            ext: "sh",
            linesCount: 2,
            rawCode: "yarn add @web3-onboard/core\n",
            showCopyCode: true,
            code: '<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/core</span></span>\n<span class="line"></span></code></pre>'
          }, {}, {})}`;
        }
      })}
  ${validate_component(TabPanel, "TabPanel").$$render($$result, { value: "npm" }, {}, {
        default: () => {
          return `${validate_component(CodeFence, "CodeFence").$$render($$result, {
            lang: "bash",
            ext: "sh",
            linesCount: 2,
            rawCode: "npm install @web3-onboard/core\n",
            showCopyCode: true,
            code: '<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/core</span></span>\n<span class="line"></span></code></pre>'
          }, {}, {})}`;
        }
      })}`;
    }
  })}
<p>If you would like to support all wallets, then you can install all of the wallet modules:</p>
${validate_component(Tabs, "Tabs").$$render($$result, { values: ["yarn", "npm"] }, {}, {
    default: () => {
      return `${validate_component(TabPanel, "TabPanel").$$render($$result, { value: "yarn" }, {}, {
        default: () => {
          return `${validate_component(CodeFence, "CodeFence").$$render($$result, {
            lang: "bash",
            ext: "sh",
            linesCount: 2,
            rawCode: "yarn add @web3-onboard/injected-wallets @web3-onboard/coinbase @web3-onboard/ledger @web3-onboard/trezor @web3-onboard/keepkey @web3-onboard/walletconnect @web3-onboard/web3auth @web3-onboard/torus @web3-onboard/portis @web3-onboard/mew @web3-onboard/gnosis @web3-onboard/magic @web3-onboard/fortmatic @web3-onboard/dcent\n",
            showCopyCode: true,
            code: '<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/injected-wallets @web3-onboard/coinbase @web3-onboard/ledger @web3-onboard/trezor @web3-onboard/keepkey @web3-onboard/walletconnect @web3-onboard/web3auth @web3-onboard/torus @web3-onboard/portis @web3-onboard/mew @web3-onboard/gnosis @web3-onboard/magic @web3-onboard/fortmatic @web3-onboard/dcent</span></span>\n<span class="line"></span></code></pre>'
          }, {}, {})}`;
        }
      })}
  ${validate_component(TabPanel, "TabPanel").$$render($$result, { value: "npm" }, {}, {
        default: () => {
          return `${validate_component(CodeFence, "CodeFence").$$render($$result, {
            lang: "bash",
            ext: "sh",
            linesCount: 2,
            rawCode: "npm install @web3-onboard/injected-wallets @web3-onboard/coinbase @web3-onboard/ledger @web3-onboard/trezor @web3-onboard/keepkey @web3-onboard/walletconnect @web3-onboard/web3auth @web3-onboard/torus @web3-onboard/portis @web3-onboard/mew @web3-onboard/gnosis @web3-onboard/magic @web3-onboard/fortmatic @web3-onboard/dcent\n",
            showCopyCode: true,
            code: '<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/injected-wallets @web3-onboard/coinbase @web3-onboard/ledger @web3-onboard/trezor @web3-onboard/keepkey @web3-onboard/walletconnect @web3-onboard/web3auth @web3-onboard/torus @web3-onboard/portis @web3-onboard/mew @web3-onboard/gnosis @web3-onboard/magic @web3-onboard/fortmatic @web3-onboard/dcent</span></span>\n<span class="line"></span></code></pre>'
          }, {}, {})}`;
        }
      })}`;
    }
  })}
${validate_component(Admonition, "Admonition").$$render($$result, { type: "note" }, {}, {
    default: () => {
      return `<ul><li>MEW wallet currently fails to install on M1 macs</li>
<li>All wallet modules (except for ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "injected-wallets" }, {}, {})}) require extra dependencies and may require polyfilling the node built in modules for the browser. See the ${validate_component(Link, "Link").$$render($$result, { href: "#build-environments" }, {}, {
        default: () => {
          return `Build Environments`;
        }
      })} section for more info</li>
<li><strong>If using React</strong> you may be interested in checking out the React Hooks package here - https://www.npmjs.com/package/@web3-onboard/react</li>
<li><strong>If using Vue</strong> you may be interested in checking out the Vue package here - https://www.npmjs.com/package/@web3-onboard/vue</li></ul>`;
    }
  })}
<h2 id="${"initialization"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#initialization",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Initialization</h2>
<p>Onboard needs to be initialized with an options object before the API can be used:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 10,
    code: '<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">InitOptions</span><span style="color: #A6ACCD"> {</span></span>\n<span class="line"><span style="color: #A6ACCD">  wallets: WalletInit[]</span></span>\n<span class="line"><span style="color: #A6ACCD">  chains: Chain[]</span></span>\n<span class="line"><span style="color: #A6ACCD">  appMetadata?: AppMetadata</span></span>\n<span class="line"><span style="color: #A6ACCD">  i18n?: i18nOptions</span></span>\n<span class="line"><span style="color: #A6ACCD">  accountCenter?: AccountCenterOptions</span></span>\n<span class="line"><span style="color: #A6ACCD">  apiKey?: string</span></span>\n<span class="line"><span style="color: #A6ACCD">  notify?: Partial</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">NotifyOptions</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">}</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h3 id="${"options"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#options",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Options</h3>
<p><strong>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "wallets" }, {}, {})}</strong>
An array of wallet modules that you would like to be presented to the user to select from when connecting a wallet. A wallet module is an abstraction that allows for easy interaction without needing to know the specifics of how that wallet works and are separate packages that can be included.</p>
<p><strong>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "chains" }, {}, {})}</strong>
An array of Chains that your app supports:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 12,
    code: '<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Chain</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ChainId</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// hex encoded string, eg &#39;0x1&#39; for Ethereum Mainnet</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">namespace</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">evm</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// string indicating chain namespace. Defaults to &#39;evm&#39; but will allow other chain namespaces in the future</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// used for network requests</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// used for display, eg Ethereum Mainnet</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TokenSymbol</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the native token symbol, eg ETH, BNB, MATIC</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">color</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the color used to represent the chain and will be used as a background for the icon</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the icon to represent the chain</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">publicRpcUrl</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// an optional public RPC used when adding a new chain config to the wallet</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">blockExplorerUrl</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// also used when adding a new config to the wallet</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p><strong>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "appMetadata" }, {}, {})}</strong>
An object that defines your app:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 23,
    code: '<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AppMetadata</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// app name</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// SVG icon string, with height or width (whichever is larger) set to 100% or a valid image URL</span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// note: if using an emoji make sure to send base64 string</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// Optional wide format logo (ie icon and text) to be displayed in the sidebar of connect modal. Defaults to icon if not provided</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">logo</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// description of app</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">description</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// url to a getting started guide for app</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">gettingStartedGuide</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// url that points to more information about app</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">explore</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// if your app only supports injected wallets and when no injected wallets detected, recommend the user to install some</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">recommendedInjectedWallets</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">RecommendedInjectedWallets</span><span style="color: #A6ACCD">[]</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">RecommendedInjectedWallets</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// display name</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">url</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// link to download wallet</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p><strong>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "i18n" }, {}, {})}</strong>
An object that defines the display text for different locales. Can also be used to override the default text. To override the default text, pass in a object for the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "en" }, {}, {})} locale.</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 3,
    code: '<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Locale</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// eg &#39;en&#39;, &#39;es&#39;</span></span>\n<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">i18nOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Record</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Locale</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">i18n</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p>To see a list of all of the text values that can be internationalized or replaced, check out the ${validate_component(Link, "Link").$$render($$result, {
    href: "https://github.com/blocknative/web3-onboard/blob/v2-web3-onboard-develop/packages/core/src/i18n/en.json",
    target: "_blank",
    rel: "noopener noreferrer"
  }, {}, {
    default: () => {
      return `default en file`;
    }
  })}.
Onboard is using the ${validate_component(Link, "Link").$$render($$result, {
    href: "https://formatjs.io/docs/core-concepts/icu-syntax/",
    target: "_blank",
    rel: "noopener noreferrer"
  }, {}, {
    default: () => {
      return `ICU syntax`;
    }
  })} for formatting under the hood.</p>
<p><strong>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "accountCenter" }, {}, {})}</strong>
An object that defines whether the account center UI (default and minimal) is enabled and it&#39;s position on the screen. Currently the account center is enabled for both desktop and mobile devices.</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 15,
    code: '<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenter</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">position</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterPosition</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// default: &#39;topRight&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">expanded</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// default: true</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">minimal</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// enabled by default for mobile</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">containerElement</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// defines the DOM container element for svelte to attach</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">desktop</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Omit</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">AccountCenter</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">expanded</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">mobile</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Omit</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">AccountCenter</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">expanded</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterPosition</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomLeft</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topLeft</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p><strong>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "notify" }, {}, {})}</strong>
Notify provides by default transaction notifications for all connected wallets on the current blockchain. When switching chains the previous chain listeners remain active for 60 seconds to allow capture and report of an remaining transactions that may be in flight.
By default transaction notifications are captured if a DAppID is provided in the Onboard config along with the Account Center being enabled.
An object that defines whether transaction notifications will display (defaults to true if an API key is provided). This object contains an ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "enabled" }, {}, {})} flag prop and an optional ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "transactionHandler" }, {}, {})} which is a callback that can disable or allow customizations of notifications.
Currently notifications are positioned in the same location as the account center (either below, if the Account Center is positioned along the top, or above if positioned on the bottom of the view).
The ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "transactionHandler" }, {}, {})} can react off any property of the Ethereum TransactionData returned to the callback from the event (see console.log in example init). In turn, it can return a Custom ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "Notification" }, {}, {})} object to define the verbiage, styling, or add functionality:</p>
<ul><li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "Notification.message" }, {}, {})} - to completely customize the message shown</li>
<li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "Notification.eventCode" }, {}, {})} - handle codes in your own way - see codes here under the notify prop ${validate_component(Link, "Link").$$render($$result, {
    href: "https://github.com/blocknative/web3-onboard/blob/v2-web3-onboard-develop/packages/core/src/i18n/en.json",
    target: "_blank",
    rel: "noopener noreferrer"
  }, {}, {
    default: () => {
      return `default en file here`;
    }
  })}</li>
<li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "Notification.type" }, {}, {})} - icon type displayed (see ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "NotificationType" }, {}, {})} below for options)</li>
<li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "Notification.autoDismiss" }, {}, {})} - time (in ms) after which the notification will be dismissed. If set to ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "0" }, {}, {})} the notification will remain on screen until the user dismisses the notification, refreshes the page or navigates away from the site with the notifications</li>
<li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "Notification.link" }, {}, {})} - add link to the transaction hash. For instance, a link to the transaction on etherscan</li>
<li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "Notification.onClick()" }, {}, {})} - onClick handler for when user clicks the notification element</li></ul>
<p>Notify can also be styled by using the CSS variables found below. These are setup to allow maximum customization with base styling variables setting the global theme (i.e. ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "--onboard-grey-600" }, {}, {})}) along with more precise component level styling variables available (${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "--notify-onboard-grey-600" }, {}, {})}) with the latter taking precedent if defined</p>
<p>If notifications are enabled the notifications can be handled through onboard app state as seen below.</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 8,
    code: '<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> wallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">select</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">notifications</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> unsubscribe </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> wallets</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subscribe</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">update</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">  console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">transaction notifications: </span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> update)</span></span>\n<span class="line"><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">// unsubscribe when updates are no longer needed</span></span>\n<span class="line"><span style="color: #82AAFF">unsubscribe</span><span style="color: #A6ACCD">()</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 58,
    code: '<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">NotifyOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">desktop</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notify</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">mobile</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notify</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notify</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// default: true</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/**</span></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">   * Callback that receives all transaction events</span></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">   * Return a custom notification based on the event</span></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">   * Or return false to disable notification for this event</span></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">   * Or return undefined for a default notification</span></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">   */</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">transactionHandler</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">event</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">EthereumTransactionData</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TransactionHandlerReturn</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CommonPositions</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CommonPositions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomLeft</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topLeft</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TransactionHandlerReturn</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNotification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNotification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Partial</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Omit</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Notification</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">id</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">startTime</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">&gt;&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">key</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">type</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">NotificationType</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">network</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Network</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">startTime</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">eventCode</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">message</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">autoDismiss</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">link</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">onClick</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">event</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Event</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">NotificationType</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">pending</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">error</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">hint</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">declare</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Network</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">main</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">testnet</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ropsten</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">rinkeby</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">goerli</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">kovan</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">xdai</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bsc-main</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">matic-main</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">fantom-main</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">matic-mumbai</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">local</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">interface</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UpdateNotification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">notificationObject</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNotification</span><span style="color: #89DDFF">):</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">dismiss</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">update</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UpdateNotification</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h3 id="${"initialization-example"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#initialization-example",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Initialization Example</h3>
<p>Putting it all together, here is an example initialization with the injected wallet modules:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 121,
    code: '<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/{INFURA_ID}</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x3</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">tROP</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Ropsten Testnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://ropsten.infura.io/v3/{INFURA_ID}</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x4</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">rETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Rinkeby Testnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://rinkeby.infura.io/v3/{INFURA_ID}</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x38</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">BNB</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Binance Smart Chain</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://bsc-dataseed.binance.org/</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x89</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MATIC</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Matic Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://matic-mainnet.chainstacklabs.com</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0xfa</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">FTM</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Fantom Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://rpc.ftm.tools/</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  ]</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">appMetadata</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Token Swap</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> myIcon</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// svg string icon</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">logo</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> myLogo</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// svg string logo</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">description</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Swap tokens for other tokens</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">recommendedInjectedWallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MetaMask</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">url</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://metamask.io</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Coinbase</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">url</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://wallet.coinbase.com/</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">    ]</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">apiKey</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">xxx387fb-bxx1-4xxc-a0x3-9d37e426xxxx</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  notify: </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">desktop</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #82AAFF">transactionHandler</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> transaction </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">transaction</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>\n<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">transaction</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">eventCode</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">txPool</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">          </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">            type</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #F07178">            message</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Your transaction from #1 DApp is in the mempool</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #F07178">          </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomLeft</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">mobile</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #82AAFF">transactionHandler</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> transaction </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">transaction</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>\n<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">transaction</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">eventCode</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">txPool</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">          </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">            type</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #F07178">            message</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Your transaction from #1 DApp is in the mempool</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #F07178">          </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">accountCenter</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">desktop</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">minimal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">mobile</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">minimal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">i18n</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">en</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">connect</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">selectingWallet</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">header</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">custom text header</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">notify</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">transaction</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">txStuck</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">custom text for this notification event</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">watched</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #89DDFF">          </span><span style="color: #464B5D; font-style: italic">// Any words in brackets can be re-ordered or removed to fit your dapps desired verbiage</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">&quot;</span><span style="color: #F07178">txPool</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Your account is {verb} {formattedValue} {asset} {preposition} {counterpartyShortened}</span><span style="color: #89DDFF">&quot;</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">es</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">transaction</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">txRequest</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Su transacci\xF3n est\xE1 esperando que confirme</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h2 id="${"connecting-a-wallet"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#connecting-a-wallet",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Connecting a Wallet</h2>
<p>To initiate a user to select and connect a wallet you can call the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "connectWallet" }, {}, {})} function on an initialized Onboard instance. It will return a ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "Promise" }, {}, {})} that will resolve when the user either successfully connects a wallet, or when they dismiss the UI. The resolved value from the promise will be the latest state of the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "wallets" }, {}, {})} array. The order of the wallets array is last to first, so the most recently selected wallet will be the first item in the array and can be thought of as the &quot;primary wallet&quot;. If no wallet was selected, then the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "wallets" }, {}, {})} array will have the same state as it had before calling ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "connectWallet" }, {}, {})}.</p>
<h3 id="${"example"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#example",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Example</h3>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 7,
    code: '<pre><code><span class="line"><span style="color: #C792EA">async</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">connectWallet</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallets</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #F07178">()</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">wallets</span><span style="color: #F07178">)</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h3 id="${"auto-selecting-a-wallet"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#auto-selecting-a-wallet",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Auto Selecting a Wallet</h3>
<p>A common UX pattern is to remember the wallet(s) that a user has previously connected by storing them in localStorage and then automatically selecting them for the user next time they visit your app.
You could enable this in your app by first syncing the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "wallets" }, {}, {})} array to localStorage:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 12,
    code: '<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> walletsSub </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">select</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">wallets</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> unsubscribe </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> walletsSub</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subscribe</span><span style="color: #A6ACCD">(wallets </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectedWallets</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallets</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">map</span><span style="color: #F07178">(</span><span style="color: #89DDFF">({</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">label</span><span style="color: #F07178"> </span><span style="color: #89DDFF">})</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">label</span><span style="color: #F07178">)</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">localStorage</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setItem</span><span style="color: #F07178">(</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">connectedWallets</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">JSON</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">stringify</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">connectedWallets</span><span style="color: #F07178">)</span></span>\n<span class="line"><span style="color: #F07178">  )</span></span>\n<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">// Don&#39;t forget to unsubscribe when your app or component un mounts to prevent memory leaks</span></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">// unsubscribe()</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p>Now that you have the most recent wallets connected saved in local storage, you can auto select those wallet(s) when your app loads:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 20,
    code: '<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> previouslyConnectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> JSON</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">parse</span><span style="color: #A6ACCD">(</span></span>\n<span class="line"><span style="color: #A6ACCD">  window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">localStorage</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getItem</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">connectedWallets</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> (previouslyConnectedWallets) </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// Connect the most recently connected wallet (first in the array)</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> autoSelect</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">previouslyConnectedWallets</span><span style="color: #F07178">[</span><span style="color: #F78C6C">0</span><span style="color: #F07178">] </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// You can also auto connect &quot;silently&quot; and disable all onboard modals to avoid them flashing on page load</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">    autoSelect</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> label</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">previouslyConnectedWallets</span><span style="color: #F07178">[</span><span style="color: #F78C6C">0</span><span style="color: #F07178">]</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> disableModals</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// OR - loop through and initiate connection for all previously connected wallets</span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// note: This UX might not be great as the user may need to login to each wallet one after the other</span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// for (walletLabel in previouslyConnectedWallets) {</span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">//   await onboard.connectWallet({ autoSelect: walletLabel })</span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// }</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h2 id="${"disconnecting-a-wallet"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#disconnecting-a-wallet",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Disconnecting a Wallet</h2>
<p>A wallet can be disconnected, which will cleanup any background operations the wallet may be doing and will also remove it from the Onboard ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "wallets" }, {}, {})} array:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 4,
    code: '<pre><code><span class="line"><span style="color: #464B5D; font-style: italic">// disconnect the first wallet in the wallets array</span></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">primaryWallet</span><span style="color: #89DDFF">]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #A6ACCD">()</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">wallets</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">disconnectWallet</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> primaryWallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">label </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p>The ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "disconnectWallet" }, {}, {})} method takes the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "wallet.label" }, {}, {})} value and returns a ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "Promise" }, {}, {})} that resolves to the current state of the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "wallets" }, {}, {})} array.</p>
<h2 id="${"state"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#state",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} State</h2>
<p>Onboard currently keeps track of the following state:</p>
<ul><li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "wallets" }, {}, {})}: The wallets connected to Onboard</li>
<li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "chains" }, {}, {})}: The chains that Onboard has been initialized with</li>
<li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "accountCenter" }, {}, {})}: The current state of the account center UI</li>
<li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "walletModules" }, {}, {})}: The wallet modules that are currently set and will be rendered in the wallet selection modal</li></ul>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 67,
    code: '<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AppState</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletState</span><span style="color: #A6ACCD">[]</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Chain</span><span style="color: #A6ACCD">[]</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">accountCenter</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenter</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">walletModules</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletModule</span><span style="color: #A6ACCD">[]</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">locale</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Locale</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">notify</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notify</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">notifications</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notification</span><span style="color: #A6ACCD">[]</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Chain</span><span style="color: #A6ACCD"> {</span></span>\n<span class="line"><span style="color: #A6ACCD">  namespace</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">evm</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> ChainId</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> string</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> string</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> TokenSymbol</span></span>\n<span class="line"><span style="color: #A6ACCD">  color</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> string</span></span>\n<span class="line"><span style="color: #A6ACCD">  icon</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> string</span></span>\n<span class="line"><span style="color: #A6ACCD">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletState</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">provider</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">EIP1193Provider</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">accounts</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Account</span><span style="color: #A6ACCD">[]</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ConnectedChain</span><span style="color: #A6ACCD">[]</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">instance</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">unknown</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Account</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">address</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">ens</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">name</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">avatar</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">contentHash</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">getText</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">key</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">undefined</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">balance</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Record</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">TokenSymbol</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ConnectedChain</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">namespace</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">evm</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ChainId</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ChainId</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TokenSymbol</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenter</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterPosition</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">expanded</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">minimal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterPosition</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomRight</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomLeft</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topLeft</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">WalletModule</span><span style="color: #A6ACCD"> {</span></span>\n<span class="line"><span style="color: #A6ACCD">  label: string</span></span>\n<span class="line"><span style="color: #A6ACCD">  getIcon: () </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD">&gt; </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #FFCB6B">getInterface</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">helpers</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">GetInterfaceHelpers</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">WalletInterface</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">}</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h3 id="${"get-current-state"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#get-current-state",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Get Current State</h3>
<p>The current state of Onboard can be accessed at any time using the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "state.get()" }, {}, {})} method:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 2,
    code: '<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> currentState </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #A6ACCD">()</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h3 id="${"subscribe-to-state-updates"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#subscribe-to-state-updates",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Subscribe to State Updates</h3>
<p>State can also be subscribed to using the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "state.select()" }, {}, {})} method. The ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "select" }, {}, {})} method will return an ${validate_component(Link, "Link").$$render($$result, {
    href: "https://rxjs.dev/guide/observable",
    target: "_blank",
    rel: "noopener noreferrer"
  }, {}, {
    default: () => {
      return `RXJS Observable`;
    }
  })}. Understanding of RXJS observables is not necessary to subscribe to state updates, but allows for composable functionality if wanted. The key point to understand is that if you subscribe for updates, remember to unsubscribe when you are finished to prevent memory leaks.</p>
<p>To subscribe to all state updates, call the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "select" }, {}, {})} method with no arguments:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 8,
    code: '<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> state </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">select</span><span style="color: #A6ACCD">()</span></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> unsubscribe </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subscribe</span><span style="color: #A6ACCD">(update </span><span style="color: #C792EA">=&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">  console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">state update: </span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> update)</span></span>\n<span class="line"><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">// remember to unsubscribe when updates are no longer needed</span></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">// unsubscribe()</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p>Specific top level slices of state can be subscribed to. For example you may want to just subscribe to receive updates to the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "wallets" }, {}, {})} array only:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 8,
    code: '<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> wallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">select</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">wallets</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> unsubscribe </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> wallets</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subscribe</span><span style="color: #A6ACCD">(update </span><span style="color: #C792EA">=&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">  console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">wallets update: </span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> update)</span></span>\n<span class="line"><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">// unsubscribe when updates are no longer needed</span></span>\n<span class="line"><span style="color: #82AAFF">unsubscribe</span><span style="color: #A6ACCD">()</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h3 id="${"actions-to-modify-state"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#actions-to-modify-state",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Actions to Modify State</h3>
<p>A limited subset of internal actions are exposed to update the Onboard state.</p>
<p><strong>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "setWalletModules" }, {}, {})}</strong>
For updating the wallets that are displayed in the wallet selection modal. This can be used if the wallets you want to support is conditional on another user action within your app. The ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "setWalletModules" }, {}, {})} action is called with an updated array of wallets (the same wallets that are passed in on initialization)</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 29,
    code: '<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> ledgerModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/ledger</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> trezorModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/trezor</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> ledger </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">ledgerModule</span><span style="color: #A6ACCD">()</span></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> trezor </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">trezorModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">email</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;EMAIL_CONTACT&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">appUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;APP_URL&gt;</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">// initialize with injected and hardware wallets</span></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> trezor</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> ledger]</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #89DDFF">      </span><span style="color: #464B5D; font-style: italic">// Only one RPC required</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/</span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">INFURA_KEY</span><span style="color: #89DDFF">}`</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">||</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">https://eth-mainnet.g.alchemy.com/v2/</span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">ALCHEMY_KEY</span><span style="color: #89DDFF">}`</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  ]</span></span>\n<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">// then after a user action, you may decide to only display hardware wallets on the next call to onboard.connectWallet</span></span>\n<span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setWalletModules</span><span style="color: #A6ACCD">([ledger</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> trezor])</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p><strong>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "updateBalances" }, {}, {})}</strong>
You may decide to get updated balances for connected wallets after a user action by calling the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "updatedBalances" }, {}, {})} function, which expects a conditional array of addresses:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 7,
    code: '<pre><code><span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">updateBalances</span><span style="color: #A6ACCD">() </span><span style="color: #464B5D; font-style: italic">// update all balances for all connected addresses</span></span>\n<span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">updateBalances</span><span style="color: #A6ACCD">([</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0xfdadfadsadsadsadasdsa</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]) </span><span style="color: #464B5D; font-style: italic">// update balance for one address</span></span>\n<span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">updateBalances</span><span style="color: #A6ACCD">([</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0xfdadfadsadsadsadasdsa</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0xfdsafdsfdsfdsfds</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">]) </span><span style="color: #464B5D; font-style: italic">// update balance for two addresses</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p><strong>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "setLocale" }, {}, {})}</strong>
Onboard will automatically detect the browser locale at runtime, but if you would like to update it manually you can call the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "setLocale" }, {}, {})} function:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 2,
    code: '<pre><code><span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setLocal</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">fr_FR</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p><strong>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "updateNotify" }, {}, {})}</strong>
If you need to update your notify configuration after initialization, you can do that by calling the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "updateNotify" }, {}, {})} function:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 29,
    code: '<pre><code><span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">updateNotify</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">desktop</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">transactionHandler</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> transaction </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">      </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">transaction</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>\n<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">transaction</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">eventCode</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">txPool</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">          type</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #F07178">          message</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Your transaction from #1 DApp is in the mempool</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomLeft</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">mobile</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">transactionHandler</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> transaction </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">      </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">transaction</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>\n<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">transaction</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">eventCode</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">txPool</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">          type</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #F07178">          message</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Your transaction from #1 DApp is in the mempool</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p><strong>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "customNotification" }, {}, {})}</strong>
Notify can be used to deliver custom DApp notifications by passing a ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "CustomNotification" }, {}, {})} object to the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "customNotification" }, {}, {})} action. This will return an ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "UpdateNotification" }, {}, {})} type.
This ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "UpdateNotification" }, {}, {})} will return an ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "update" }, {}, {})} function that can be passed a new ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "CustomNotification" }, {}, {})} to update the existing notification.
The ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "customNotification" }, {}, {})} method also returns a ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "dismiss" }, {}, {})} method that is called without any parameters to dismiss the notification.</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 16,
    code: '<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> update</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> dismiss </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">customNotification</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">type</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">pending</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">message</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">This is a custom DApp pending notification to use however you want</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">autoDismiss</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span></span>\n<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"><span style="color: #82AAFF">setTimeout</span><span style="color: #A6ACCD">(</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">update</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">eventCode</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">dbUpdateSuccess</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">message</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Updated status for custom notification</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">type</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">autoDismiss</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">8000</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F78C6C">4000</span></span>\n<span class="line"><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p><strong>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "preflightNotifications" }, {}, {})}</strong>
Notify can be used to deliver standard notifications along with preflight information by passing a ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "PreflightNotificationsOptions" }, {}, {})} object to the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "preflightNotifications" }, {}, {})} action. This will return a a promise that resolves to the transaction hash (if ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "sendTransaction" }, {}, {})} resolves the transaction hash and is successful), the internal notification id (if no ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "sendTransaction" }, {}, {})} function is provided) or return nothing if an error occurs or ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "sendTransaction" }, {}, {})} is not provided or doesn&#39;t resolve to a string.</p>
<p>Preflight event types include</p>
<ul><li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "txRequest" }, {}, {})} : Alert user there is a transaction request awaiting confirmation by their wallet</li>
<li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "txAwaitingApproval" }, {}, {})} : A previous transaction is awaiting confirmation</li>
<li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "txConfirmReminder" }, {}, {})} : Reminder to confirm a transaction to continue - configurable with the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "txApproveReminderTimeout" }, {}, {})} property; defaults to 15 seconds</li>
<li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "nsfFail" }, {}, {})} : The user has insufficient funds for transaction (requires ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "gasPrice" }, {}, {})}, ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "estimateGas" }, {}, {})}, ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "balance" }, {}, {})}, ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "txDetails.value" }, {}, {})})</li>
<li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "txError" }, {}, {})} : General transaction error (requires ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "sendTransaction" }, {}, {})})</li>
<li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "txSendFail" }, {}, {})} : The user rejected the transaction (requires ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "sendTransaction" }, {}, {})})</li>
<li>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "txUnderpriced" }, {}, {})} : The gas price for the transaction is too low (requires ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "sendTransaction" }, {}, {})})</li></ul>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 13,
    code: '<pre><code><span class="line"><span style="color: #C792EA">interface</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">PreflightNotificationsOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">sendTransaction</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">estimateGas</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">gasPrice</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">string</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">balance</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">txDetails</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">value</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">to</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">from</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">txApproveReminderTimeout</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// defaults to 15 seconds if not specified</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 27,
    code: '<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> balanceValue </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">values</span><span style="color: #A6ACCD">(balance)[</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">]</span></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> ethersProvider </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> ethers</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">providers</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Web3Provider</span><span style="color: #A6ACCD">(provider</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">any</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> signer </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> ethersProvider</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getSigner</span><span style="color: #A6ACCD">()</span></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> txDetails </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">to</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> toAddress</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">value</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">100000000000000</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> sendTransaction </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">signer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sendTransaction</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">txDetails</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">tx</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">tx</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">hash</span><span style="color: #F07178">)</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> gasPrice </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> ethersProvider</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getGasPrice</span><span style="color: #A6ACCD">()</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #A6ACCD">(res </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toString</span><span style="color: #A6ACCD">())</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> estimateGas </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethersProvider</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">estimateGas</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">txDetails</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">res</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toString</span><span style="color: #F07178">())</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> transactionHash </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">preflightNotifications</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  sendTransaction</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  gasPrice</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  estimateGas</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">balance</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> balanceValue</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">txDetails</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> txDetails</span></span>\n<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(transactionHash)</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p><strong>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "updateAccountCenter" }, {}, {})}</strong>
If you need to update your Account Center configuration after initialization, you can call the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "updateAccountCenter" }, {}, {})} function with the new configuration</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 6,
    code: '<pre><code><span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">updateAccountCenter</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">minimal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>\n<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p><strong>${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "setPrimaryWallet" }, {}, {})}</strong>
The primary wallet (first in the list of connected wallets) and primary account (first in the list of connected accounts for a wallet) can be set by using the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "setPrimaryWallet" }, {}, {})} function. The wallet that is set needs to be passed in for the first parameter and if you would like to set the primary account, the address of that account also needs to be passed in:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 10,
    code: '<pre><code><span class="line"><span style="color: #464B5D; font-style: italic">// set the second wallet in the wallets array as the primary</span></span>\n<span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setPrimaryWallet</span><span style="color: #A6ACCD">(wallets[</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">])</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">// set the second wallet in the wallets array as the primary wallet</span></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">// as well as setting the third account in that wallet as the primary account</span></span>\n<span class="line"><span style="color: #A6ACCD">onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">actions</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setPrimaryWallet</span><span style="color: #A6ACCD">(</span></span>\n<span class="line"><span style="color: #A6ACCD">  wallets[</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  wallets[</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">accounts[</span><span style="color: #F78C6C">2</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">address</span></span>\n<span class="line"><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h2 id="${"setting-the-user-s-chain-network"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#setting-the-user-s-chain-network",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Setting the User&#39;s Chain/Network</h2>
<p>When initializing Onboard you define a list of chains/networks that your app supports. If you would like to prompt the user to switch to one of those chains, you can use the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "setChain" }, {}, {})} method on an initialized instance of Onboard:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "typescript",
    ext: "ts",
    linesCount: 9,
    code: '<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">SetChain</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">options</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">SetChainOptions</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">boolean</span><span style="color: #89DDFF">&gt;</span></span>\n<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">SetChainOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chainId</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// hex encoded string</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chainNamespace</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">evm</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// defaults to &#39;evm&#39; (currently the only valid value, but will add more in future updates)</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallet</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the wallet.label of the wallet to set chain</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> success </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setChain</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">chainId</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x89</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<p>The ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "setChain" }, {}, {})} methods takes an options object with a ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "chainId" }, {}, {})} property hex encoded string for the chain id to switch to. The chain id must be one of the chains that Onboard was initialized with. If the wallet supports programatically adding and switching the chain, then the user will be prompted to do so, if not, then a modal will be displayed indicating to the user that they need to switch chains to continue. The ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "setChain" }, {}, {})} method returns a promise that resolves when either the user has confirmed the chain switch, or has dismissed the modal and resolves with a boolean indicating if the switch network was successful or not. The ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "setChain" }, {}, {})} method will by default switch the first wallet (the most recently connected) in the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "wallets" }, {}, {})} array. A specific wallet can be targeted by passing in the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "wallet.label" }, {}, {})} in the options object as the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "wallet" }, {}, {})} parameter.</p>
<h2 id="${"custom-styling"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#custom-styling",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Custom Styling</h2>
<p>The Onboard styles can customized via ${validate_component(Link, "Link").$$render($$result, {
    href: "https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties",
    target: "_blank",
    rel: "noopener noreferrer"
  }, {}, {
    default: () => {
      return `CSS variables`;
    }
  })}. The following properties and their default properties can be customized by adding these variables to the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: ":root" }, {}, {})} in your CSS file:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "css",
    ext: "css",
    linesCount: 199,
    code: '<pre><code><span class="line"><span style="color: #89DDFF">:</span><span style="color: #C792EA">root</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* CUSTOMIZE THE COLOR  PALLETTE */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-white</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> white</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-black</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> black</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-primary-1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">2f80ed</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-primary-100</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">eff1fc</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-primary-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">d0d4f7</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-primary-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">b1b8f2</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-primary-400</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">929bed</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-primary-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">6370e5</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-primary-600</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">454ea0</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-primary-700</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">323873</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-gray-100</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ebebed</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-gray-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">c2c4c9</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-gray-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">999ca5</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-gray-400</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">707481</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-gray-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">33394b</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-gray-600</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">242835</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-gray-700</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">1a1d26</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-success-100</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">d1fae3</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-success-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">baf7d5</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-success-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">a4f4c6</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-success-400</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">8df2b8</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-success-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">5aec99</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-success-600</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">18ce66</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-success-700</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">129b4d</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-danger-100</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffe5e6</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-danger-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffcccc</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-danger-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffb3b3</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-danger-400</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ff8080</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-danger-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ff4f4f</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-danger-600</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">cc0000</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-danger-700</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">660000</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-warning-100</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffefcc</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-warning-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffe7b3</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-warning-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffd780</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-warning-400</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffc74c</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-warning-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ffaf00</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-warning-600</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">cc8c00</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-warning-700</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">664600</span><span style="color: #89DDFF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* CUSTOMIZE ACCOUNT CENTER*/</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-z-index</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-position-top</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-position-bottom</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-position-right</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-position-left</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-minimized-background</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-maximized-upper-background</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-maximized-network-section</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-maximized-app-info-section</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-minimized-address-color</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-maximized-address-color</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-maximized-account-section-background-hover</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-maximized-action-background-hover</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-minimized-chain-select-background</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-network-selector-color</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-maximized-network-selector-color</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-minimized-network-selector-color</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-app-btn-text-color</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-app-btn-background</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-center-app-btn-font-family</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* CUSTOMIZE SECTIONS OF THE CONNECT MODAL */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-connect-content-width</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-connect-content-height</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-columns</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-connect-sidebar-background</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-connect-sidebar-color</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-connect-sidebar-progress-background</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-connect-sidebar-progress-color</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-connect-header-background</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-connect-header-color</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-main-scroll-container-background</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-link-color</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-close-button-background</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-close-button-color</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-checkbox-background</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-checkbox-color</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-button-background</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-button-background-hover</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-button-color</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-button-border-color</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-button-border-radius</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-button-box-shadow</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-wallet-app-icon-border-color</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* CUSTOMIZE THE SHARED MODAL */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-modal-background</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-modal-color</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* CUSTOMIZE THE CONNECT MODAL */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-modal-border-radius</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-modal-backdrop</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-modal-box-shadow</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* CUSTOMIZE THE ACTION REQUIRED MODAL */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-action-required-modal-background</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* FONTS */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-font-family-normal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Sofia Pro</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-font-family-semibold</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Sofia Pro Semibold</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-font-family-light</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Sofia Pro Light</span><span style="color: #89DDFF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-font-size-1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">3rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-font-size-2</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">2.25rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-font-size-3</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1.5rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-font-size-4</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1.25rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-font-size-5</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-font-size-6</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.875rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-font-size-7</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.75rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* SPACING */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-spacing-1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">3rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-spacing-2</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">2rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-spacing-3</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1.5rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-spacing-4</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-spacing-5</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.5rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* BORDER RADIUS */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-border-radius-1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">24px</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-border-radius-2</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">20px</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-border-radius-3</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">16px</span><span style="color: #89DDFF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* SHADOWS */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-shadow-0</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> none</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-shadow-1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0px</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">4px</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">12px</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">rgba</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">);</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-shadow-2</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> inset </span><span style="color: #F78C6C">0px</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">-1px</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0px</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">rgba</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* MAIN MODAL POSITIONING */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-modal-z-index</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-modal-top</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-modal-bottom</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-modal-right</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-modal-left</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* HD WALLET ACCOUNT SELECT MODAL POSITIONING */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-account-select-modal-z-index</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-account-select-modal-top</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-account-select-modal-bottom</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-account-select-modal-right</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-account-select-modal-left</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* MAGIC WALLET MODAL POSITIONING */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-z-index</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-top</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-bottom</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-right</span></span>\n<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-left</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* HARDWARE WALLET STYLES  */</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* *if not set will fallback to variables with `--onboard` prefix shown above */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* COLORS */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-white</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> white</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-black</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> black</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-primary-100</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">eff1fc</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-primary-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">d0d4f7</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-primary-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">b1b8f2</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-primary-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">6370e5</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-primary-600</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">454ea0</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-gray-100</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ebebed</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-gray-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">c2c4c9</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-gray-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">999ca5</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-gray-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">33394b</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-gray-700</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">1a1d26</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-danger-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ff4f4f</span><span style="color: #89DDFF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* FONTS */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-font-family-normal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Sofia Pro</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-font-family-light</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Sofia Pro Light</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-font-size-5</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-font-size-7</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">.75rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-font-line-height-1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">24px</span><span style="color: #89DDFF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* SPACING */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-margin-4</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"><span style="color: #A6ACCD">  --account-select-modal-margin-5</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.5rem</span><span style="color: #89DDFF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* NOTIFY STYLES */</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* Notify Positioning variables only take effect if Notify is Positioned separate of Account Center */</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-container-position-top</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-container-position-bottom</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-container-position-right</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-container-position-left</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-font-family-normal</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-font-size-5</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-gray-300</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-gray-600</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-border-radius</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-font-size-7</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-font-size-6</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-line-height-4</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-primary-100</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-primary-400</span></span>\n<span class="line"><span style="color: #A6ACCD">  --notify-onboard-main-padding</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h2 id="${"build-environments"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#build-environments",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Build Environments</h2>
<p>Many of the wallet modules require dependencies that are not normally included in browser builds (namely the node builtin modules such as ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "crypto" }, {}, {})}, ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "buffer" }, {}, {})}, ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "util" }, {}, {})} etc). If you are having build issues you can try the following bundler configs to resolve these dependency issues:</p>
<h3 id="${"webpack-4"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#webpack-4",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Webpack 4</h3>
<p>Everything should just work since the node built-ins are automatically bundled in v4</p>
<h3 id="${"webpack-5"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#webpack-5",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Webpack 5</h3>
<p>You&#39;ll need to add some dev dependencies with the following command:</p>
<p>${validate_component(CodeInline, "CodeInline").$$render($$result, {
    code: "npm i --save-dev assert buffer crypto-browserify stream-http https-browserify os-browserify process stream-browserify util"
  }, {}, {})}</p>
<p>Then add the following to your ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "webpack.config.js" }, {}, {})} file:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 27,
    code: '<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> webpack </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">webpack</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF">module.exports</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">resolve</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">alias</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">assert</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">assert</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">buffer</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">crypto-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-http</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">https</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">os</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">os-browserify/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">process</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">process/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">stream</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">util</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">util</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">experiments</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">asyncWebAssembly</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> webpack</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ProvidePlugin</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">process</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">process/browser</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">Buffer</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Buffer</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"><span style="color: #A6ACCD">  ]</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h4 id="${"if-using-create-react-app"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#if-using-create-react-app",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} If using create-react-app</h4>
<p>${validate_component(Link, "Link").$$render($$result, {
    href: "https://www.npmjs.com/package/@craco/craco",
    target: "_blank",
    rel: "noopener noreferrer"
  }, {}, {
    default: () => {
      return `CRACO`;
    }
  })} provides an easy way to override webpack config which is obfuscated in Create React App built applications.</p>
<p>The above webpack 5 example can be used in the ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "craco.config.js" }, {}, {})} file at the root level in this case.</p>
<h3 id="${"sveltekit"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#sveltekit",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} SvelteKit</h3>
<p>Add the following dev dependencies:</p>
<p>${validate_component(CodeInline, "CodeInline").$$render($$result, {
    code: "npm i --save-dev rollup-plugin-polyfill-node"
  }, {}, {})}</p>
<p>Then add the following to your ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "svelte.config.js" }, {}, {})} file:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 45,
    code: '<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> adapter </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@sveltejs/adapter-auto</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> preprocess </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">svelte-preprocess</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> nodePolyfills </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">rollup-plugin-polyfill-node</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MODE </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> process</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">env</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">NODE_ENV</span></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> development </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> MODE </span><span style="color: #89DDFF">===</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">development</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #464B5D; font-style: italic">/** </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">type</span><span style="color: #464B5D; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">import(&#39;@sveltejs/kit&#39;).Config</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #464B5D; font-style: italic"> */</span></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> config </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">preprocess</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">preprocess</span><span style="color: #A6ACCD">()</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">kit</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">adapter</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">adapter</span><span style="color: #A6ACCD">()</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">vite</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>\n<span class="line"><span style="color: #A6ACCD">        development </span><span style="color: #89DDFF">&amp;&amp;</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #82AAFF">nodePolyfills</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #F07178">include</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>\n<span class="line"><span style="color: #A6ACCD">              </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/**/*.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">              </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">RegExp</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/.vite/.*js</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"><span style="color: #A6ACCD">            ]</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"><span style="color: #A6ACCD">      ]</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">resolve</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">alias</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">crypto-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">stream</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">assert</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">assert</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">build</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">rollupOptions</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #82AAFF">nodePolyfills</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)]</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">commonjsOptions</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">transformMixedEsModules</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> config</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h3 id="${"vite"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#vite",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Vite</h3>
<p>Add the following dev dependencies:</p>
<p>${validate_component(CodeInline, "CodeInline").$$render($$result, {
    code: "npm i --save-dev rollup-plugin-polyfill-node"
  }, {}, {})}</p>
<p>Then add the following to your ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "vite.config.js" }, {}, {})} file:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 35,
    code: '<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> nodePolyfills </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">rollup-plugin-polyfill-node</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MODE </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> process</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">env</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">NODE_ENV</span></span>\n<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> development </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> MODE </span><span style="color: #89DDFF">===</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">development</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// other config options</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>\n<span class="line"><span style="color: #A6ACCD">    development </span><span style="color: #89DDFF">&amp;&amp;</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #82AAFF">nodePolyfills</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">include</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/**/*.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">RegExp</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">node_modules/.vite/.*js</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"><span style="color: #A6ACCD">        ]</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>\n<span class="line"><span style="color: #A6ACCD">  ]</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">resolve</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">alias</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">crypto-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">stream</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">stream-browserify</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">assert</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">assert</span><span style="color: #89DDFF">&#39;</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">build</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">rollupOptions</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">plugins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #82AAFF">nodePolyfills</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">crypto</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">http</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)]</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">commonjsOptions</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">transformMixedEsModules</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>\n<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}<h3 id="${"nuxt-js"}" tabindex="${"-1"}">${validate_component(Link, "Link").$$render($$result, {
    class: "header-anchor",
    href: "#nuxt-js",
    "aria-hidden": "true"
  }, {}, {
    default: () => {
      return `#`;
    }
  })} Nuxt.js</h3>
<p>Add the following to your ${validate_component(CodeInline, "CodeInline").$$render($$result, { code: "nuxt.config.js" }, {}, {})}:</p>
${validate_component(CodeFence, "CodeFence").$$render($$result, {
    lang: "javascript",
    ext: "js",
    linesCount: 4,
    code: '<pre><code><span class="line"><span style="color: #FFCB6B">build</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>\n<span class="line"><span style="color: #F07178">  </span><span style="color: #FFCB6B">standalone</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>\n<span class="line"><span style="color: #89DDFF">}</span></span>\n<span class="line"></span></code></pre>'
  }, {}, {})}`;
});
export { Core as default };

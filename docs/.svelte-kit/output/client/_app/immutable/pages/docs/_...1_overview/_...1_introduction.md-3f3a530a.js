import{S as To,i as Wo,s as Ro,e as r,t as f,k as u,w as h,c as p,a as c,h as $,d as t,m,x as _,aa as No,b as I,g as o,M as l,y,q as b,o as w,B as D,E as Ls}from"../../../chunks/index-c32358ff.js";import"../../../chunks/scroll-5387a6f1.js";import{C as Sa}from"../../../chunks/CodeFence-ac7b69e1.js";import{C as kt}from"../../../chunks/CodeInline-8df56a89.js";import{L as F}from"../../../chunks/Link-d3089e65.js";/* empty css                                                            */import{T as So,a as Mo}from"../../../chunks/Tabs-f2c9522f.js";import"../../../chunks/singletons-37dfeae3.js";import"../../../chunks/contexts-2aef7541.js";var jo="/_app/immutable/assets/connect-modal-b7439c5e.svg";function Go(d){let s;return{c(){s=f("#")},l(n){s=$(n,"#")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function Uo(d){let s;return{c(){s=f("#")},l(n){s=$(n,"#")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function Bo(d){let s;return{c(){s=f("initialization options")},l(n){s=$(n,"initialization options")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function Ho(d){let s;return{c(){s=f("#")},l(n){s=$(n,"#")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function qo(d){let s;return{c(){s=f("#")},l(n){s=$(n,"#")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function Ko(d){let s,n;return s=new Sa({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/core @web3-onboard/injected-wallets ethers
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/core @web3-onboard/injected-wallets ethers</span></span>
<span class="line"></span></code></pre>`}}),{c(){h(s.$$.fragment)},l(i){_(s.$$.fragment,i)},m(i,v){y(s,i,v),n=!0},p:Ls,i(i){n||(b(s.$$.fragment,i),n=!0)},o(i){w(s.$$.fragment,i),n=!1},d(i){D(s,i)}}}function xo(d){let s,n;return s=new Sa({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm i @web3-onboard/core @web3-onboard/injected-wallets ethers
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm i @web3-onboard/core @web3-onboard/injected-wallets ethers</span></span>
<span class="line"></span></code></pre>`}}),{c(){h(s.$$.fragment)},l(i){_(s.$$.fragment,i)},m(i,v){y(s,i,v),n=!0},p:Ls,i(i){n||(b(s.$$.fragment,i),n=!0)},o(i){w(s.$$.fragment,i),n=!1},d(i){D(s,i)}}}function Vo(d){let s,n,i,v;return s=new Mo({props:{value:"yarn",$$slots:{default:[Ko]},$$scope:{ctx:d}}}),i=new Mo({props:{value:"npm",$$slots:{default:[xo]},$$scope:{ctx:d}}}),{c(){h(s.$$.fragment),n=u(),h(i.$$.fragment)},l(A){_(s.$$.fragment,A),n=m(A),_(i.$$.fragment,A)},m(A,T){y(s,A,T),o(A,n,T),y(i,A,T),v=!0},p(A,T){const R={};T&1&&(R.$$scope={dirty:T,ctx:A}),s.$set(R);const vt={};T&1&&(vt.$$scope={dirty:T,ctx:A}),i.$set(vt)},i(A){v||(b(s.$$.fragment,A),b(i.$$.fragment,A),v=!0)},o(A){w(s.$$.fragment,A),w(i.$$.fragment,A),v=!1},d(A){D(s,A),A&&t(n),D(i,A)}}}function zo(d){let s;return{c(){s=f("@web3-onboard/core Official NPM Documentation")},l(n){s=$(n,"@web3-onboard/core Official NPM Documentation")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function Yo(d){let s;return{c(){s=f("#")},l(n){s=$(n,"#")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function Qo(d){let s;return{c(){s=f("Core Repo")},l(n){s=$(n,"Core Repo")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function Jo(d){let s;return{c(){s=f("Injected Wallets")},l(n){s=$(n,"Injected Wallets")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function Xo(d){let s,n;return{c(){s=r("strong"),n=f("Core Repo")},l(i){s=p(i,"STRONG",{});var v=c(s);n=$(v,"Core Repo"),v.forEach(t)},m(i,v){o(i,s,v),l(s,n)},p:Ls,d(i){i&&t(s)}}}function Zo(d){let s,n;return{c(){s=r("strong"),n=f("Injected Wallets")},l(i){s=p(i,"STRONG",{});var v=c(s);n=$(v,"Injected Wallets"),v.forEach(t)},m(i,v){o(i,s,v),l(s,n)},p:Ls,d(i){i&&t(s)}}}function er(d){let s;return{c(){s=f("Coinbase")},l(n){s=$(n,"Coinbase")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function tr(d){let s;return{c(){s=f("WalletConnect")},l(n){s=$(n,"WalletConnect")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function nr(d){let s;return{c(){s=f("Gnosis")},l(n){s=$(n,"Gnosis")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function sr(d){let s;return{c(){s=f("Magic")},l(n){s=$(n,"Magic")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function lr(d){let s;return{c(){s=f("Fortmatic")},l(n){s=$(n,"Fortmatic")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function ar(d){let s;return{c(){s=f("MEW")},l(n){s=$(n,"MEW")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function or(d){let s;return{c(){s=f("Portis")},l(n){s=$(n,"Portis")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function rr(d){let s;return{c(){s=f("Web3Auth")},l(n){s=$(n,"Web3Auth")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function pr(d){let s;return{c(){s=f("Ledger")},l(n){s=$(n,"Ledger")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function ir(d){let s;return{c(){s=f("Trezor")},l(n){s=$(n,"Trezor")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function cr(d){let s;return{c(){s=f("Keystone")},l(n){s=$(n,"Keystone")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function fr(d){let s;return{c(){s=f("KeepKey")},l(n){s=$(n,"KeepKey")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function $r(d){let s;return{c(){s=f("D'cent")},l(n){s=$(n,"D'cent")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function ur(d){let s;return{c(){s=f("React")},l(n){s=$(n,"React")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function mr(d){let s;return{c(){s=f("Vue")},l(n){s=$(n,"Vue")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function dr(d){let s;return{c(){s=f("#")},l(n){s=$(n,"#")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function hr(d){let s;return{c(){s=f("View demo app in the browser")},l(n){s=$(n,"View demo app in the browser")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function _r(d){let s;return{c(){s=f("#")},l(n){s=$(n,"#")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function yr(d){let s;return{c(){s=f("#")},l(n){s=$(n,"#")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function br(d){let s;return{c(){s=f("eth-scaffold")},l(n){s=$(n,"eth-scaffold")},m(n,i){o(n,s,i)},d(n){n&&t(s)}}}function wr(d){let s,n,i,v,A,T,R,vt,Hn,Ge,Os,qn,j,z,Ms,Kn,E,At,Ue,Ct,Ts,Ws,Rs,Et,Be,It,Ns,Ss,js,Pt,He,Lt,Gs,Us,Bs,Ot,qe,Mt,Hs,qs,Ks,Tt,Ke,Wt,xs,Vs,zs,Rt,xe,Nt,Ys,Qs,Js,St,Ve,jt,Xs,Zs,xn,G,Y,el,Vn,Q,tl,J,nl,zn,g,Gt,sl,ll,Ut,al,ol,Bt,rl,pl,Ht,il,cl,qt,fl,$l,Kt,ul,ml,xt,dl,hl,Vt,_l,yl,zt,bl,wl,Yt,Dl,Fl,Qt,gl,kl,Jt,vl,Yn,U,X,Al,Qn,ze,Cl,Jn,Z,El,Xt,Il,Pl,Xn,Ie,Zt,Ll,Ol,Zn,Pe,en,Ml,Tl,es,B,ee,Wl,ts,Ye,Rl,ns,te,ss,Le,Nl,ne,ls,Qe,Sl,as,Oe,Je,tn,jl,os,rs,ps,H,se,Gl,is,Xe,Ul,cs,N,Bl,le,Hl,ae,ql,fs,Ze,oe,$s,et,re,us,tt,nn,Kl,ms,C,sn,pe,xl,ln,ie,Vl,an,ce,zl,on,fe,Yl,rn,$e,Ql,pn,ue,Jl,cn,me,Xl,fn,de,ds,nt,$n,Zl,hs,M,un,he,ea,mn,_e,ta,dn,ye,na,hn,be,sa,_n,we,_s,st,yn,la,ys,De,bn,Fe,aa,wn,ge,bs,q,ke,oa,ws,lt,ra,Ds,L,at,pa,Me,ia,ot,ca,Te,fa,rt,$a,We,ua,K,ma,Re,da,Ne,ha,_a,pt,ya,Se,ba,Dn,ve,Fs,x,Ae,wa,gs,it,Da,ks,ct,Fa,vs,V,Ce,ga,As,ft,ka,Cs,$t,Fn,Ee,Es;return z=new F({props:{class:"header-anchor",href:"#features","aria-hidden":"true",$$slots:{default:[Go]},$$scope:{ctx:d}}}),Y=new F({props:{class:"header-anchor",href:"#supported-networks","aria-hidden":"true",$$slots:{default:[Uo]},$$scope:{ctx:d}}}),J=new F({props:{href:"https://onboard.blocknative.com/docs/packages/core#options",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Bo]},$$scope:{ctx:d}}}),X=new F({props:{class:"header-anchor",href:"#optional-use-an-api-key-to-fetch-real-time-transaction-data-balances-gas","aria-hidden":"true",$$slots:{default:[Ho]},$$scope:{ctx:d}}}),ee=new F({props:{class:"header-anchor",href:"#quickstart","aria-hidden":"true",$$slots:{default:[qo]},$$scope:{ctx:d}}}),te=new So({props:{values:["npm","yarn"],$$slots:{default:[Vo]},$$scope:{ctx:d}}}),ne=new F({props:{href:"https://www.npmjs.com/package/@web3-onboard/core",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[zo]},$$scope:{ctx:d}}}),Oe=new Sa({props:{lang:"typescript",ext:"ts",linesCount:43,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethers</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ethers</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MAINNET_RPC_URL </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> MAINNET_RPC_URL</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> wallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(wallets)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> (wallets[</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">]) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// create an ethers provider with the last connected wallet provider</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethersProvider</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethers</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">providers</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Web3Provider</span><span style="color: #F07178">(</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">wallets</span><span style="color: #F07178">[</span><span style="color: #F78C6C">0</span><span style="color: #F07178">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">provider</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">any</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">signer</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethersProvider</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getSigner</span><span style="color: #F07178">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// send a transaction with the ethers provider</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">txn</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">signer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sendTransaction</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    to</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    value</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #F78C6C">100000000000000</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">receipt</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">txn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">wait</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">receipt</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),se=new F({props:{class:"header-anchor",href:"#wallet-modules","aria-hidden":"true",$$slots:{default:[Yo]},$$scope:{ctx:d}}}),le=new F({props:{href:"https://onboard.blocknative.com/docs/packages/core#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Qo]},$$scope:{ctx:d}}}),ae=new F({props:{href:"https://onboard.blocknative.com/docs/packages/injected#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Jo]},$$scope:{ctx:d}}}),oe=new F({props:{href:"https://onboard.blocknative.com/docs/packages/core#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Xo]},$$scope:{ctx:d}}}),re=new F({props:{href:"https://onboard.blocknative.com/docs/packages/injected#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Zo]},$$scope:{ctx:d}}}),pe=new F({props:{href:"https://onboard.blocknative.com/docs/packages/coinbase#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[er]},$$scope:{ctx:d}}}),ie=new F({props:{href:"https://onboard.blocknative.com/docs/packages/walletconnect#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[tr]},$$scope:{ctx:d}}}),ce=new F({props:{href:"https://onboard.blocknative.com/docs/packages/gnosis#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[nr]},$$scope:{ctx:d}}}),fe=new F({props:{href:"https://onboard.blocknative.com/docs/packages/magic#login-options",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[sr]},$$scope:{ctx:d}}}),$e=new F({props:{href:"https://onboard.blocknative.com/docs/packages/formatic#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[lr]},$$scope:{ctx:d}}}),ue=new F({props:{href:"https://onboard.blocknative.com/docs/packages/mew#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[ar]},$$scope:{ctx:d}}}),me=new F({props:{href:"https://onboard.blocknative.com/docs/packages/portis#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[or]},$$scope:{ctx:d}}}),de=new F({props:{href:"https://onboard.blocknative.com/docs/packages/web3auth#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[rr]},$$scope:{ctx:d}}}),he=new F({props:{href:"https://onboard.blocknative.com/docs/packages/ledger#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[pr]},$$scope:{ctx:d}}}),_e=new F({props:{href:"https://onboard.blocknative.com/docs/packages/trezor#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[ir]},$$scope:{ctx:d}}}),ye=new F({props:{href:"https://onboard.blocknative.com/docs/packages/keystone#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[cr]},$$scope:{ctx:d}}}),be=new F({props:{href:"https://onboard.blocknative.com/docs/packages/keepkey#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[fr]},$$scope:{ctx:d}}}),we=new F({props:{href:"https://onboard.blocknative.com/docs/packages/dcent#wallet-module-for-connecting-d-cent-hardware-wallets-to-web3-onboard",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[$r]},$$scope:{ctx:d}}}),Fe=new F({props:{href:"https://onboard.blocknative.com/docs/packages/react#quickstart-with-injected-wallets-and-ethers-provider",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[ur]},$$scope:{ctx:d}}}),ge=new F({props:{href:"https://onboard.blocknative.com/docs/packages/vue#install",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[mr]},$$scope:{ctx:d}}}),ke=new F({props:{class:"header-anchor",href:"#test-out-the-demo-app","aria-hidden":"true",$$slots:{default:[dr]},$$scope:{ctx:d}}}),Me=new kt({props:{code:"git clone git@github.com:blocknative/web3-onboard.git"}}),Te=new kt({props:{code:"cd web3-onboard"}}),We=new kt({props:{code:"git checkout v2-web3-onboard"}}),Re=new kt({props:{code:"yarn"}}),Ne=new kt({props:{code:"yarn install-m1-mac"}}),Se=new kt({props:{code:"yarn dev"}}),ve=new F({props:{href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[hr]},$$scope:{ctx:d}}}),Ae=new F({props:{class:"header-anchor",href:"#react-demo","aria-hidden":"true",$$slots:{default:[_r]},$$scope:{ctx:d}}}),Ce=new F({props:{class:"header-anchor",href:"#more-examples","aria-hidden":"true",$$slots:{default:[yr]},$$scope:{ctx:d}}}),Ee=new F({props:{href:"https://github.com/scaffold-eth/scaffold-eth-examples/tree/bnc-onboard",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[br]},$$scope:{ctx:d}}}),{c(){s=r("h1"),n=f("Web3-Onboard"),i=u(),v=r("p"),A=f("The best way to connect a wallet \u{1F680}"),T=u(),R=r("img"),Hn=u(),Ge=r("p"),Os=f("Web3-Onboard is the quickest and easiest way to add multi-wallet and multi-chain support to your project. With built-in modules for more than 35 unique hardware and software wallets, Web3-Onboard saves you time and headaches."),qn=u(),j=r("h2"),h(z.$$.fragment),Ms=f(" Features"),Kn=u(),E=r("ul"),At=r("li"),Ue=r("p"),Ct=r("strong"),Ts=f("Minimal Dependencies:"),Ws=f(" All wallet dependencies are included in separate packages, so you only include the ones you want to use in your app."),Rs=u(),Et=r("li"),Be=r("p"),It=r("strong"),Ns=f("Multiple Wallets and Accounts Connection, Multichain Support:"),Ss=f(" Allow your users to connect multiple wallets and multiple accounts within each wallet at the same time to your app. Let users switch between chains/networks with ease. ALL EVM networks supported."),js=u(),Pt=r("li"),He=r("p"),Lt=r("strong"),Gs=f("Unified Provider Interface:"),Us=f(" All wallet modules expose a provider that is patched to be compliant with the EIP-1193, EIP-1102, EIP-3085 and EIP-3326 specifications. Whether your user is using Ledger or Metamask the provider will operate identically."),Bs=u(),Ot=r("li"),qe=r("p"),Mt=r("strong"),Hs=f("Dynamic Imports:"),qs=f(` Supporting multiple wallets in your app requires a lot of dependencies. Onboard dynamically imports a wallet
and it's dependencies only when the user selects it, so that minimal bandwidth is used.`),Ks=u(),Tt=r("li"),Ke=r("p"),Wt=r("strong"),xs=f("Framework Agnostic:"),Vs=f(" Avoid framework lock in -- Web3-Onboard works with any framework and includes helper packages for vue & react."),zs=u(),Rt=r("li"),xe=r("p"),Nt=r("strong"),Ys=f("Account Center:"),Qs=f(" An interface to manage wallet connections and networks, with a minimal version for mobile"),Js=u(),St=r("li"),Ve=r("p"),jt=r("strong"),Xs=f("Notify:"),Zs=f(" Real-time transaction notifications for all transaction states for the connected wallet address(es). In-notification speedups & cancels for hardware wallet connections."),xn=u(),G=r("h3"),h(Y.$$.fragment),el=f(" Supported Networks"),Vn=u(),Q=r("p"),tl=f("web3-onboard supports all EVM networks. Supporting a new network is simply a matter of adding its details in the Chains section upon initialization. For more information see "),h(J.$$.fragment),nl=f("."),zn=u(),g=r("ul"),Gt=r("li"),sl=f("Arbitrum"),ll=u(),Ut=r("li"),al=f("Avalanche"),ol=u(),Bt=r("li"),rl=f("BNB Chain"),pl=u(),Ht=r("li"),il=f("Celo"),cl=u(),qt=r("li"),fl=f("Ethereum"),$l=u(),Kt=r("li"),ul=f("Fantom"),ml=u(),xt=r("li"),dl=f("Gnosis Chain"),hl=u(),Vt=r("li"),_l=f("Harmony One"),yl=u(),zt=r("li"),bl=f("Moonriver"),wl=u(),Yt=r("li"),Dl=f("Optimism"),Fl=u(),Qt=r("li"),gl=f("Polygon"),kl=u(),Jt=r("li"),vl=f("Any other EVM network"),Yn=u(),U=r("h3"),h(X.$$.fragment),Al=f(" [Optional] Use an API key to fetch real time transaction data, balances & gas"),Qn=u(),ze=r("p"),Cl=f("Using a Blocknative API key with web3-onboard on the free plan will allow you to gain the benefits of Blocknative balance & transaction services. Blocknative has a free forever plan you can always use."),Jn=u(),Z=r("p"),El=f("This step is not required to use web3-onboard. You can skip to the "),Xt=r("strong"),Il=f("Quickstart"),Pl=f(" step below if you want to use web3-onboard without API services or if you already have a Blocknative account & API key."),Xn=u(),Ie=r("p"),Zt=r("strong"),Ll=f("Setup your Account"),Ol=f(`
Go to the Account Dashboard at https://explorer.blocknative.com/account and setup an account with an email address. You will receive an email to confirm your account.`),Zn=u(),Pe=r("p"),en=r("strong"),Ml=f("Create your API Key"),Tl=f(`
On the Account Dashboard at https://explorer.blocknative.com/account, create an API key with your choice of name or use/rename the Default Key. Consider using different API keys for development, staging, and production releases.`),es=u(),B=r("h2"),h(ee.$$.fragment),Wl=f(" Quickstart"),ts=u(),Ye=r("p"),Rl=f("Install the core Onboard library, the injected wallets module and optionally ethers.js to support browser extension and mobile wallets:"),ns=u(),h(te.$$.fragment),ss=u(),Le=r("p"),Nl=f("You can find a link to web3-onboard's official NPM Documentation here: "),h(ne.$$.fragment),ls=u(),Qe=r("p"),Sl=f("Then initialize in your app:"),as=u(),h(Oe.$$.fragment),Je=r("p"),tn=r("strong"),jl=f("and you are live!"),os=u(),rs=r("hr"),ps=u(),H=r("h2"),h(se.$$.fragment),Gl=f(" Wallet Modules"),is=u(),Xe=r("p"),Ul=f("Add other wallet modules such as Wallet Connect or Ledger to increase the support and functionality of your web3-onboard implementation. All modules are listed below and can be accessed through the subpages of web3-onboard docs on the left."),cs=u(),N=r("p"),Bl=f("We recommend you add the "),h(le.$$.fragment),Hl=f(" and consider adding the "),h(ae.$$.fragment),ql=f(" module to get connected with wallets like Metamask, Tally, Coinbase Wallet & more right away."),fs=u(),Ze=r("p"),h(oe.$$.fragment),$s=u(),et=r("p"),h(re.$$.fragment),us=u(),tt=r("p"),nn=r("strong"),Kl=f("SDK Wallets"),ms=u(),C=r("ul"),sn=r("li"),h(pe.$$.fragment),xl=u(),ln=r("li"),h(ie.$$.fragment),Vl=u(),an=r("li"),h(ce.$$.fragment),zl=u(),on=r("li"),h(fe.$$.fragment),Yl=u(),rn=r("li"),h($e.$$.fragment),Ql=u(),pn=r("li"),h(ue.$$.fragment),Jl=u(),cn=r("li"),h(me.$$.fragment),Xl=u(),fn=r("li"),h(de.$$.fragment),ds=u(),nt=r("p"),$n=r("strong"),Zl=f("Hardware Wallets"),hs=u(),M=r("ul"),un=r("li"),h(he.$$.fragment),ea=u(),mn=r("li"),h(_e.$$.fragment),ta=u(),dn=r("li"),h(ye.$$.fragment),na=u(),hn=r("li"),h(be.$$.fragment),sa=u(),_n=r("li"),h(we.$$.fragment),_s=u(),st=r("p"),yn=r("strong"),la=f("Frameworks"),ys=u(),De=r("ul"),bn=r("li"),h(Fe.$$.fragment),aa=u(),wn=r("li"),h(ge.$$.fragment),bs=u(),q=r("h2"),h(ke.$$.fragment),oa=f(" Test out the demo app"),ws=u(),lt=r("p"),ra=f("Test out the current functionality of web3-onboard in a small browser demo:"),Ds=u(),L=r("ul"),at=r("li"),pa=f("Clone the repo: "),h(Me.$$.fragment),ia=u(),ot=r("li"),ca=f("Change it to the onboard directory: "),h(Te.$$.fragment),fa=u(),rt=r("li"),$a=f("Checkout the main web3-onboard branch: "),h(We.$$.fragment),ua=u(),K=r("li"),ma=f("Install the dependencies: "),h(Re.$$.fragment),da=f(" (if running a M1 mac - "),h(Ne.$$.fragment),ha=f(")"),_a=u(),pt=r("li"),ya=f("Run all packages in dev mode: "),h(Se.$$.fragment),ba=u(),Dn=r("li"),h(ve.$$.fragment),Fs=u(),x=r("h2"),h(Ae.$$.fragment),wa=f(" React Demo"),gs=u(),it=r("p"),Da=f("Checkout our live demo using React at https://reactdemo.blocknative.com/"),ks=u(),ct=r("p"),Fa=f("The demo is open source so you can see a sample implementation of web3-onboard: https://github.com/blocknative/react-demo"),vs=u(),V=r("h2"),h(Ce.$$.fragment),ga=f(" More Examples"),As=u(),ft=r("p"),ka=f("You can find starter examples from the web3 community here using web3-onboard:"),Cs=u(),$t=r("ul"),Fn=r("li"),h(Ee.$$.fragment),this.h()},l(e){s=p(e,"H1",{});var a=c(s);n=$(a,"Web3-Onboard"),a.forEach(t),i=m(e),v=p(e,"P",{});var gn=c(v);A=$(gn,"The best way to connect a wallet \u{1F680}"),gn.forEach(t),T=m(e),R=p(e,"IMG",{src:!0,alt:!0}),Hn=m(e),Ge=p(e,"P",{});var kn=c(Ge);Os=$(kn,"Web3-Onboard is the quickest and easiest way to add multi-wallet and multi-chain support to your project. With built-in modules for more than 35 unique hardware and software wallets, Web3-Onboard saves you time and headaches."),kn.forEach(t),qn=m(e),j=p(e,"H2",{id:!0,tabindex:!0});var ut=c(j);_(z.$$.fragment,ut),Ms=$(ut," Features"),ut.forEach(t),Kn=m(e),E=p(e,"UL",{});var P=c(E);At=p(P,"LI",{});var vn=c(At);Ue=p(vn,"P",{});var mt=c(Ue);Ct=p(mt,"STRONG",{});var An=c(Ct);Ts=$(An,"Minimal Dependencies:"),An.forEach(t),Ws=$(mt," All wallet dependencies are included in separate packages, so you only include the ones you want to use in your app."),mt.forEach(t),vn.forEach(t),Rs=m(P),Et=p(P,"LI",{});var Cn=c(Et);Be=p(Cn,"P",{});var dt=c(Be);It=p(dt,"STRONG",{});var En=c(It);Ns=$(En,"Multiple Wallets and Accounts Connection, Multichain Support:"),En.forEach(t),Ss=$(dt," Allow your users to connect multiple wallets and multiple accounts within each wallet at the same time to your app. Let users switch between chains/networks with ease. ALL EVM networks supported."),dt.forEach(t),Cn.forEach(t),js=m(P),Pt=p(P,"LI",{});var In=c(Pt);He=p(In,"P",{});var ht=c(He);Lt=p(ht,"STRONG",{});var Pn=c(Lt);Gs=$(Pn,"Unified Provider Interface:"),Pn.forEach(t),Us=$(ht," All wallet modules expose a provider that is patched to be compliant with the EIP-1193, EIP-1102, EIP-3085 and EIP-3326 specifications. Whether your user is using Ledger or Metamask the provider will operate identically."),ht.forEach(t),In.forEach(t),Bs=m(P),Ot=p(P,"LI",{});var Ln=c(Ot);qe=p(Ln,"P",{});var _t=c(qe);Mt=p(_t,"STRONG",{});var On=c(Mt);Hs=$(On,"Dynamic Imports:"),On.forEach(t),qs=$(_t,` Supporting multiple wallets in your app requires a lot of dependencies. Onboard dynamically imports a wallet
and it's dependencies only when the user selects it, so that minimal bandwidth is used.`),_t.forEach(t),Ln.forEach(t),Ks=m(P),Tt=p(P,"LI",{});var Mn=c(Tt);Ke=p(Mn,"P",{});var yt=c(Ke);Wt=p(yt,"STRONG",{});var Tn=c(Wt);xs=$(Tn,"Framework Agnostic:"),Tn.forEach(t),Vs=$(yt," Avoid framework lock in -- Web3-Onboard works with any framework and includes helper packages for vue & react."),yt.forEach(t),Mn.forEach(t),zs=m(P),Rt=p(P,"LI",{});var Wn=c(Rt);xe=p(Wn,"P",{});var bt=c(xe);Nt=p(bt,"STRONG",{});var Rn=c(Nt);Ys=$(Rn,"Account Center:"),Rn.forEach(t),Qs=$(bt," An interface to manage wallet connections and networks, with a minimal version for mobile"),bt.forEach(t),Wn.forEach(t),Js=m(P),St=p(P,"LI",{});var Nn=c(St);Ve=p(Nn,"P",{});var wt=c(Ve);jt=p(wt,"STRONG",{});var Sn=c(jt);Xs=$(Sn,"Notify:"),Sn.forEach(t),Zs=$(wt," Real-time transaction notifications for all transaction states for the connected wallet address(es). In-notification speedups & cancels for hardware wallet connections."),wt.forEach(t),Nn.forEach(t),P.forEach(t),xn=m(e),G=p(e,"H3",{id:!0,tabindex:!0});var Dt=c(G);_(Y.$$.fragment,Dt),el=$(Dt," Supported Networks"),Dt.forEach(t),Vn=m(e),Q=p(e,"P",{});var je=c(Q);tl=$(je,"web3-onboard supports all EVM networks. Supporting a new network is simply a matter of adding its details in the Chains section upon initialization. For more information see "),_(J.$$.fragment,je),nl=$(je,"."),je.forEach(t),zn=m(e),g=p(e,"UL",{});var k=c(g);Gt=p(k,"LI",{});var jn=c(Gt);sl=$(jn,"Arbitrum"),jn.forEach(t),ll=m(k),Ut=p(k,"LI",{});var Gn=c(Ut);al=$(Gn,"Avalanche"),Gn.forEach(t),ol=m(k),Bt=p(k,"LI",{});var Un=c(Bt);rl=$(Un,"BNB Chain"),Un.forEach(t),pl=m(k),Ht=p(k,"LI",{});var Bn=c(Ht);il=$(Bn,"Celo"),Bn.forEach(t),cl=m(k),qt=p(k,"LI",{});var ja=c(qt);fl=$(ja,"Ethereum"),ja.forEach(t),$l=m(k),Kt=p(k,"LI",{});var Ga=c(Kt);ul=$(Ga,"Fantom"),Ga.forEach(t),ml=m(k),xt=p(k,"LI",{});var Ua=c(xt);dl=$(Ua,"Gnosis Chain"),Ua.forEach(t),hl=m(k),Vt=p(k,"LI",{});var Ba=c(Vt);_l=$(Ba,"Harmony One"),Ba.forEach(t),yl=m(k),zt=p(k,"LI",{});var Ha=c(zt);bl=$(Ha,"Moonriver"),Ha.forEach(t),wl=m(k),Yt=p(k,"LI",{});var qa=c(Yt);Dl=$(qa,"Optimism"),qa.forEach(t),Fl=m(k),Qt=p(k,"LI",{});var Ka=c(Qt);gl=$(Ka,"Polygon"),Ka.forEach(t),kl=m(k),Jt=p(k,"LI",{});var xa=c(Jt);vl=$(xa,"Any other EVM network"),xa.forEach(t),k.forEach(t),Yn=m(e),U=p(e,"H3",{id:!0,tabindex:!0});var va=c(U);_(X.$$.fragment,va),Al=$(va," [Optional] Use an API key to fetch real time transaction data, balances & gas"),va.forEach(t),Qn=m(e),ze=p(e,"P",{});var Va=c(ze);Cl=$(Va,"Using a Blocknative API key with web3-onboard on the free plan will allow you to gain the benefits of Blocknative balance & transaction services. Blocknative has a free forever plan you can always use."),Va.forEach(t),Jn=m(e),Z=p(e,"P",{});var Is=c(Z);El=$(Is,"This step is not required to use web3-onboard. You can skip to the "),Xt=p(Is,"STRONG",{});var za=c(Xt);Il=$(za,"Quickstart"),za.forEach(t),Pl=$(Is," step below if you want to use web3-onboard without API services or if you already have a Blocknative account & API key."),Is.forEach(t),Xn=m(e),Ie=p(e,"P",{});var Aa=c(Ie);Zt=p(Aa,"STRONG",{});var Ya=c(Zt);Ll=$(Ya,"Setup your Account"),Ya.forEach(t),Ol=$(Aa,`
Go to the Account Dashboard at https://explorer.blocknative.com/account and setup an account with an email address. You will receive an email to confirm your account.`),Aa.forEach(t),Zn=m(e),Pe=p(e,"P",{});var Ca=c(Pe);en=p(Ca,"STRONG",{});var Qa=c(en);Ml=$(Qa,"Create your API Key"),Qa.forEach(t),Tl=$(Ca,`
On the Account Dashboard at https://explorer.blocknative.com/account, create an API key with your choice of name or use/rename the Default Key. Consider using different API keys for development, staging, and production releases.`),Ca.forEach(t),es=m(e),B=p(e,"H2",{id:!0,tabindex:!0});var Ea=c(B);_(ee.$$.fragment,Ea),Wl=$(Ea," Quickstart"),Ea.forEach(t),ts=m(e),Ye=p(e,"P",{});var Ja=c(Ye);Rl=$(Ja,"Install the core Onboard library, the injected wallets module and optionally ethers.js to support browser extension and mobile wallets:"),Ja.forEach(t),ns=m(e),_(te.$$.fragment,e),ss=m(e),Le=p(e,"P",{});var Ia=c(Le);Nl=$(Ia,"You can find a link to web3-onboard's official NPM Documentation here: "),_(ne.$$.fragment,Ia),Ia.forEach(t),ls=m(e),Qe=p(e,"P",{});var Xa=c(Qe);Sl=$(Xa,"Then initialize in your app:"),Xa.forEach(t),as=m(e),_(Oe.$$.fragment,e),Je=p(e,"P",{});var Za=c(Je);tn=p(Za,"STRONG",{});var eo=c(tn);jl=$(eo,"and you are live!"),eo.forEach(t),Za.forEach(t),os=m(e),rs=p(e,"HR",{}),ps=m(e),H=p(e,"H2",{id:!0,tabindex:!0});var Pa=c(H);_(se.$$.fragment,Pa),Gl=$(Pa," Wallet Modules"),Pa.forEach(t),is=m(e),Xe=p(e,"P",{});var to=c(Xe);Ul=$(to,"Add other wallet modules such as Wallet Connect or Ledger to increase the support and functionality of your web3-onboard implementation. All modules are listed below and can be accessed through the subpages of web3-onboard docs on the left."),to.forEach(t),cs=m(e),N=p(e,"P",{});var Ft=c(N);Bl=$(Ft,"We recommend you add the "),_(le.$$.fragment,Ft),Hl=$(Ft," and consider adding the "),_(ae.$$.fragment,Ft),ql=$(Ft," module to get connected with wallets like Metamask, Tally, Coinbase Wallet & more right away."),Ft.forEach(t),fs=m(e),Ze=p(e,"P",{});var no=c(Ze);_(oe.$$.fragment,no),no.forEach(t),$s=m(e),et=p(e,"P",{});var so=c(et);_(re.$$.fragment,so),so.forEach(t),us=m(e),tt=p(e,"P",{});var lo=c(tt);nn=p(lo,"STRONG",{});var ao=c(nn);Kl=$(ao,"SDK Wallets"),ao.forEach(t),lo.forEach(t),ms=m(e),C=p(e,"UL",{});var O=c(C);sn=p(O,"LI",{});var oo=c(sn);_(pe.$$.fragment,oo),oo.forEach(t),xl=m(O),ln=p(O,"LI",{});var ro=c(ln);_(ie.$$.fragment,ro),ro.forEach(t),Vl=m(O),an=p(O,"LI",{});var po=c(an);_(ce.$$.fragment,po),po.forEach(t),zl=m(O),on=p(O,"LI",{});var io=c(on);_(fe.$$.fragment,io),io.forEach(t),Yl=m(O),rn=p(O,"LI",{});var co=c(rn);_($e.$$.fragment,co),co.forEach(t),Ql=m(O),pn=p(O,"LI",{});var fo=c(pn);_(ue.$$.fragment,fo),fo.forEach(t),Jl=m(O),cn=p(O,"LI",{});var $o=c(cn);_(me.$$.fragment,$o),$o.forEach(t),Xl=m(O),fn=p(O,"LI",{});var uo=c(fn);_(de.$$.fragment,uo),uo.forEach(t),O.forEach(t),ds=m(e),nt=p(e,"P",{});var mo=c(nt);$n=p(mo,"STRONG",{});var ho=c($n);Zl=$(ho,"Hardware Wallets"),ho.forEach(t),mo.forEach(t),hs=m(e),M=p(e,"UL",{});var S=c(M);un=p(S,"LI",{});var _o=c(un);_(he.$$.fragment,_o),_o.forEach(t),ea=m(S),mn=p(S,"LI",{});var yo=c(mn);_(_e.$$.fragment,yo),yo.forEach(t),ta=m(S),dn=p(S,"LI",{});var bo=c(dn);_(ye.$$.fragment,bo),bo.forEach(t),na=m(S),hn=p(S,"LI",{});var wo=c(hn);_(be.$$.fragment,wo),wo.forEach(t),sa=m(S),_n=p(S,"LI",{});var Do=c(_n);_(we.$$.fragment,Do),Do.forEach(t),S.forEach(t),_s=m(e),st=p(e,"P",{});var Fo=c(st);yn=p(Fo,"STRONG",{});var go=c(yn);la=$(go,"Frameworks"),go.forEach(t),Fo.forEach(t),ys=m(e),De=p(e,"UL",{});var Ps=c(De);bn=p(Ps,"LI",{});var ko=c(bn);_(Fe.$$.fragment,ko),ko.forEach(t),aa=m(Ps),wn=p(Ps,"LI",{});var vo=c(wn);_(ge.$$.fragment,vo),vo.forEach(t),Ps.forEach(t),bs=m(e),q=p(e,"H2",{id:!0,tabindex:!0});var La=c(q);_(ke.$$.fragment,La),oa=$(La," Test out the demo app"),La.forEach(t),ws=m(e),lt=p(e,"P",{});var Ao=c(lt);ra=$(Ao,"Test out the current functionality of web3-onboard in a small browser demo:"),Ao.forEach(t),Ds=m(e),L=p(e,"UL",{});var W=c(L);at=p(W,"LI",{});var Oa=c(at);pa=$(Oa,"Clone the repo: "),_(Me.$$.fragment,Oa),Oa.forEach(t),ia=m(W),ot=p(W,"LI",{});var Ma=c(ot);ca=$(Ma,"Change it to the onboard directory: "),_(Te.$$.fragment,Ma),Ma.forEach(t),fa=m(W),rt=p(W,"LI",{});var Ta=c(rt);$a=$(Ta,"Checkout the main web3-onboard branch: "),_(We.$$.fragment,Ta),Ta.forEach(t),ua=m(W),K=p(W,"LI",{});var gt=c(K);ma=$(gt,"Install the dependencies: "),_(Re.$$.fragment,gt),da=$(gt," (if running a M1 mac - "),_(Ne.$$.fragment,gt),ha=$(gt,")"),gt.forEach(t),_a=m(W),pt=p(W,"LI",{});var Wa=c(pt);ya=$(Wa,"Run all packages in dev mode: "),_(Se.$$.fragment,Wa),Wa.forEach(t),ba=m(W),Dn=p(W,"LI",{});var Co=c(Dn);_(ve.$$.fragment,Co),Co.forEach(t),W.forEach(t),Fs=m(e),x=p(e,"H2",{id:!0,tabindex:!0});var Ra=c(x);_(Ae.$$.fragment,Ra),wa=$(Ra," React Demo"),Ra.forEach(t),gs=m(e),it=p(e,"P",{});var Eo=c(it);Da=$(Eo,"Checkout our live demo using React at https://reactdemo.blocknative.com/"),Eo.forEach(t),ks=m(e),ct=p(e,"P",{});var Io=c(ct);Fa=$(Io,"The demo is open source so you can see a sample implementation of web3-onboard: https://github.com/blocknative/react-demo"),Io.forEach(t),vs=m(e),V=p(e,"H2",{id:!0,tabindex:!0});var Na=c(V);_(Ce.$$.fragment,Na),ga=$(Na," More Examples"),Na.forEach(t),As=m(e),ft=p(e,"P",{});var Po=c(ft);ka=$(Po,"You can find starter examples from the web3 community here using web3-onboard:"),Po.forEach(t),Cs=m(e),$t=p(e,"UL",{});var Lo=c($t);Fn=p(Lo,"LI",{});var Oo=c(Fn);_(Ee.$$.fragment,Oo),Oo.forEach(t),Lo.forEach(t),this.h()},h(){No(R.src,vt=jo)||I(R,"src",vt),I(R,"alt","Web3-Onboard connect wallet modal"),I(j,"id","features"),I(j,"tabindex","-1"),I(G,"id","supported-networks"),I(G,"tabindex","-1"),I(U,"id","optional-use-an-api-key-to-fetch-real-time-transaction-data-balances-gas"),I(U,"tabindex","-1"),I(B,"id","quickstart"),I(B,"tabindex","-1"),I(H,"id","wallet-modules"),I(H,"tabindex","-1"),I(q,"id","test-out-the-demo-app"),I(q,"tabindex","-1"),I(x,"id","react-demo"),I(x,"tabindex","-1"),I(V,"id","more-examples"),I(V,"tabindex","-1")},m(e,a){o(e,s,a),l(s,n),o(e,i,a),o(e,v,a),l(v,A),o(e,T,a),o(e,R,a),o(e,Hn,a),o(e,Ge,a),l(Ge,Os),o(e,qn,a),o(e,j,a),y(z,j,null),l(j,Ms),o(e,Kn,a),o(e,E,a),l(E,At),l(At,Ue),l(Ue,Ct),l(Ct,Ts),l(Ue,Ws),l(E,Rs),l(E,Et),l(Et,Be),l(Be,It),l(It,Ns),l(Be,Ss),l(E,js),l(E,Pt),l(Pt,He),l(He,Lt),l(Lt,Gs),l(He,Us),l(E,Bs),l(E,Ot),l(Ot,qe),l(qe,Mt),l(Mt,Hs),l(qe,qs),l(E,Ks),l(E,Tt),l(Tt,Ke),l(Ke,Wt),l(Wt,xs),l(Ke,Vs),l(E,zs),l(E,Rt),l(Rt,xe),l(xe,Nt),l(Nt,Ys),l(xe,Qs),l(E,Js),l(E,St),l(St,Ve),l(Ve,jt),l(jt,Xs),l(Ve,Zs),o(e,xn,a),o(e,G,a),y(Y,G,null),l(G,el),o(e,Vn,a),o(e,Q,a),l(Q,tl),y(J,Q,null),l(Q,nl),o(e,zn,a),o(e,g,a),l(g,Gt),l(Gt,sl),l(g,ll),l(g,Ut),l(Ut,al),l(g,ol),l(g,Bt),l(Bt,rl),l(g,pl),l(g,Ht),l(Ht,il),l(g,cl),l(g,qt),l(qt,fl),l(g,$l),l(g,Kt),l(Kt,ul),l(g,ml),l(g,xt),l(xt,dl),l(g,hl),l(g,Vt),l(Vt,_l),l(g,yl),l(g,zt),l(zt,bl),l(g,wl),l(g,Yt),l(Yt,Dl),l(g,Fl),l(g,Qt),l(Qt,gl),l(g,kl),l(g,Jt),l(Jt,vl),o(e,Yn,a),o(e,U,a),y(X,U,null),l(U,Al),o(e,Qn,a),o(e,ze,a),l(ze,Cl),o(e,Jn,a),o(e,Z,a),l(Z,El),l(Z,Xt),l(Xt,Il),l(Z,Pl),o(e,Xn,a),o(e,Ie,a),l(Ie,Zt),l(Zt,Ll),l(Ie,Ol),o(e,Zn,a),o(e,Pe,a),l(Pe,en),l(en,Ml),l(Pe,Tl),o(e,es,a),o(e,B,a),y(ee,B,null),l(B,Wl),o(e,ts,a),o(e,Ye,a),l(Ye,Rl),o(e,ns,a),y(te,e,a),o(e,ss,a),o(e,Le,a),l(Le,Nl),y(ne,Le,null),o(e,ls,a),o(e,Qe,a),l(Qe,Sl),o(e,as,a),y(Oe,e,a),o(e,Je,a),l(Je,tn),l(tn,jl),o(e,os,a),o(e,rs,a),o(e,ps,a),o(e,H,a),y(se,H,null),l(H,Gl),o(e,is,a),o(e,Xe,a),l(Xe,Ul),o(e,cs,a),o(e,N,a),l(N,Bl),y(le,N,null),l(N,Hl),y(ae,N,null),l(N,ql),o(e,fs,a),o(e,Ze,a),y(oe,Ze,null),o(e,$s,a),o(e,et,a),y(re,et,null),o(e,us,a),o(e,tt,a),l(tt,nn),l(nn,Kl),o(e,ms,a),o(e,C,a),l(C,sn),y(pe,sn,null),l(C,xl),l(C,ln),y(ie,ln,null),l(C,Vl),l(C,an),y(ce,an,null),l(C,zl),l(C,on),y(fe,on,null),l(C,Yl),l(C,rn),y($e,rn,null),l(C,Ql),l(C,pn),y(ue,pn,null),l(C,Jl),l(C,cn),y(me,cn,null),l(C,Xl),l(C,fn),y(de,fn,null),o(e,ds,a),o(e,nt,a),l(nt,$n),l($n,Zl),o(e,hs,a),o(e,M,a),l(M,un),y(he,un,null),l(M,ea),l(M,mn),y(_e,mn,null),l(M,ta),l(M,dn),y(ye,dn,null),l(M,na),l(M,hn),y(be,hn,null),l(M,sa),l(M,_n),y(we,_n,null),o(e,_s,a),o(e,st,a),l(st,yn),l(yn,la),o(e,ys,a),o(e,De,a),l(De,bn),y(Fe,bn,null),l(De,aa),l(De,wn),y(ge,wn,null),o(e,bs,a),o(e,q,a),y(ke,q,null),l(q,oa),o(e,ws,a),o(e,lt,a),l(lt,ra),o(e,Ds,a),o(e,L,a),l(L,at),l(at,pa),y(Me,at,null),l(L,ia),l(L,ot),l(ot,ca),y(Te,ot,null),l(L,fa),l(L,rt),l(rt,$a),y(We,rt,null),l(L,ua),l(L,K),l(K,ma),y(Re,K,null),l(K,da),y(Ne,K,null),l(K,ha),l(L,_a),l(L,pt),l(pt,ya),y(Se,pt,null),l(L,ba),l(L,Dn),y(ve,Dn,null),o(e,Fs,a),o(e,x,a),y(Ae,x,null),l(x,wa),o(e,gs,a),o(e,it,a),l(it,Da),o(e,ks,a),o(e,ct,a),l(ct,Fa),o(e,vs,a),o(e,V,a),y(Ce,V,null),l(V,ga),o(e,As,a),o(e,ft,a),l(ft,ka),o(e,Cs,a),o(e,$t,a),l($t,Fn),y(Ee,Fn,null),Es=!0},p(e,[a]){const gn={};a&1&&(gn.$$scope={dirty:a,ctx:e}),z.$set(gn);const kn={};a&1&&(kn.$$scope={dirty:a,ctx:e}),Y.$set(kn);const ut={};a&1&&(ut.$$scope={dirty:a,ctx:e}),J.$set(ut);const P={};a&1&&(P.$$scope={dirty:a,ctx:e}),X.$set(P);const vn={};a&1&&(vn.$$scope={dirty:a,ctx:e}),ee.$set(vn);const mt={};a&1&&(mt.$$scope={dirty:a,ctx:e}),te.$set(mt);const An={};a&1&&(An.$$scope={dirty:a,ctx:e}),ne.$set(An);const Cn={};a&1&&(Cn.$$scope={dirty:a,ctx:e}),se.$set(Cn);const dt={};a&1&&(dt.$$scope={dirty:a,ctx:e}),le.$set(dt);const En={};a&1&&(En.$$scope={dirty:a,ctx:e}),ae.$set(En);const In={};a&1&&(In.$$scope={dirty:a,ctx:e}),oe.$set(In);const ht={};a&1&&(ht.$$scope={dirty:a,ctx:e}),re.$set(ht);const Pn={};a&1&&(Pn.$$scope={dirty:a,ctx:e}),pe.$set(Pn);const Ln={};a&1&&(Ln.$$scope={dirty:a,ctx:e}),ie.$set(Ln);const _t={};a&1&&(_t.$$scope={dirty:a,ctx:e}),ce.$set(_t);const On={};a&1&&(On.$$scope={dirty:a,ctx:e}),fe.$set(On);const Mn={};a&1&&(Mn.$$scope={dirty:a,ctx:e}),$e.$set(Mn);const yt={};a&1&&(yt.$$scope={dirty:a,ctx:e}),ue.$set(yt);const Tn={};a&1&&(Tn.$$scope={dirty:a,ctx:e}),me.$set(Tn);const Wn={};a&1&&(Wn.$$scope={dirty:a,ctx:e}),de.$set(Wn);const bt={};a&1&&(bt.$$scope={dirty:a,ctx:e}),he.$set(bt);const Rn={};a&1&&(Rn.$$scope={dirty:a,ctx:e}),_e.$set(Rn);const Nn={};a&1&&(Nn.$$scope={dirty:a,ctx:e}),ye.$set(Nn);const wt={};a&1&&(wt.$$scope={dirty:a,ctx:e}),be.$set(wt);const Sn={};a&1&&(Sn.$$scope={dirty:a,ctx:e}),we.$set(Sn);const Dt={};a&1&&(Dt.$$scope={dirty:a,ctx:e}),Fe.$set(Dt);const je={};a&1&&(je.$$scope={dirty:a,ctx:e}),ge.$set(je);const k={};a&1&&(k.$$scope={dirty:a,ctx:e}),ke.$set(k);const jn={};a&1&&(jn.$$scope={dirty:a,ctx:e}),ve.$set(jn);const Gn={};a&1&&(Gn.$$scope={dirty:a,ctx:e}),Ae.$set(Gn);const Un={};a&1&&(Un.$$scope={dirty:a,ctx:e}),Ce.$set(Un);const Bn={};a&1&&(Bn.$$scope={dirty:a,ctx:e}),Ee.$set(Bn)},i(e){Es||(b(z.$$.fragment,e),b(Y.$$.fragment,e),b(J.$$.fragment,e),b(X.$$.fragment,e),b(ee.$$.fragment,e),b(te.$$.fragment,e),b(ne.$$.fragment,e),b(Oe.$$.fragment,e),b(se.$$.fragment,e),b(le.$$.fragment,e),b(ae.$$.fragment,e),b(oe.$$.fragment,e),b(re.$$.fragment,e),b(pe.$$.fragment,e),b(ie.$$.fragment,e),b(ce.$$.fragment,e),b(fe.$$.fragment,e),b($e.$$.fragment,e),b(ue.$$.fragment,e),b(me.$$.fragment,e),b(de.$$.fragment,e),b(he.$$.fragment,e),b(_e.$$.fragment,e),b(ye.$$.fragment,e),b(be.$$.fragment,e),b(we.$$.fragment,e),b(Fe.$$.fragment,e),b(ge.$$.fragment,e),b(ke.$$.fragment,e),b(Me.$$.fragment,e),b(Te.$$.fragment,e),b(We.$$.fragment,e),b(Re.$$.fragment,e),b(Ne.$$.fragment,e),b(Se.$$.fragment,e),b(ve.$$.fragment,e),b(Ae.$$.fragment,e),b(Ce.$$.fragment,e),b(Ee.$$.fragment,e),Es=!0)},o(e){w(z.$$.fragment,e),w(Y.$$.fragment,e),w(J.$$.fragment,e),w(X.$$.fragment,e),w(ee.$$.fragment,e),w(te.$$.fragment,e),w(ne.$$.fragment,e),w(Oe.$$.fragment,e),w(se.$$.fragment,e),w(le.$$.fragment,e),w(ae.$$.fragment,e),w(oe.$$.fragment,e),w(re.$$.fragment,e),w(pe.$$.fragment,e),w(ie.$$.fragment,e),w(ce.$$.fragment,e),w(fe.$$.fragment,e),w($e.$$.fragment,e),w(ue.$$.fragment,e),w(me.$$.fragment,e),w(de.$$.fragment,e),w(he.$$.fragment,e),w(_e.$$.fragment,e),w(ye.$$.fragment,e),w(be.$$.fragment,e),w(we.$$.fragment,e),w(Fe.$$.fragment,e),w(ge.$$.fragment,e),w(ke.$$.fragment,e),w(Me.$$.fragment,e),w(Te.$$.fragment,e),w(We.$$.fragment,e),w(Re.$$.fragment,e),w(Ne.$$.fragment,e),w(Se.$$.fragment,e),w(ve.$$.fragment,e),w(Ae.$$.fragment,e),w(Ce.$$.fragment,e),w(Ee.$$.fragment,e),Es=!1},d(e){e&&t(s),e&&t(i),e&&t(v),e&&t(T),e&&t(R),e&&t(Hn),e&&t(Ge),e&&t(qn),e&&t(j),D(z),e&&t(Kn),e&&t(E),e&&t(xn),e&&t(G),D(Y),e&&t(Vn),e&&t(Q),D(J),e&&t(zn),e&&t(g),e&&t(Yn),e&&t(U),D(X),e&&t(Qn),e&&t(ze),e&&t(Jn),e&&t(Z),e&&t(Xn),e&&t(Ie),e&&t(Zn),e&&t(Pe),e&&t(es),e&&t(B),D(ee),e&&t(ts),e&&t(Ye),e&&t(ns),D(te,e),e&&t(ss),e&&t(Le),D(ne),e&&t(ls),e&&t(Qe),e&&t(as),D(Oe,e),e&&t(Je),e&&t(os),e&&t(rs),e&&t(ps),e&&t(H),D(se),e&&t(is),e&&t(Xe),e&&t(cs),e&&t(N),D(le),D(ae),e&&t(fs),e&&t(Ze),D(oe),e&&t($s),e&&t(et),D(re),e&&t(us),e&&t(tt),e&&t(ms),e&&t(C),D(pe),D(ie),D(ce),D(fe),D($e),D(ue),D(me),D(de),e&&t(ds),e&&t(nt),e&&t(hs),e&&t(M),D(he),D(_e),D(ye),D(be),D(we),e&&t(_s),e&&t(st),e&&t(ys),e&&t(De),D(Fe),D(ge),e&&t(bs),e&&t(q),D(ke),e&&t(ws),e&&t(lt),e&&t(Ds),e&&t(L),D(Me),D(Te),D(We),D(Re),D(Ne),D(Se),D(ve),e&&t(Fs),e&&t(x),D(Ae),e&&t(gs),e&&t(it),e&&t(ks),e&&t(ct),e&&t(vs),e&&t(V),D(Ce),e&&t(As),e&&t(ft),e&&t(Cs),e&&t($t),D(Ee)}}}class Pr extends To{constructor(s){super(),Wo(this,s,null,wr,Ro,{})}}export{Pr as default};

import{S as N,i as Q,s as R,e as W,t as g,k as v,w as u,c as B,a as H,h,d as p,m as x,x as y,b as L,g as i,M as O,y as C,q as D,o as A,B as d,E as j}from"../../../chunks/index-c32358ff.js";import"../../../chunks/scroll-5387a6f1.js";import{C as z}from"../../../chunks/CodeFence-ac7b69e1.js";import{L as J}from"../../../chunks/Link-d3089e65.js";import{A as V}from"../../../chunks/Admonition-5e8d71e1.js";/* empty css                                                            */import{T as X,a as K}from"../../../chunks/Tabs-f2c9522f.js";import"../../../chunks/singletons-37dfeae3.js";import"../../../chunks/contexts-2aef7541.js";function Y(r){let n;return{c(){n=g("#")},l(a){n=h(a,"#")},m(a,e){i(a,n,e)},d(a){a&&p(n)}}}function Z(r){let n,a;return n=new z({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/mew
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/mew</span></span>
<span class="line"></span></code></pre>`}}),{c(){u(n.$$.fragment)},l(e){y(n.$$.fragment,e)},m(e,o){C(n,e,o),a=!0},p:j,i(e){a||(D(n.$$.fragment,e),a=!0)},o(e){A(n.$$.fragment,e),a=!1},d(e){d(n,e)}}}function ss(r){let n,a;return n=new z({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/mew
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/mew</span></span>
<span class="line"></span></code></pre>`}}),{c(){u(n.$$.fragment)},l(e){y(n.$$.fragment,e)},m(e,o){C(n,e,o),a=!0},p:j,i(e){a||(D(n.$$.fragment,e),a=!0)},o(e){A(n.$$.fragment,e),a=!1},d(e){d(n,e)}}}function ns(r){let n,a,e,o;return n=new K({props:{value:"yarn",$$slots:{default:[Z]},$$scope:{ctx:r}}}),e=new K({props:{value:"npm",$$slots:{default:[ss]},$$scope:{ctx:r}}}),{c(){u(n.$$.fragment),a=v(),u(e.$$.fragment)},l(t){y(n.$$.fragment,t),a=x(t),y(e.$$.fragment,t)},m(t,c){C(n,t,c),i(t,a,c),C(e,t,c),o=!0},p(t,c){const $={};c&1&&($.$$scope={dirty:c,ctx:t}),n.$set($);const f={};c&1&&(f.$$scope={dirty:c,ctx:t}),e.$set(f)},i(t){o||(D(n.$$.fragment,t),D(e.$$.fragment,t),o=!0)},o(t){A(n.$$.fragment,t),A(e.$$.fragment,t),o=!1},d(t){d(n,t),t&&p(a),d(e,t)}}}function es(r){let n;return{c(){n=g("#")},l(a){n=h(a,"#")},m(a,e){i(a,n,e)},d(a){a&&p(n)}}}function as(r){let n,a;return{c(){n=W("p"),a=g("Currently not building on M1 Macs")},l(e){n=B(e,"P",{});var o=H(n);a=h(o,"Currently not building on M1 Macs"),o.forEach(p)},m(e,o){i(e,n,o),O(n,a)},p:j,d(e){e&&p(n)}}}function ts(r){let n,a,e,o,t,c,$,f,S,P,F,T,m,w,U,q,_,b,I;return f=new J({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[Y]},$$scope:{ctx:r}}}),F=new X({props:{values:["yarn","npm"],$$slots:{default:[ns]},$$scope:{ctx:r}}}),w=new J({props:{class:"header-anchor",href:"#usage","aria-hidden":"true",$$slots:{default:[es]},$$scope:{ctx:r}}}),_=new z({props:{lang:"typescript",ext:"ts",linesCount:16,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> mewModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/mew</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> mew </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">mewModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// ... other Onboard options</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    mew</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">//... other wallets</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(connectedWallets)</span></span>
<span class="line"></span></code></pre>`}}),b=new V({props:{type:"warning",$$slots:{default:[as]},$$scope:{ctx:r}}}),{c(){n=W("h1"),a=g("@web3-onboard/mew"),e=v(),o=W("p"),t=g("Wallet module for connecting Mew wallet to web3-onboard"),c=v(),$=W("h2"),u(f.$$.fragment),S=g(" Install"),P=v(),u(F.$$.fragment),T=v(),m=W("h2"),u(w.$$.fragment),U=g(" Usage"),q=v(),u(_.$$.fragment),u(b.$$.fragment),this.h()},l(s){n=B(s,"H1",{});var l=H(n);a=h(l,"@web3-onboard/mew"),l.forEach(p),e=x(s),o=B(s,"P",{});var k=H(o);t=h(k,"Wallet module for connecting Mew wallet to web3-onboard"),k.forEach(p),c=x(s),$=B(s,"H2",{id:!0,tabindex:!0});var E=H($);y(f.$$.fragment,E),S=h(E," Install"),E.forEach(p),P=x(s),y(F.$$.fragment,s),T=x(s),m=B(s,"H2",{id:!0,tabindex:!0});var M=H(m);y(w.$$.fragment,M),U=h(M," Usage"),M.forEach(p),q=x(s),y(_.$$.fragment,s),y(b.$$.fragment,s),this.h()},h(){L($,"id","install"),L($,"tabindex","-1"),L(m,"id","usage"),L(m,"tabindex","-1")},m(s,l){i(s,n,l),O(n,a),i(s,e,l),i(s,o,l),O(o,t),i(s,c,l),i(s,$,l),C(f,$,null),O($,S),i(s,P,l),C(F,s,l),i(s,T,l),i(s,m,l),C(w,m,null),O(m,U),i(s,q,l),C(_,s,l),C(b,s,l),I=!0},p(s,[l]){const k={};l&1&&(k.$$scope={dirty:l,ctx:s}),f.$set(k);const E={};l&1&&(E.$$scope={dirty:l,ctx:s}),F.$set(E);const M={};l&1&&(M.$$scope={dirty:l,ctx:s}),w.$set(M);const G={};l&1&&(G.$$scope={dirty:l,ctx:s}),b.$set(G)},i(s){I||(D(f.$$.fragment,s),D(F.$$.fragment,s),D(w.$$.fragment,s),D(_.$$.fragment,s),D(b.$$.fragment,s),I=!0)},o(s){A(f.$$.fragment,s),A(F.$$.fragment,s),A(w.$$.fragment,s),A(_.$$.fragment,s),A(b.$$.fragment,s),I=!1},d(s){s&&p(n),s&&p(e),s&&p(o),s&&p(c),s&&p($),d(f),s&&p(P),d(F,s),s&&p(T),s&&p(m),d(w),s&&p(q),d(_,s),d(b,s)}}}class us extends N{constructor(n){super(),Q(this,n,null,ts,R,{})}}export{us as default};

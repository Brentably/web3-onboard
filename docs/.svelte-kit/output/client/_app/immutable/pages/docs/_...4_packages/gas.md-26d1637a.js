import{S as J,i as Q,s as V,e as K,t as b,k as x,w as F,c as L,a as S,h as _,d as r,m as v,x as C,b as U,g as D,M as I,y as A,q as f,o as $,B as m,E as z}from"../../../chunks/index-c32358ff.js";import"../../../chunks/scroll-5387a6f1.js";import{C as Y}from"../../../chunks/CodeFence-ac7b69e1.js";import{L as N}from"../../../chunks/Link-d3089e65.js";/* empty css                                                            */import{T as W,a as R}from"../../../chunks/Tabs-f2c9522f.js";import"../../../chunks/singletons-37dfeae3.js";import"../../../chunks/contexts-2aef7541.js";function X(c){let n;return{c(){n=b("Blocknative Gas Platform API")},l(l){n=_(l,"Blocknative Gas Platform API")},m(l,a){D(l,n,a)},d(l){l&&r(n)}}}function Z(c){let n;return{c(){n=b("#")},l(l){n=_(l,"#")},m(l,a){D(l,n,a)},d(l){l&&r(n)}}}function ss(c){let n,l;return n=new Y({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/gas
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/gas</span></span>
<span class="line"></span></code></pre>`}}),{c(){F(n.$$.fragment)},l(a){C(n.$$.fragment,a)},m(a,p){A(n,a,p),l=!0},p:z,i(a){l||(f(n.$$.fragment,a),l=!0)},o(a){$(n.$$.fragment,a),l=!1},d(a){m(n,a)}}}function ns(c){let n,l;return n=new Y({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/gas
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/gas</span></span>
<span class="line"></span></code></pre>`}}),{c(){F(n.$$.fragment)},l(a){C(n.$$.fragment,a)},m(a,p){A(n,a,p),l=!0},p:z,i(a){l||(f(n.$$.fragment,a),l=!0)},o(a){$(n.$$.fragment,a),l=!1},d(a){m(n,a)}}}function as(c){let n,l,a,p;return n=new R({props:{value:"yarn",$$slots:{default:[ss]},$$scope:{ctx:c}}}),a=new R({props:{value:"npm",$$slots:{default:[ns]},$$scope:{ctx:c}}}),{c(){F(n.$$.fragment),l=x(),F(a.$$.fragment)},l(e){C(n.$$.fragment,e),l=v(e),C(a.$$.fragment,e)},m(e,t){A(n,e,t),D(e,l,t),A(a,e,t),p=!0},p(e,t){const k={};t&1&&(k.$$scope={dirty:t,ctx:e}),n.$set(k);const h={};t&1&&(h.$$scope={dirty:t,ctx:e}),a.$set(h)},i(e){p||(f(n.$$.fragment,e),f(a.$$.fragment,e),p=!0)},o(e){$(n.$$.fragment,e),$(a.$$.fragment,e),p=!1},d(e){m(n,e),e&&r(l),m(a,e)}}}function ls(c){let n;return{c(){n=b("#")},l(l){n=_(l,"#")},m(l,a){D(l,n,a)},d(l){l&&r(n)}}}function es(c){let n,l,a,p,e,t,k,h,y,u,H,T,g,G,i,d,M,O,E,q;return t=new N({props:{href:"https://docs.blocknative.com/gas-platform",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[X]},$$scope:{ctx:c}}}),u=new N({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[Z]},$$scope:{ctx:c}}}),g=new W({props:{values:["yarn","npm"],$$slots:{default:[as]},$$scope:{ctx:c}}}),d=new N({props:{class:"header-anchor",href:"#standalone-usage","aria-hidden":"true",$$slots:{default:[ls]},$$scope:{ctx:c}}}),E=new Y({props:{lang:"typescript",ext:"ts",linesCount:38,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> gas </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/gas</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// subscribe to a single chain for estimates using the default poll rate of 5 secs</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// API key is optional and if provided allows for faster poll rates</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> ethMainnetGasBlockPrices </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> gas</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">stream</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">apiKey</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;OPTIONAL_API_KEY&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">endpoint</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">blockPrices</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">unsubscribe</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> ethGasUnsub </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> ethMainnetGasBlockPrices</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subscribe</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">estimates</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(estimates)</span></span>
<span class="line"><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// .... sometime later, unsubscribe to stop polling</span></span>
<span class="line"><span style="color: #82AAFF">setTimeout</span><span style="color: #A6ACCD">(ethGasUnsub</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">10000</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// OR you can subscribe to multiple chains at once:</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> gasBlockPrices </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> gas</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">stream</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x89</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">apiKey</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;OPTIONAL_API_KEY&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">endpoint</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">blockPrices</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// can override default poll rate as well</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">poll</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1000</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> unsubscribe </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> gasBlockPrices</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subscribe</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">estimates</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(estimates))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// .... sometime later, unsubscribe to stop polling</span></span>
<span class="line"><span style="color: #82AAFF">setTimeout</span><span style="color: #A6ACCD">(unsubscribe</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">10000</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// Can also just do a one time get rather than a stream</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> gasBlockPrices </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> gas</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x89</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">apiKey</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;OPTIONAL_API_KEY&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">endpoint</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">blockPrices</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),{c(){n=K("h1"),l=b("@web3-onboard/gas"),a=x(),p=K("p"),e=b("A module for requesting streams or single requests of gas price estimates from the "),F(t.$$.fragment),k=b("."),h=x(),y=K("h3"),F(u.$$.fragment),H=b(" Install"),T=x(),F(g.$$.fragment),G=x(),i=K("h3"),F(d.$$.fragment),M=b(" Standalone Usage"),O=x(),F(E.$$.fragment),this.h()},l(s){n=L(s,"H1",{});var o=S(n);l=_(o,"@web3-onboard/gas"),o.forEach(r),a=v(s),p=L(s,"P",{});var w=S(p);e=_(w,"A module for requesting streams or single requests of gas price estimates from the "),C(t.$$.fragment,w),k=_(w,"."),w.forEach(r),h=v(s),y=L(s,"H3",{id:!0,tabindex:!0});var P=S(y);C(u.$$.fragment,P),H=_(P," Install"),P.forEach(r),T=v(s),C(g.$$.fragment,s),G=v(s),i=L(s,"H3",{id:!0,tabindex:!0});var B=S(i);C(d.$$.fragment,B),M=_(B," Standalone Usage"),B.forEach(r),O=v(s),C(E.$$.fragment,s),this.h()},h(){U(y,"id","install"),U(y,"tabindex","-1"),U(i,"id","standalone-usage"),U(i,"tabindex","-1")},m(s,o){D(s,n,o),I(n,l),D(s,a,o),D(s,p,o),I(p,e),A(t,p,null),I(p,k),D(s,h,o),D(s,y,o),A(u,y,null),I(y,H),D(s,T,o),A(g,s,o),D(s,G,o),D(s,i,o),A(d,i,null),I(i,M),D(s,O,o),A(E,s,o),q=!0},p(s,[o]){const w={};o&1&&(w.$$scope={dirty:o,ctx:s}),t.$set(w);const P={};o&1&&(P.$$scope={dirty:o,ctx:s}),u.$set(P);const B={};o&1&&(B.$$scope={dirty:o,ctx:s}),g.$set(B);const j={};o&1&&(j.$$scope={dirty:o,ctx:s}),d.$set(j)},i(s){q||(f(t.$$.fragment,s),f(u.$$.fragment,s),f(g.$$.fragment,s),f(d.$$.fragment,s),f(E.$$.fragment,s),q=!0)},o(s){$(t.$$.fragment,s),$(u.$$.fragment,s),$(g.$$.fragment,s),$(d.$$.fragment,s),$(E.$$.fragment,s),q=!1},d(s){s&&r(n),s&&r(a),s&&r(p),m(t),s&&r(h),s&&r(y),m(u),s&&r(T),m(g,s),s&&r(G),s&&r(i),m(d),s&&r(O),m(E,s)}}}class Fs extends J{constructor(n){super(),Q(this,n,null,es,V,{})}}export{Fs as default};

import{S as de,i as ge,s as he,e as d,t as f,k as u,w as o,c as g,a as h,h as $,d as e,m as C,x as r,b as A,g as p,M as m,y as c,q as F,o as D,B as y,E as fl}from"../../../chunks/index-c32358ff.js";import"../../../chunks/scroll-5387a6f1.js";import{C as x}from"../../../chunks/CodeFence-ac7b69e1.js";import{C as E}from"../../../chunks/CodeInline-8df56a89.js";import{L as _}from"../../../chunks/Link-d3089e65.js";/* empty css                                                            */import{T as be,a as me}from"../../../chunks/Tabs-f2c9522f.js";import"../../../chunks/singletons-37dfeae3.js";import"../../../chunks/contexts-2aef7541.js";function _e(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function we(i){let a,n;return a=new x({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/vue
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/vue</span></span>
<span class="line"></span></code></pre>`}}),{c(){o(a.$$.fragment)},l(t){r(a.$$.fragment,t)},m(t,b){c(a,t,b),n=!0},p:fl,i(t){n||(F(a.$$.fragment,t),n=!0)},o(t){D(a.$$.fragment,t),n=!1},d(t){y(a,t)}}}function Ee(i){let a,n;return a=new x({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/vue
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/vue</span></span>
<span class="line"></span></code></pre>`}}),{c(){o(a.$$.fragment)},l(t){r(a.$$.fragment,t)},m(t,b){c(a,t,b),n=!0},p:fl,i(t){n||(F(a.$$.fragment,t),n=!0)},o(t){D(a.$$.fragment,t),n=!1},d(t){y(a,t)}}}function xe(i){let a,n,t,b;return a=new me({props:{value:"yarn",$$slots:{default:[we]},$$scope:{ctx:i}}}),t=new me({props:{value:"npm",$$slots:{default:[Ee]},$$scope:{ctx:i}}}),{c(){o(a.$$.fragment),n=u(),o(t.$$.fragment)},l(w){r(a.$$.fragment,w),n=C(w),r(t.$$.fragment,w)},m(w,v){c(a,w,v),p(w,n,v),c(t,w,v),b=!0},p(w,v){const W={};v&1&&(W.$$scope={dirty:v,ctx:w}),a.$set(W);const O={};v&1&&(O.$$scope={dirty:v,ctx:w}),t.$set(O)},i(w){b||(F(a.$$.fragment,w),F(t.$$.fragment,w),b=!0)},o(w){D(a.$$.fragment,w),D(t.$$.fragment,w),b=!1},d(w){y(a,w),w&&e(n),y(t,w)}}}function ve(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function ke(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function We(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function He(i){let a,n,t;return n=new E({props:{code:"@web3-onboard/core"}}),{c(){a=f("initialization docs for "),o(n.$$.fragment)},l(b){a=$(b,"initialization docs for "),r(n.$$.fragment,b)},m(b,w){p(b,a,w),c(n,b,w),t=!0},p:fl,i(b){t||(F(n.$$.fragment,b),t=!0)},o(b){D(n.$$.fragment,b),t=!1},d(b){b&&e(a),y(n,b)}}}function Oe(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function qe(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Me(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Pe(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function je(i){let a,n,t;return n=new E({props:{code:"@web3-onboard/core"}}),{c(){a=f("connecting a wallet for "),o(n.$$.fragment)},l(b){a=$(b,"connecting a wallet for "),r(n.$$.fragment,b)},m(b,w){p(b,a,w),c(n,b,w),t=!0},p:fl,i(b){t||(F(n.$$.fragment,b),t=!0)},o(b){D(n.$$.fragment,b),t=!1},d(b){b&&e(a),y(n,b)}}}function Re(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Te(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Ue(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Ve(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Ie(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Ke(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function ze(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Be(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Se(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Le(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Ye(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Ne(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Qe(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Ge(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Je(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Xe(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function Ze(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function sp(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function np(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function ap(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function lp(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function ep(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function pp(i){let a;return{c(){a=f("#")},l(n){a=$(n,"#")},m(n,t){p(n,a,t)},d(n){n&&e(a)}}}function tp(i){let a,n,t,b,w,v,W,O,$l,Ca,Fs,Aa,Y,Ds,ul,ma,Ss,N,ys,Cl,da,q,is,Al,Ls,ga,k,ml,Ys,dl,Ns,gl,Qs,hl,fs,ha,Q,$s,bl,ba,Gs,M,us,_l,Js,_a,G,Xs,wl,Zs,El,wa,J,Cs,xl,Ea,sn,P,As,vl,nn,xa,an,kl,ms,va,X,ds,Wl,ka,ln,j,gs,Hl,en,Wa,hs,Ol,pn,ql,Ha,Z,bs,Ml,Oa,tn,R,_s,Pl,on,qa,In,jl,Ma,ss,ws,Rl,Pa,rn,T,Es,Tl,cn,ja,Kn,Ul,Ra,ns,xs,Vl,Ta,Fn,U,vs,Il,Dn,Ua,zn,Kl,Va,as,ks,zl,Ia,yn,V,Ws,Bl,fn,Ka,$n,Sl,un,za,ls,Hs,Ll,Ba,Cn,I,Os,Yl,An,Sa,Bn,Nl,La,es,qs,Ql,Ya,mn,K,Ms,Gl,dn,Na,Sn,Jl,Qa,ps,Ps,Xl,Ga,gn,z,js,Zl,hn,Ja,Ln,se,Xa,ts,Rs,ne,Za,bn,B,Ts,ae,_n,sl,Yn,le,nl,os,Us,ee,al,wn,S,Vs,pe,En,ll,Nn,te,el,rs,Is,oe,pl,xn,L,Ks,re,vn,tl,Qn,ce,ol,cs,zs,Fe,rl,kn,cl;return O=new _({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[_e]},$$scope:{ctx:i}}}),Fs=new be({props:{values:["yarn","npm"],$$slots:{default:[xe]},$$scope:{ctx:i}}}),Ds=new _({props:{class:"header-anchor",href:"#quickstart","aria-hidden":"true",$$slots:{default:[ve]},$$scope:{ctx:i}}}),Ss=new x({props:{lang:"typescript",ext:"ts",linesCount:26,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">init</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> infuraKey </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> rpcUrl </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">\`</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/</span><span style="color: #89DDFF">\${</span><span style="color: #A6ACCD">infuraKey</span><span style="color: #89DDFF">}\`</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> web3Onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">init</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      rpcUrl</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> wallets</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> connectWallet</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> disconnectConnectedWallet</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> connectedWallet </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> (connectedWallet) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethersProvider</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ethers</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">providers</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Web3Provider</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">connectedWallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">provider</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">any</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// ..... do stuff with the provider</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),ys=new _({props:{class:"header-anchor",href:"#functions","aria-hidden":"true",$$slots:{default:[ke]},$$scope:{ctx:i}}}),is=new _({props:{class:"header-anchor",href:"#init","aria-hidden":"true",$$slots:{default:[We]},$$scope:{ctx:i}}}),Ls=new E({props:{code:"init"}}),Ys=new E({props:{code:"init"}}),Ns=new E({props:{code:"web3-onboard"}}),Qs=new E({props:{code:"useOnboard()"}}),fs=new _({props:{href:"/docs/packages/core#initialization",$$slots:{default:[He]},$$scope:{ctx:i}}}),$s=new _({props:{class:"header-anchor",href:"#example-usage","aria-hidden":"true",$$slots:{default:[Oe]},$$scope:{ctx:i}}}),Gs=new x({props:{lang:"typescript",ext:"ts",linesCount:19,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">init</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> infuraKey </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> rpcUrl </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">\`</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/</span><span style="color: #89DDFF">\${</span><span style="color: #A6ACCD">infuraKey</span><span style="color: #89DDFF">}\`</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> web3Onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">init</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      rpcUrl</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),us=new _({props:{class:"header-anchor",href:"#useonboard","aria-hidden":"true",$$slots:{default:[qe]},$$scope:{ctx:i}}}),Js=new E({props:{code:"useOnboard"}}),Xs=new E({props:{code:"useOnboard"}}),Zs=new E({props:{code:"init"}}),Cs=new _({props:{class:"header-anchor",href:"#example-usage-1","aria-hidden":"true",$$slots:{default:[Me]},$$scope:{ctx:i}}}),sn=new x({props:{lang:"typescript",ext:"ts",linesCount:7,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// Use the composable</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// Or destructure it</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> wallets</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> connectWallet</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> disconnectConnectedWallet</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> connectedWallet </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// do stuff</span></span>
<span class="line"></span></code></pre>`}}),As=new _({props:{class:"header-anchor",href:"#connectwallet","aria-hidden":"true",$$slots:{default:[Pe]},$$scope:{ctx:i}}}),nn=new E({props:{code:"connectWallet"}}),ms=new _({props:{href:"/docs/packages/core#connecting-a-wallet",$$slots:{default:[je]},$$scope:{ctx:i}}}),ds=new _({props:{class:"header-anchor",href:"#example-usage-2","aria-hidden":"true",$$slots:{default:[Re]},$$scope:{ctx:i}}}),ln=new x({props:{lang:"vue",ext:"vue",linesCount:15,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connect</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #C792EA">async</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #82AAFF">connectWallet</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connect</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">button</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> @</span><span style="color: #C792EA">click</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">connect</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Connect to a Wallet</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),gs=new _({props:{class:"header-anchor",href:"#connectedchain","aria-hidden":"true",$$slots:{default:[Te]},$$scope:{ctx:i}}}),en=new E({props:{code:"connectedChain"}}),pn=new E({props:{code:"connectedWallet"}}),bs=new _({props:{class:"header-anchor",href:"#example-usage-3","aria-hidden":"true",$$slots:{default:[Ue]},$$scope:{ctx:i}}}),tn=new x({props:{lang:"vue",ext:"vue",linesCount:14,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectedChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectedChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Connected Chain: </span><span style="color: #89DDFF">{{</span><span style="color: #A6ACCD"> connectedChain</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">id </span><span style="color: #89DDFF">}}&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),_s=new _({props:{class:"header-anchor",href:"#connectedwallet","aria-hidden":"true",$$slots:{default:[Ve]},$$scope:{ctx:i}}}),on=new E({props:{code:"connectedWallet"}}),ws=new _({props:{class:"header-anchor",href:"#example-usage-4","aria-hidden":"true",$$slots:{default:[Ie]},$$scope:{ctx:i}}}),rn=new x({props:{lang:"vue",ext:"vue",linesCount:14,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectedWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectedWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Connected Wallet: </span><span style="color: #89DDFF">{{</span><span style="color: #A6ACCD"> connectedWallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">label </span><span style="color: #89DDFF">}}&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),Es=new _({props:{class:"header-anchor",href:"#connectingwallet","aria-hidden":"true",$$slots:{default:[Ke]},$$scope:{ctx:i}}}),cn=new E({props:{code:"connectingWallet"}}),xs=new _({props:{class:"header-anchor",href:"#example-usage-5","aria-hidden":"true",$$slots:{default:[ze]},$$scope:{ctx:i}}}),Fn=new x({props:{lang:"vue",ext:"vue",linesCount:14,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectingWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connectingWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">v-if</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">connectingWallet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Connecting...</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),vs=new _({props:{class:"header-anchor",href:"#disconnectwallet","aria-hidden":"true",$$slots:{default:[Be]},$$scope:{ctx:i}}}),Dn=new E({props:{code:"disconnectWallet"}}),ks=new _({props:{class:"header-anchor",href:"#example-usage-6","aria-hidden":"true",$$slots:{default:[Se]},$$scope:{ctx:i}}}),yn=new x({props:{lang:"vue",ext:"vue",linesCount:15,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">disconnectWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">disconnect</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #C792EA">async</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #82AAFF">disconnectWallet</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MetaMask</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">disconnect</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">button</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> @</span><span style="color: #C792EA">click</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">disconnect</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Disconnect MetaMask</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),Ws=new _({props:{class:"header-anchor",href:"#disconnectconnectedwallet","aria-hidden":"true",$$slots:{default:[Le]},$$scope:{ctx:i}}}),fn=new E({props:{code:"disconnectConnectedWallet"}}),un=new E({props:{code:"connectedWallet"}}),Hs=new _({props:{class:"header-anchor",href:"#example-usage-7","aria-hidden":"true",$$slots:{default:[Ye]},$$scope:{ctx:i}}}),Cn=new x({props:{lang:"vue",ext:"vue",linesCount:14,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">disconnectConnectedWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">disconnectConnectedWallet</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">button</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> @</span><span style="color: #C792EA">click</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">disconnectConnectedWallet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Disconnect connectedWallet</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),Os=new _({props:{class:"header-anchor",href:"#getchain","aria-hidden":"true",$$slots:{default:[Ne]},$$scope:{ctx:i}}}),An=new E({props:{code:"getChain"}}),qs=new _({props:{class:"header-anchor",href:"#example-usage-8","aria-hidden":"true",$$slots:{default:[Qe]},$$scope:{ctx:i}}}),mn=new x({props:{lang:"vue",ext:"vue",linesCount:14,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">getChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">getChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">MetaMask is connected to: </span><span style="color: #89DDFF">{{</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">getChain</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MetaMask</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">) </span><span style="color: #89DDFF">}}&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),Ms=new _({props:{class:"header-anchor",href:"#setchain","aria-hidden":"true",$$slots:{default:[Ge]},$$scope:{ctx:i}}}),dn=new E({props:{code:"setChain"}}),Ps=new _({props:{class:"header-anchor",href:"#example-usage-9","aria-hidden":"true",$$slots:{default:[Je]},$$scope:{ctx:i}}}),gn=new x({props:{lang:"vue",ext:"vue",linesCount:15,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">setChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">set</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #82AAFF">setChain</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> wallet</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MetaMask</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> chainId</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">set</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">button</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> @</span><span style="color: #C792EA">click</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">set</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Set MetaMask chain to mainnet</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),js=new _({props:{class:"header-anchor",href:"#settingchain","aria-hidden":"true",$$slots:{default:[Xe]},$$scope:{ctx:i}}}),hn=new E({props:{code:"settingChain"}}),Rs=new _({props:{class:"header-anchor",href:"#example-usage-10","aria-hidden":"true",$$slots:{default:[Ze]},$$scope:{ctx:i}}}),bn=new x({props:{lang:"vue",ext:"vue",linesCount:14,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">settingChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">settingChain</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">v-if</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">settingChain</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Setting chain...</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),Ts=new _({props:{class:"header-anchor",href:"#wallets","aria-hidden":"true",$$slots:{default:[sp]},$$scope:{ctx:i}}}),_n=new E({props:{code:"wallets"}}),Us=new _({props:{class:"header-anchor",href:"#example-usage-11","aria-hidden":"true",$$slots:{default:[np]},$$scope:{ctx:i}}}),wn=new x({props:{lang:"vue",ext:"vue",linesCount:9,code:`<pre><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">useOnboard</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">setup</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallets</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">useOnboard</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wallets</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),Vs=new _({props:{class:"header-anchor",href:"#alreadyconnectedwallets","aria-hidden":"true",$$slots:{default:[ap]},$$scope:{ctx:i}}}),En=new E({props:{code:"alreadyConnectedWallets"}}),Is=new _({props:{class:"header-anchor",href:"#example-usage-12","aria-hidden":"true",$$slots:{default:[lp]},$$scope:{ctx:i}}}),xn=new x({props:{lang:"text",ext:"text",linesCount:17,code:`<pre><code><span class="line"><span style="color: undefined">vue</span></span>
<span class="line"><span style="color: undefined">&lt;script&gt;</span></span>
<span class="line"><span style="color: undefined">import { useOnboard } from &#39;@web3-onboard/vue&#39;</span></span>
<span class="line"><span style="color: undefined">export default {</span></span>
<span class="line"><span style="color: undefined">  setup() {</span></span>
<span class="line"><span style="color: undefined">    const { alreadyConnectedWallets } = useOnboard()</span></span>
<span class="line"><span style="color: undefined">    return { alreadyConnectedWallets }</span></span>
<span class="line"><span style="color: undefined">  }</span></span>
<span class="line"><span style="color: undefined">}</span></span>
<span class="line"><span style="color: undefined">&lt;/script&gt;</span></span>
<span class="line"><span style="color: undefined"></span></span>
<span class="line"><span style="color: undefined">&lt;template&gt;</span></span>
<span class="line"><span style="color: undefined">  &lt;div v-for=&quot;wallet in wallets&quot;&gt;</span></span>
<span class="line"><span style="color: undefined">    &lt;span&gt;Label: {{wallet.label}}&lt;/span&gt;</span></span>
<span class="line"><span style="color: undefined">  &lt;/div&gt;</span></span>
<span class="line"><span style="color: undefined">&lt;/template&gt;</span></span>
<span class="line"><span style="color: undefined"></span></span></code></pre>`}}),Ks=new _({props:{class:"header-anchor",href:"#lastconnectedtimestamp","aria-hidden":"true",$$slots:{default:[ep]},$$scope:{ctx:i}}}),vn=new E({props:{code:"lastConnectedTimestamp"}}),zs=new _({props:{class:"header-anchor",href:"#example-usage-13","aria-hidden":"true",$$slots:{default:[pp]},$$scope:{ctx:i}}}),kn=new x({props:{lang:"text",ext:"text",linesCount:15,code:`<pre><code><span class="line"><span style="color: undefined">vue</span></span>
<span class="line"><span style="color: undefined">&lt;script&gt;</span></span>
<span class="line"><span style="color: undefined">import { useOnboard } from &#39;@web3-onboard/vue&#39;</span></span>
<span class="line"><span style="color: undefined">export default {</span></span>
<span class="line"><span style="color: undefined">  setup() {</span></span>
<span class="line"><span style="color: undefined">    const { lastConnectedTimestamp } = useOnboard()</span></span>
<span class="line"><span style="color: undefined">    return { lastConnectedTimestamp }</span></span>
<span class="line"><span style="color: undefined">  }</span></span>
<span class="line"><span style="color: undefined">}</span></span>
<span class="line"><span style="color: undefined">&lt;/script&gt;</span></span>
<span class="line"><span style="color: undefined"></span></span>
<span class="line"><span style="color: undefined">&lt;template&gt;</span></span>
<span class="line"><span style="color: undefined">  &lt;span&gt;Your last connection timestamp was: {{ lastConnectedTimestamp }}&lt;/span&gt;</span></span>
<span class="line"><span style="color: undefined">&lt;/template&gt;</span></span>
<span class="line"><span style="color: undefined"></span></span></code></pre>`}}),{c(){a=d("h1"),n=f("@web3-onboard/vue"),t=u(),b=d("p"),w=f("A collection of composable functions for implementing web3-onboard in to a Vue project; compatible both with Vue 2 + composition-api and Vue 3"),v=u(),W=d("h2"),o(O.$$.fragment),$l=f(" Install"),Ca=u(),o(Fs.$$.fragment),Aa=u(),Y=d("h2"),o(Ds.$$.fragment),ul=f(" Quickstart"),ma=u(),o(Ss.$$.fragment),N=d("h2"),o(ys.$$.fragment),Cl=f(" Functions"),da=u(),q=d("h2"),o(is.$$.fragment),Al=u(),o(Ls.$$.fragment),ga=u(),k=d("p"),ml=f("The "),o(Ys.$$.fragment),dl=f(" function initializes "),o(Ns.$$.fragment),gl=f(" and makes it available to the "),o(Qs.$$.fragment),hl=f(" composable. For references check out the "),o(fs.$$.fragment),ha=u(),Q=d("h3"),o($s.$$.fragment),bl=f(" Example usage"),ba=u(),o(Gs.$$.fragment),M=d("h2"),o(us.$$.fragment),_l=u(),o(Js.$$.fragment),_a=u(),G=d("p"),o(Xs.$$.fragment),wl=f(" must be used after the "),o(Zs.$$.fragment),El=f(" function has been called - it will return an object that can be destructured to obtain the following reactive variables and functions:"),wa=u(),J=d("h3"),o(Cs.$$.fragment),xl=f(" Example usage"),Ea=u(),o(sn.$$.fragment),P=d("h3"),o(As.$$.fragment),vl=u(),o(nn.$$.fragment),xa=u(),an=d("p"),kl=f("Function to open the onboard modal and connect to a wallet provider. For reference check out the "),o(ms.$$.fragment),va=u(),X=d("h3"),o(ds.$$.fragment),Wl=f(" Example usage"),ka=u(),o(ln.$$.fragment),j=d("h3"),o(gs.$$.fragment),Hl=u(),o(en.$$.fragment),Wa=u(),hs=d("p"),Ol=f("Computed property that contains the current chain to which "),o(pn.$$.fragment),ql=f(" is connected"),Ha=u(),Z=d("h3"),o(bs.$$.fragment),Ml=f(" Example usage"),Oa=u(),o(tn.$$.fragment),R=d("h3"),o(_s.$$.fragment),Pl=u(),o(on.$$.fragment),qa=u(),In=d("p"),jl=f("Computed property that contains the latest connected wallet"),Ma=u(),ss=d("h3"),o(ws.$$.fragment),Rl=f(" Example usage"),Pa=u(),o(rn.$$.fragment),T=d("h3"),o(Es.$$.fragment),Tl=u(),o(cn.$$.fragment),ja=u(),Kn=d("p"),Ul=f("Readonly boolean ref that tracks the state of the wallet connection status"),Ra=u(),ns=d("h3"),o(xs.$$.fragment),Vl=f(" Example usage"),Ta=u(),o(Fn.$$.fragment),U=d("h3"),o(vs.$$.fragment),Il=u(),o(Dn.$$.fragment),Ua=u(),zn=d("p"),Kl=f("Function to disconnect a specific wallet"),Va=u(),as=d("h3"),o(ks.$$.fragment),zl=f(" Example usage"),Ia=u(),o(yn.$$.fragment),V=d("h3"),o(Ws.$$.fragment),Bl=u(),o(fn.$$.fragment),Ka=u(),$n=d("p"),Sl=f("Function to disconnect the "),o(un.$$.fragment),za=u(),ls=d("h3"),o(Hs.$$.fragment),Ll=f(" Example usage"),Ba=u(),o(Cn.$$.fragment),I=d("h3"),o(Os.$$.fragment),Yl=u(),o(An.$$.fragment),Sa=u(),Bn=d("p"),Nl=f("Function that returns the current chain a wallet is connected to"),La=u(),es=d("h3"),o(qs.$$.fragment),Ql=f(" Example usage"),Ya=u(),o(mn.$$.fragment),K=d("h3"),o(Ms.$$.fragment),Gl=u(),o(dn.$$.fragment),Na=u(),Sn=d("p"),Jl=f("Function to set the chain of a wallet"),Qa=u(),ps=d("h3"),o(Ps.$$.fragment),Xl=f(" Example usage"),Ga=u(),o(gn.$$.fragment),z=d("h3"),o(js.$$.fragment),Zl=u(),o(hn.$$.fragment),Ja=u(),Ln=d("p"),se=f("Readonly boolean ref that tracks the status of setting the chain"),Xa=u(),ts=d("h3"),o(Rs.$$.fragment),ne=f(" Example usage"),Za=u(),o(bn.$$.fragment),B=d("h3"),o(Ts.$$.fragment),ae=u(),o(_n.$$.fragment),sl=u(),Yn=d("p"),le=f("Readonly ref that contains every wallet that has been connected"),nl=u(),os=d("h3"),o(Us.$$.fragment),ee=f(" Example usage"),al=u(),o(wn.$$.fragment),S=d("h3"),o(Vs.$$.fragment),pe=u(),o(En.$$.fragment),ll=u(),Nn=d("p"),te=f("Readonly ref that contains every wallet that user connected to in the past; useful to reconnect wallets automatically after a reload"),el=u(),rs=d("h3"),o(Is.$$.fragment),oe=f(" Example usage"),pl=u(),o(xn.$$.fragment),L=d("h3"),o(Ks.$$.fragment),re=u(),o(vn.$$.fragment),tl=u(),Qn=d("p"),ce=f("Readonly ref that contains the last time that the user connected a wallet in milliseconds"),ol=u(),cs=d("h3"),o(zs.$$.fragment),Fe=f(" Example usage"),rl=u(),o(kn.$$.fragment),this.h()},l(s){a=g(s,"H1",{});var l=h(a);n=$(l,"@web3-onboard/vue"),l.forEach(e),t=C(s),b=g(s,"P",{});var Da=h(b);w=$(Da,"A collection of composable functions for implementing web3-onboard in to a Vue project; compatible both with Vue 2 + composition-api and Vue 3"),Da.forEach(e),v=C(s),W=g(s,"H2",{id:!0,tabindex:!0});var Gn=h(W);r(O.$$.fragment,Gn),$l=$(Gn," Install"),Gn.forEach(e),Ca=C(s),r(Fs.$$.fragment,s),Aa=C(s),Y=g(s,"H2",{id:!0,tabindex:!0});var Jn=h(Y);r(Ds.$$.fragment,Jn),ul=$(Jn," Quickstart"),Jn.forEach(e),ma=C(s),r(Ss.$$.fragment,s),N=g(s,"H2",{id:!0,tabindex:!0});var Xn=h(N);r(ys.$$.fragment,Xn),Cl=$(Xn," Functions"),Xn.forEach(e),da=C(s),q=g(s,"H2",{id:!0,tabindex:!0});var Wn=h(q);r(is.$$.fragment,Wn),Al=C(Wn),r(Ls.$$.fragment,Wn),Wn.forEach(e),ga=C(s),k=g(s,"P",{});var H=h(k);ml=$(H,"The "),r(Ys.$$.fragment,H),dl=$(H," function initializes "),r(Ns.$$.fragment,H),gl=$(H," and makes it available to the "),r(Qs.$$.fragment,H),hl=$(H," composable. For references check out the "),r(fs.$$.fragment,H),H.forEach(e),ha=C(s),Q=g(s,"H3",{id:!0,tabindex:!0});var Zn=h(Q);r($s.$$.fragment,Zn),bl=$(Zn," Example usage"),Zn.forEach(e),ba=C(s),r(Gs.$$.fragment,s),M=g(s,"H2",{id:!0,tabindex:!0});var Hn=h(M);r(us.$$.fragment,Hn),_l=C(Hn),r(Js.$$.fragment,Hn),Hn.forEach(e),_a=C(s),G=g(s,"P",{});var Bs=h(G);r(Xs.$$.fragment,Bs),wl=$(Bs," must be used after the "),r(Zs.$$.fragment,Bs),El=$(Bs," function has been called - it will return an object that can be destructured to obtain the following reactive variables and functions:"),Bs.forEach(e),wa=C(s),J=g(s,"H3",{id:!0,tabindex:!0});var sa=h(J);r(Cs.$$.fragment,sa),xl=$(sa," Example usage"),sa.forEach(e),Ea=C(s),r(sn.$$.fragment,s),P=g(s,"H3",{id:!0,tabindex:!0});var On=h(P);r(As.$$.fragment,On),vl=C(On),r(nn.$$.fragment,On),On.forEach(e),xa=C(s),an=g(s,"P",{});var na=h(an);kl=$(na,"Function to open the onboard modal and connect to a wallet provider. For reference check out the "),r(ms.$$.fragment,na),na.forEach(e),va=C(s),X=g(s,"H3",{id:!0,tabindex:!0});var aa=h(X);r(ds.$$.fragment,aa),Wl=$(aa," Example usage"),aa.forEach(e),ka=C(s),r(ln.$$.fragment,s),j=g(s,"H3",{id:!0,tabindex:!0});var qn=h(j);r(gs.$$.fragment,qn),Hl=C(qn),r(en.$$.fragment,qn),qn.forEach(e),Wa=C(s),hs=g(s,"P",{});var Mn=h(hs);Ol=$(Mn,"Computed property that contains the current chain to which "),r(pn.$$.fragment,Mn),ql=$(Mn," is connected"),Mn.forEach(e),Ha=C(s),Z=g(s,"H3",{id:!0,tabindex:!0});var la=h(Z);r(bs.$$.fragment,la),Ml=$(la," Example usage"),la.forEach(e),Oa=C(s),r(tn.$$.fragment,s),R=g(s,"H3",{id:!0,tabindex:!0});var Pn=h(R);r(_s.$$.fragment,Pn),Pl=C(Pn),r(on.$$.fragment,Pn),Pn.forEach(e),qa=C(s),In=g(s,"P",{});var ya=h(In);jl=$(ya,"Computed property that contains the latest connected wallet"),ya.forEach(e),Ma=C(s),ss=g(s,"H3",{id:!0,tabindex:!0});var ea=h(ss);r(ws.$$.fragment,ea),Rl=$(ea," Example usage"),ea.forEach(e),Pa=C(s),r(rn.$$.fragment,s),T=g(s,"H3",{id:!0,tabindex:!0});var jn=h(T);r(Es.$$.fragment,jn),Tl=C(jn),r(cn.$$.fragment,jn),jn.forEach(e),ja=C(s),Kn=g(s,"P",{});var ia=h(Kn);Ul=$(ia,"Readonly boolean ref that tracks the state of the wallet connection status"),ia.forEach(e),Ra=C(s),ns=g(s,"H3",{id:!0,tabindex:!0});var pa=h(ns);r(xs.$$.fragment,pa),Vl=$(pa," Example usage"),pa.forEach(e),Ta=C(s),r(Fn.$$.fragment,s),U=g(s,"H3",{id:!0,tabindex:!0});var Rn=h(U);r(vs.$$.fragment,Rn),Il=C(Rn),r(Dn.$$.fragment,Rn),Rn.forEach(e),Ua=C(s),zn=g(s,"P",{});var fa=h(zn);Kl=$(fa,"Function to disconnect a specific wallet"),fa.forEach(e),Va=C(s),as=g(s,"H3",{id:!0,tabindex:!0});var ta=h(as);r(ks.$$.fragment,ta),zl=$(ta," Example usage"),ta.forEach(e),Ia=C(s),r(yn.$$.fragment,s),V=g(s,"H3",{id:!0,tabindex:!0});var Tn=h(V);r(Ws.$$.fragment,Tn),Bl=C(Tn),r(fn.$$.fragment,Tn),Tn.forEach(e),Ka=C(s),$n=g(s,"P",{});var oa=h($n);Sl=$(oa,"Function to disconnect the "),r(un.$$.fragment,oa),oa.forEach(e),za=C(s),ls=g(s,"H3",{id:!0,tabindex:!0});var ra=h(ls);r(Hs.$$.fragment,ra),Ll=$(ra," Example usage"),ra.forEach(e),Ba=C(s),r(Cn.$$.fragment,s),I=g(s,"H3",{id:!0,tabindex:!0});var Un=h(I);r(Os.$$.fragment,Un),Yl=C(Un),r(An.$$.fragment,Un),Un.forEach(e),Sa=C(s),Bn=g(s,"P",{});var $a=h(Bn);Nl=$($a,"Function that returns the current chain a wallet is connected to"),$a.forEach(e),La=C(s),es=g(s,"H3",{id:!0,tabindex:!0});var ca=h(es);r(qs.$$.fragment,ca),Ql=$(ca," Example usage"),ca.forEach(e),Ya=C(s),r(mn.$$.fragment,s),K=g(s,"H3",{id:!0,tabindex:!0});var Vn=h(K);r(Ms.$$.fragment,Vn),Gl=C(Vn),r(dn.$$.fragment,Vn),Vn.forEach(e),Na=C(s),Sn=g(s,"P",{});var ua=h(Sn);Jl=$(ua,"Function to set the chain of a wallet"),ua.forEach(e),Qa=C(s),ps=g(s,"H3",{id:!0,tabindex:!0});var Fa=h(ps);r(Ps.$$.fragment,Fa),Xl=$(Fa," Example usage"),Fa.forEach(e),Ga=C(s),r(gn.$$.fragment,s),z=g(s,"H3",{id:!0,tabindex:!0});var Fl=h(z);r(js.$$.fragment,Fl),Zl=C(Fl),r(hn.$$.fragment,Fl),Fl.forEach(e),Ja=C(s),Ln=g(s,"P",{});var $e=h(Ln);se=$($e,"Readonly boolean ref that tracks the status of setting the chain"),$e.forEach(e),Xa=C(s),ts=g(s,"H3",{id:!0,tabindex:!0});var De=h(ts);r(Rs.$$.fragment,De),ne=$(De," Example usage"),De.forEach(e),Za=C(s),r(bn.$$.fragment,s),B=g(s,"H3",{id:!0,tabindex:!0});var Dl=h(B);r(Ts.$$.fragment,Dl),ae=C(Dl),r(_n.$$.fragment,Dl),Dl.forEach(e),sl=C(s),Yn=g(s,"P",{});var ue=h(Yn);le=$(ue,"Readonly ref that contains every wallet that has been connected"),ue.forEach(e),nl=C(s),os=g(s,"H3",{id:!0,tabindex:!0});var ye=h(os);r(Us.$$.fragment,ye),ee=$(ye," Example usage"),ye.forEach(e),al=C(s),r(wn.$$.fragment,s),S=g(s,"H3",{id:!0,tabindex:!0});var yl=h(S);r(Vs.$$.fragment,yl),pe=C(yl),r(En.$$.fragment,yl),yl.forEach(e),ll=C(s),Nn=g(s,"P",{});var Ce=h(Nn);te=$(Ce,"Readonly ref that contains every wallet that user connected to in the past; useful to reconnect wallets automatically after a reload"),Ce.forEach(e),el=C(s),rs=g(s,"H3",{id:!0,tabindex:!0});var ie=h(rs);r(Is.$$.fragment,ie),oe=$(ie," Example usage"),ie.forEach(e),pl=C(s),r(xn.$$.fragment,s),L=g(s,"H3",{id:!0,tabindex:!0});var il=h(L);r(Ks.$$.fragment,il),re=C(il),r(vn.$$.fragment,il),il.forEach(e),tl=C(s),Qn=g(s,"P",{});var Ae=h(Qn);ce=$(Ae,"Readonly ref that contains the last time that the user connected a wallet in milliseconds"),Ae.forEach(e),ol=C(s),cs=g(s,"H3",{id:!0,tabindex:!0});var fe=h(cs);r(zs.$$.fragment,fe),Fe=$(fe," Example usage"),fe.forEach(e),rl=C(s),r(kn.$$.fragment,s),this.h()},h(){A(W,"id","install"),A(W,"tabindex","-1"),A(Y,"id","quickstart"),A(Y,"tabindex","-1"),A(N,"id","functions"),A(N,"tabindex","-1"),A(q,"id","init"),A(q,"tabindex","-1"),A(Q,"id","example-usage"),A(Q,"tabindex","-1"),A(M,"id","useonboard"),A(M,"tabindex","-1"),A(J,"id","example-usage-1"),A(J,"tabindex","-1"),A(P,"id","connectwallet"),A(P,"tabindex","-1"),A(X,"id","example-usage-2"),A(X,"tabindex","-1"),A(j,"id","connectedchain"),A(j,"tabindex","-1"),A(Z,"id","example-usage-3"),A(Z,"tabindex","-1"),A(R,"id","connectedwallet"),A(R,"tabindex","-1"),A(ss,"id","example-usage-4"),A(ss,"tabindex","-1"),A(T,"id","connectingwallet"),A(T,"tabindex","-1"),A(ns,"id","example-usage-5"),A(ns,"tabindex","-1"),A(U,"id","disconnectwallet"),A(U,"tabindex","-1"),A(as,"id","example-usage-6"),A(as,"tabindex","-1"),A(V,"id","disconnectconnectedwallet"),A(V,"tabindex","-1"),A(ls,"id","example-usage-7"),A(ls,"tabindex","-1"),A(I,"id","getchain"),A(I,"tabindex","-1"),A(es,"id","example-usage-8"),A(es,"tabindex","-1"),A(K,"id","setchain"),A(K,"tabindex","-1"),A(ps,"id","example-usage-9"),A(ps,"tabindex","-1"),A(z,"id","settingchain"),A(z,"tabindex","-1"),A(ts,"id","example-usage-10"),A(ts,"tabindex","-1"),A(B,"id","wallets"),A(B,"tabindex","-1"),A(os,"id","example-usage-11"),A(os,"tabindex","-1"),A(S,"id","alreadyconnectedwallets"),A(S,"tabindex","-1"),A(rs,"id","example-usage-12"),A(rs,"tabindex","-1"),A(L,"id","lastconnectedtimestamp"),A(L,"tabindex","-1"),A(cs,"id","example-usage-13"),A(cs,"tabindex","-1")},m(s,l){p(s,a,l),m(a,n),p(s,t,l),p(s,b,l),m(b,w),p(s,v,l),p(s,W,l),c(O,W,null),m(W,$l),p(s,Ca,l),c(Fs,s,l),p(s,Aa,l),p(s,Y,l),c(Ds,Y,null),m(Y,ul),p(s,ma,l),c(Ss,s,l),p(s,N,l),c(ys,N,null),m(N,Cl),p(s,da,l),p(s,q,l),c(is,q,null),m(q,Al),c(Ls,q,null),p(s,ga,l),p(s,k,l),m(k,ml),c(Ys,k,null),m(k,dl),c(Ns,k,null),m(k,gl),c(Qs,k,null),m(k,hl),c(fs,k,null),p(s,ha,l),p(s,Q,l),c($s,Q,null),m(Q,bl),p(s,ba,l),c(Gs,s,l),p(s,M,l),c(us,M,null),m(M,_l),c(Js,M,null),p(s,_a,l),p(s,G,l),c(Xs,G,null),m(G,wl),c(Zs,G,null),m(G,El),p(s,wa,l),p(s,J,l),c(Cs,J,null),m(J,xl),p(s,Ea,l),c(sn,s,l),p(s,P,l),c(As,P,null),m(P,vl),c(nn,P,null),p(s,xa,l),p(s,an,l),m(an,kl),c(ms,an,null),p(s,va,l),p(s,X,l),c(ds,X,null),m(X,Wl),p(s,ka,l),c(ln,s,l),p(s,j,l),c(gs,j,null),m(j,Hl),c(en,j,null),p(s,Wa,l),p(s,hs,l),m(hs,Ol),c(pn,hs,null),m(hs,ql),p(s,Ha,l),p(s,Z,l),c(bs,Z,null),m(Z,Ml),p(s,Oa,l),c(tn,s,l),p(s,R,l),c(_s,R,null),m(R,Pl),c(on,R,null),p(s,qa,l),p(s,In,l),m(In,jl),p(s,Ma,l),p(s,ss,l),c(ws,ss,null),m(ss,Rl),p(s,Pa,l),c(rn,s,l),p(s,T,l),c(Es,T,null),m(T,Tl),c(cn,T,null),p(s,ja,l),p(s,Kn,l),m(Kn,Ul),p(s,Ra,l),p(s,ns,l),c(xs,ns,null),m(ns,Vl),p(s,Ta,l),c(Fn,s,l),p(s,U,l),c(vs,U,null),m(U,Il),c(Dn,U,null),p(s,Ua,l),p(s,zn,l),m(zn,Kl),p(s,Va,l),p(s,as,l),c(ks,as,null),m(as,zl),p(s,Ia,l),c(yn,s,l),p(s,V,l),c(Ws,V,null),m(V,Bl),c(fn,V,null),p(s,Ka,l),p(s,$n,l),m($n,Sl),c(un,$n,null),p(s,za,l),p(s,ls,l),c(Hs,ls,null),m(ls,Ll),p(s,Ba,l),c(Cn,s,l),p(s,I,l),c(Os,I,null),m(I,Yl),c(An,I,null),p(s,Sa,l),p(s,Bn,l),m(Bn,Nl),p(s,La,l),p(s,es,l),c(qs,es,null),m(es,Ql),p(s,Ya,l),c(mn,s,l),p(s,K,l),c(Ms,K,null),m(K,Gl),c(dn,K,null),p(s,Na,l),p(s,Sn,l),m(Sn,Jl),p(s,Qa,l),p(s,ps,l),c(Ps,ps,null),m(ps,Xl),p(s,Ga,l),c(gn,s,l),p(s,z,l),c(js,z,null),m(z,Zl),c(hn,z,null),p(s,Ja,l),p(s,Ln,l),m(Ln,se),p(s,Xa,l),p(s,ts,l),c(Rs,ts,null),m(ts,ne),p(s,Za,l),c(bn,s,l),p(s,B,l),c(Ts,B,null),m(B,ae),c(_n,B,null),p(s,sl,l),p(s,Yn,l),m(Yn,le),p(s,nl,l),p(s,os,l),c(Us,os,null),m(os,ee),p(s,al,l),c(wn,s,l),p(s,S,l),c(Vs,S,null),m(S,pe),c(En,S,null),p(s,ll,l),p(s,Nn,l),m(Nn,te),p(s,el,l),p(s,rs,l),c(Is,rs,null),m(rs,oe),p(s,pl,l),c(xn,s,l),p(s,L,l),c(Ks,L,null),m(L,re),c(vn,L,null),p(s,tl,l),p(s,Qn,l),m(Qn,ce),p(s,ol,l),p(s,cs,l),c(zs,cs,null),m(cs,Fe),p(s,rl,l),c(kn,s,l),cl=!0},p(s,[l]){const Da={};l&1&&(Da.$$scope={dirty:l,ctx:s}),O.$set(Da);const Gn={};l&1&&(Gn.$$scope={dirty:l,ctx:s}),Fs.$set(Gn);const Jn={};l&1&&(Jn.$$scope={dirty:l,ctx:s}),Ds.$set(Jn);const Xn={};l&1&&(Xn.$$scope={dirty:l,ctx:s}),ys.$set(Xn);const Wn={};l&1&&(Wn.$$scope={dirty:l,ctx:s}),is.$set(Wn);const H={};l&1&&(H.$$scope={dirty:l,ctx:s}),fs.$set(H);const Zn={};l&1&&(Zn.$$scope={dirty:l,ctx:s}),$s.$set(Zn);const Hn={};l&1&&(Hn.$$scope={dirty:l,ctx:s}),us.$set(Hn);const Bs={};l&1&&(Bs.$$scope={dirty:l,ctx:s}),Cs.$set(Bs);const sa={};l&1&&(sa.$$scope={dirty:l,ctx:s}),As.$set(sa);const On={};l&1&&(On.$$scope={dirty:l,ctx:s}),ms.$set(On);const na={};l&1&&(na.$$scope={dirty:l,ctx:s}),ds.$set(na);const aa={};l&1&&(aa.$$scope={dirty:l,ctx:s}),gs.$set(aa);const qn={};l&1&&(qn.$$scope={dirty:l,ctx:s}),bs.$set(qn);const Mn={};l&1&&(Mn.$$scope={dirty:l,ctx:s}),_s.$set(Mn);const la={};l&1&&(la.$$scope={dirty:l,ctx:s}),ws.$set(la);const Pn={};l&1&&(Pn.$$scope={dirty:l,ctx:s}),Es.$set(Pn);const ya={};l&1&&(ya.$$scope={dirty:l,ctx:s}),xs.$set(ya);const ea={};l&1&&(ea.$$scope={dirty:l,ctx:s}),vs.$set(ea);const jn={};l&1&&(jn.$$scope={dirty:l,ctx:s}),ks.$set(jn);const ia={};l&1&&(ia.$$scope={dirty:l,ctx:s}),Ws.$set(ia);const pa={};l&1&&(pa.$$scope={dirty:l,ctx:s}),Hs.$set(pa);const Rn={};l&1&&(Rn.$$scope={dirty:l,ctx:s}),Os.$set(Rn);const fa={};l&1&&(fa.$$scope={dirty:l,ctx:s}),qs.$set(fa);const ta={};l&1&&(ta.$$scope={dirty:l,ctx:s}),Ms.$set(ta);const Tn={};l&1&&(Tn.$$scope={dirty:l,ctx:s}),Ps.$set(Tn);const oa={};l&1&&(oa.$$scope={dirty:l,ctx:s}),js.$set(oa);const ra={};l&1&&(ra.$$scope={dirty:l,ctx:s}),Rs.$set(ra);const Un={};l&1&&(Un.$$scope={dirty:l,ctx:s}),Ts.$set(Un);const $a={};l&1&&($a.$$scope={dirty:l,ctx:s}),Us.$set($a);const ca={};l&1&&(ca.$$scope={dirty:l,ctx:s}),Vs.$set(ca);const Vn={};l&1&&(Vn.$$scope={dirty:l,ctx:s}),Is.$set(Vn);const ua={};l&1&&(ua.$$scope={dirty:l,ctx:s}),Ks.$set(ua);const Fa={};l&1&&(Fa.$$scope={dirty:l,ctx:s}),zs.$set(Fa)},i(s){cl||(F(O.$$.fragment,s),F(Fs.$$.fragment,s),F(Ds.$$.fragment,s),F(Ss.$$.fragment,s),F(ys.$$.fragment,s),F(is.$$.fragment,s),F(Ls.$$.fragment,s),F(Ys.$$.fragment,s),F(Ns.$$.fragment,s),F(Qs.$$.fragment,s),F(fs.$$.fragment,s),F($s.$$.fragment,s),F(Gs.$$.fragment,s),F(us.$$.fragment,s),F(Js.$$.fragment,s),F(Xs.$$.fragment,s),F(Zs.$$.fragment,s),F(Cs.$$.fragment,s),F(sn.$$.fragment,s),F(As.$$.fragment,s),F(nn.$$.fragment,s),F(ms.$$.fragment,s),F(ds.$$.fragment,s),F(ln.$$.fragment,s),F(gs.$$.fragment,s),F(en.$$.fragment,s),F(pn.$$.fragment,s),F(bs.$$.fragment,s),F(tn.$$.fragment,s),F(_s.$$.fragment,s),F(on.$$.fragment,s),F(ws.$$.fragment,s),F(rn.$$.fragment,s),F(Es.$$.fragment,s),F(cn.$$.fragment,s),F(xs.$$.fragment,s),F(Fn.$$.fragment,s),F(vs.$$.fragment,s),F(Dn.$$.fragment,s),F(ks.$$.fragment,s),F(yn.$$.fragment,s),F(Ws.$$.fragment,s),F(fn.$$.fragment,s),F(un.$$.fragment,s),F(Hs.$$.fragment,s),F(Cn.$$.fragment,s),F(Os.$$.fragment,s),F(An.$$.fragment,s),F(qs.$$.fragment,s),F(mn.$$.fragment,s),F(Ms.$$.fragment,s),F(dn.$$.fragment,s),F(Ps.$$.fragment,s),F(gn.$$.fragment,s),F(js.$$.fragment,s),F(hn.$$.fragment,s),F(Rs.$$.fragment,s),F(bn.$$.fragment,s),F(Ts.$$.fragment,s),F(_n.$$.fragment,s),F(Us.$$.fragment,s),F(wn.$$.fragment,s),F(Vs.$$.fragment,s),F(En.$$.fragment,s),F(Is.$$.fragment,s),F(xn.$$.fragment,s),F(Ks.$$.fragment,s),F(vn.$$.fragment,s),F(zs.$$.fragment,s),F(kn.$$.fragment,s),cl=!0)},o(s){D(O.$$.fragment,s),D(Fs.$$.fragment,s),D(Ds.$$.fragment,s),D(Ss.$$.fragment,s),D(ys.$$.fragment,s),D(is.$$.fragment,s),D(Ls.$$.fragment,s),D(Ys.$$.fragment,s),D(Ns.$$.fragment,s),D(Qs.$$.fragment,s),D(fs.$$.fragment,s),D($s.$$.fragment,s),D(Gs.$$.fragment,s),D(us.$$.fragment,s),D(Js.$$.fragment,s),D(Xs.$$.fragment,s),D(Zs.$$.fragment,s),D(Cs.$$.fragment,s),D(sn.$$.fragment,s),D(As.$$.fragment,s),D(nn.$$.fragment,s),D(ms.$$.fragment,s),D(ds.$$.fragment,s),D(ln.$$.fragment,s),D(gs.$$.fragment,s),D(en.$$.fragment,s),D(pn.$$.fragment,s),D(bs.$$.fragment,s),D(tn.$$.fragment,s),D(_s.$$.fragment,s),D(on.$$.fragment,s),D(ws.$$.fragment,s),D(rn.$$.fragment,s),D(Es.$$.fragment,s),D(cn.$$.fragment,s),D(xs.$$.fragment,s),D(Fn.$$.fragment,s),D(vs.$$.fragment,s),D(Dn.$$.fragment,s),D(ks.$$.fragment,s),D(yn.$$.fragment,s),D(Ws.$$.fragment,s),D(fn.$$.fragment,s),D(un.$$.fragment,s),D(Hs.$$.fragment,s),D(Cn.$$.fragment,s),D(Os.$$.fragment,s),D(An.$$.fragment,s),D(qs.$$.fragment,s),D(mn.$$.fragment,s),D(Ms.$$.fragment,s),D(dn.$$.fragment,s),D(Ps.$$.fragment,s),D(gn.$$.fragment,s),D(js.$$.fragment,s),D(hn.$$.fragment,s),D(Rs.$$.fragment,s),D(bn.$$.fragment,s),D(Ts.$$.fragment,s),D(_n.$$.fragment,s),D(Us.$$.fragment,s),D(wn.$$.fragment,s),D(Vs.$$.fragment,s),D(En.$$.fragment,s),D(Is.$$.fragment,s),D(xn.$$.fragment,s),D(Ks.$$.fragment,s),D(vn.$$.fragment,s),D(zs.$$.fragment,s),D(kn.$$.fragment,s),cl=!1},d(s){s&&e(a),s&&e(t),s&&e(b),s&&e(v),s&&e(W),y(O),s&&e(Ca),y(Fs,s),s&&e(Aa),s&&e(Y),y(Ds),s&&e(ma),y(Ss,s),s&&e(N),y(ys),s&&e(da),s&&e(q),y(is),y(Ls),s&&e(ga),s&&e(k),y(Ys),y(Ns),y(Qs),y(fs),s&&e(ha),s&&e(Q),y($s),s&&e(ba),y(Gs,s),s&&e(M),y(us),y(Js),s&&e(_a),s&&e(G),y(Xs),y(Zs),s&&e(wa),s&&e(J),y(Cs),s&&e(Ea),y(sn,s),s&&e(P),y(As),y(nn),s&&e(xa),s&&e(an),y(ms),s&&e(va),s&&e(X),y(ds),s&&e(ka),y(ln,s),s&&e(j),y(gs),y(en),s&&e(Wa),s&&e(hs),y(pn),s&&e(Ha),s&&e(Z),y(bs),s&&e(Oa),y(tn,s),s&&e(R),y(_s),y(on),s&&e(qa),s&&e(In),s&&e(Ma),s&&e(ss),y(ws),s&&e(Pa),y(rn,s),s&&e(T),y(Es),y(cn),s&&e(ja),s&&e(Kn),s&&e(Ra),s&&e(ns),y(xs),s&&e(Ta),y(Fn,s),s&&e(U),y(vs),y(Dn),s&&e(Ua),s&&e(zn),s&&e(Va),s&&e(as),y(ks),s&&e(Ia),y(yn,s),s&&e(V),y(Ws),y(fn),s&&e(Ka),s&&e($n),y(un),s&&e(za),s&&e(ls),y(Hs),s&&e(Ba),y(Cn,s),s&&e(I),y(Os),y(An),s&&e(Sa),s&&e(Bn),s&&e(La),s&&e(es),y(qs),s&&e(Ya),y(mn,s),s&&e(K),y(Ms),y(dn),s&&e(Na),s&&e(Sn),s&&e(Qa),s&&e(ps),y(Ps),s&&e(Ga),y(gn,s),s&&e(z),y(js),y(hn),s&&e(Ja),s&&e(Ln),s&&e(Xa),s&&e(ts),y(Rs),s&&e(Za),y(bn,s),s&&e(B),y(Ts),y(_n),s&&e(sl),s&&e(Yn),s&&e(nl),s&&e(os),y(Us),s&&e(al),y(wn,s),s&&e(S),y(Vs),y(En),s&&e(ll),s&&e(Nn),s&&e(el),s&&e(rs),y(Is),s&&e(pl),y(xn,s),s&&e(L),y(Ks),y(vn),s&&e(tl),s&&e(Qn),s&&e(ol),s&&e(cs),y(zs),s&&e(rl),y(kn,s)}}}class up extends de{constructor(a){super(),ge(this,a,null,tp,he,{})}}export{up as default};

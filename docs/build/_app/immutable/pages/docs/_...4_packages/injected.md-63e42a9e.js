import{S as He,i as qe,s as Ue,e as o,t as a,k as C,w as $,c as t,a as p,h as e,d as l,m as A,x as u,b as g,g as f,M as s,y as E,q as h,o as b,B as _,E as Se}from"../../../chunks/index-c32358ff.js";import"../../../chunks/scroll-5387a6f1.js";import{C as ss}from"../../../chunks/CodeFence-ac7b69e1.js";import{C as re}from"../../../chunks/CodeInline-8df56a89.js";import{L as Z}from"../../../chunks/Link-d3089e65.js";/* empty css                                                            */import{T as Ge,a as Re}from"../../../chunks/Tabs-f2c9522f.js";import"../../../chunks/singletons-37dfeae3.js";import"../../../chunks/contexts-2aef7541.js";function Ye(m){let r;return{c(){r=a("EIP-1193")},l(D){r=e(D,"EIP-1193")},m(D,F){f(D,r,F)},d(D){D&&l(r)}}}function Ke(m){let r;return{c(){r=a("recognizes many injected wallets natively")},l(D){r=e(D,"recognizes many injected wallets natively")},m(D,F){f(D,r,F)},d(D){D&&l(r)}}}function ze(m){let r;return{c(){r=a("#")},l(D){r=e(D,"#")},m(D,F){f(D,r,F)},d(D){D&&l(r)}}}function Qe(m){let r,D;return r=new ss({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/injected-wallets
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/injected-wallets</span></span>
<span class="line"></span></code></pre>`}}),{c(){$(r.$$.fragment)},l(F){u(r.$$.fragment,F)},m(F,w){E(r,F,w),D=!0},p:Se,i(F){D||(h(r.$$.fragment,F),D=!0)},o(F){b(r.$$.fragment,F),D=!1},d(F){_(r,F)}}}function Ve(m){let r,D;return r=new ss({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/injected-wallets
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/injected-wallets</span></span>
<span class="line"></span></code></pre>`}}),{c(){$(r.$$.fragment)},l(F){u(r.$$.fragment,F)},m(F,w){E(r,F,w),D=!0},p:Se,i(F){D||(h(r.$$.fragment,F),D=!0)},o(F){b(r.$$.fragment,F),D=!1},d(F){_(r,F)}}}function Je(m){let r,D,F,w;return r=new Re({props:{value:"yarn",$$slots:{default:[Qe]},$$scope:{ctx:m}}}),F=new Re({props:{value:"npm",$$slots:{default:[Ve]},$$scope:{ctx:m}}}),{c(){$(r.$$.fragment),D=C(),$(F.$$.fragment)},l(d){u(r.$$.fragment,d),D=A(d),u(F.$$.fragment,d)},m(d,v){E(r,d,v),f(d,D,v),E(F,d,v),w=!0},p(d,v){const ns={};v&1&&(ns.$$scope={dirty:v,ctx:d}),r.$set(ns);const M={};v&1&&(M.$$scope={dirty:v,ctx:d}),F.$set(M)},i(d){w||(h(r.$$.fragment,d),h(F.$$.fragment,d),w=!0)},o(d){b(r.$$.fragment,d),b(F.$$.fragment,d),w=!1},d(d){_(r,d),d&&l(D),_(F,d)}}}function Xe(m){let r;return{c(){r=a("#")},l(D){r=e(D,"#")},m(D,F){f(D,r,F)},d(D){D&&l(r)}}}function Ze(m){let r;return{c(){r=a("#")},l(D){r=e(D,"#")},m(D,F){f(D,r,F)},d(D){D&&l(r)}}}function so(m){let r;return{c(){r=a("#")},l(D){r=e(D,"#")},m(D,F){f(D,r,F)},d(D){D&&l(r)}}}function no(m){let r;return{c(){r=a("#")},l(D){r=e(D,"#")},m(D,F){f(D,r,F)},d(D){D&&l(r)}}}function lo(m){let r,D,F,w,d,v,ns,M,Bn,mn,ls,Pn,$n,I,W,xn,un,O,En,j,N,Wn,hn,as,On,bn,U,L,R,Nn,_n,k,Rn,G,Sn,Y,Hn,wn,K,es,qn,vn,z,os,Un,Mn,Q,T,S,Gn,kn,H,Yn,V,Kn,gn,J,B,q,zn,In,c,X,Qn,Os,Vn,Jn,Xn,ts,Zn,Ns,sl,nl,ps,ll,Rs,al,el,rs,ol,Ss,tl,pl,cs,rl,Hs,cl,Dl,Ds,il,qs,yl,Fl,is,Cl,Us,Al,fl,ys,dl,Gs,ml,$l,Fs,ul,Ys,El,hl,Cs,bl,Ks,_l,wl,As,vl,zs,Ml,kl,fs,gl,Qs,Il,jl,ds,Ll,Vs,Tl,Bl,ms,Pl,Js,xl,Wl,$s,Ol,Xs,Nl,Rl,us,Sl,Zs,Hl,ql,Es,Ul,sn,Gl,Yl,hs,Kl,nn,zl,Ql,bs,Vl,ln,Jl,Xl,_s,Zl,an,sa,na,ws,la,en,aa,ea,vs,oa,on,ta,pa,Ms,ra,tn,ca,Da,ks,ia,pn,ya,Fa,gs,Ca,rn,Aa,fa,Is,da,cn,ma,$a,js,ua,Dn,Ea,ha,Ls,ba,yn,_a,wa,Ts,va,Fn,Ma,ka,Bs,ga,Cn,Ia,jn;return v=new Z({props:{href:"https://eips.ethereum.org/EIPS/eip-1193",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Ye]},$$scope:{ctx:m}}}),M=new Z({props:{href:"https://onboard.blocknative.com/docs/packages/injected#injected-wallets-supported-natively",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Ke]},$$scope:{ctx:m}}}),W=new Z({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[ze]},$$scope:{ctx:m}}}),O=new Ge({props:{values:["yarn","npm"],$$slots:{default:[Je]},$$scope:{ctx:m}}}),N=new Z({props:{class:"header-anchor",href:"#quickstart","aria-hidden":"true",$$slots:{default:[Xe]},$$scope:{ctx:m}}}),U=new ss({props:{lang:"javascript",ext:"js",linesCount:28,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MAINNET_RPC_URL </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> MAINNET_RPC_URL</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">appMetadata</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">My App</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;SVG_ICON_STRING&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">description</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">My app using Onboard</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(connectedWallets)</span></span>
<span class="line"></span></code></pre>`}}),R=new Z({props:{class:"header-anchor",href:"#filtering-wallets","aria-hidden":"true",$$slots:{default:[Ze]},$$scope:{ctx:m}}}),G=new re({props:{code:"Platform"}}),Y=new re({props:{code:"false"}}),K=new ss({props:{lang:"javascript",ext:"js",linesCount:16,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ProviderLabel</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MAINNET_RPC_URL </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">filter</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">[</span><span style="color: #A6ACCD">ProviderLabel</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Detected</span><span style="color: #F07178">]</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">false</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">//... other options</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),z=new ss({props:{lang:"javascript",ext:"js",linesCount:17,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ProviderLabel</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MAINNET_RPC_URL </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">filter</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">// allow only on non android mobile</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">[</span><span style="color: #A6ACCD">ProviderLabel</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Detected</span><span style="color: #F07178">]</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Android</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">desktop</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">//... other options</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),Q=new ss({props:{lang:"typescript",ext:"ts",linesCount:19,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Platform</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Windows Phone</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Windows</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">macOS</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">iOS</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Android</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Linux</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Chrome OS</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Android Browser</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Chrome</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Chromium</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Firefox</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Microsoft Edge</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Opera</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Safari</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">desktop</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">mobile</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">tablet</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span></code></pre>`}}),S=new Z({props:{class:"header-anchor",href:"#adding-custom-injected-wallets","aria-hidden":"true",$$slots:{default:[so]},$$scope:{ctx:m}}}),V=new re({props:{code:"custom"}}),J=new ss({props:{lang:"typescript",ext:"ts",linesCount:33,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> equal </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// The label that will be displayed in the wallet selection modal</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Equal</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// The property on the window where the injected provider is defined</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// Example: window.ethereum</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">injectedNamespace</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ethereum</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// A function that returns a bool indicating whether or not the provider is</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// of a certain identity. In this case, a unique property on the provider</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// is used to identify the provider.</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// In most cases this is in the format: is&lt;provider-name&gt;.</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// You may also include custom logic here if checking for the property</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// isn&#39;t sufficient.</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #82AAFF">checkProviderIdentity</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">({</span><span style="color: #A6ACCD"> provider </span><span style="color: #89DDFF">})</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">!!</span><span style="color: #A6ACCD">provider </span><span style="color: #89DDFF">&amp;&amp;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">!!</span><span style="color: #A6ACCD">provider[ProviderIdentityFlag</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">MetaMask]</span><span style="color: #89DDFF">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// A method that returns a string of the wallet icon which will be displayed</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #82AAFF">getIcon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">async</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> (</span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">import</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;PATH_TO_ICON&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">))</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">default</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// Returns a valid EIP1193 provider. In some cases the provider will need to be patched to satisfy the EIP1193 Provider interface</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #82AAFF">getInterface</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> (</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">provider</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">ethereum</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// A list of platforms that this wallet supports</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">platforms</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">desktop</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">custom</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [equal]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">//... other options</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),q=new Z({props:{class:"header-anchor",href:"#injected-wallets-supported-natively","aria-hidden":"true",$$slots:{default:[no]},$$scope:{ctx:m}}}),{c(){r=o("h1"),D=a("@web3-onboard/injected-wallets"),F=C(),w=o("p"),d=a("This module lets web3-onboard automatically detect Browser Injected Wallets such as Metamask or Coinbase Wallet. We recommend you install this module to get the most out of your w3o implementation. This module supports "),$(v.$$.fragment),ns=a(" and "),$(M.$$.fragment),Bn=a("."),mn=C(),ls=o("p"),Pn=a("Note: Make sure to install the core module before installing other modules to w3o."),$n=C(),I=o("h2"),$(W.$$.fragment),xn=a(" Install"),un=C(),$(O.$$.fragment),En=C(),j=o("h2"),$(N.$$.fragment),Wn=a(" Quickstart"),hn=C(),as=o("p"),On=a("To allow all injected wallets that are supported, don't pass in any options:"),bn=C(),$(U.$$.fragment),L=o("h2"),$(R.$$.fragment),Nn=a(" Filtering Wallets"),_n=C(),k=o("p"),Rn=a("Injected wallets that you do not want to support can be filtered based on the "),$(G.$$.fragment),Sn=a(" the user is on. For example you may not want to support the 'Detected Wallet' that is detected automatically and filter it via all platforms by passing "),$(Y.$$.fragment),Hn=a(":"),wn=C(),$(K.$$.fragment),es=o("p"),qn=a("Or you may want to only filter the 'Detected Wallet' on a select few platforms:"),vn=C(),$(z.$$.fragment),os=o("p"),Un=a("The following platforms can be used to filter wallets:"),Mn=C(),$(Q.$$.fragment),T=o("h2"),$(S.$$.fragment),Gn=a(" Adding Custom Injected Wallets"),kn=C(),H=o("p"),Yn=a("If there is an injected wallet that you would like to support in your app, but is not yet included in this repo, you can add a custom wallet module in the "),$(V.$$.fragment),Kn=a(" field:"),gn=C(),$(J.$$.fragment),B=o("h3"),$(q.$$.fragment),zn=a(" Injected Wallets Supported Natively"),In=C(),c=o("ul"),X=o("li"),Qn=a("Metamask - "),Os=o("em"),Vn=a("Desktop & Mobile"),Jn=a(" (Mobile relies on Wallet Connect and is detected inside MetaMask app browser)"),Xn=C(),ts=o("li"),Zn=a("Binance - "),Ns=o("em"),sl=a("Desktop"),nl=C(),ps=o("li"),ll=a("Coinbase - "),Rs=o("em"),al=a("Desktop & Mobile"),el=C(),rs=o("li"),ol=a("Tally - "),Ss=o("em"),tl=a("Desktop"),pl=C(),cs=o("li"),rl=a("Exodus - "),Hs=o("em"),cl=a("Desktop & Mobile"),Dl=C(),Ds=o("li"),il=a("Trust - "),qs=o("em"),yl=a("Mobile"),Fl=C(),is=o("li"),Cl=a("Opera - "),Us=o("em"),Al=a("Desktop & Mobile"),fl=C(),ys=o("li"),dl=a("Status - "),Gs=o("em"),ml=a("Mobile"),$l=C(),Fs=o("li"),ul=a("Alphawallet - "),Ys=o("em"),El=a("Mobile"),hl=C(),Cs=o("li"),bl=a("Atoken - "),Ks=o("em"),_l=a("Mobile"),wl=C(),As=o("li"),vl=a("Bitpie - "),zs=o("em"),Ml=a("Mobile"),kl=C(),fs=o("li"),gl=a("Blockwallet - "),Qs=o("em"),Il=a("Desktop"),jl=C(),ds=o("li"),Ll=a("Brave - "),Vs=o("em"),Tl=a("Desktop & Mobile"),Bl=C(),ms=o("li"),Pl=a("D'Cent - "),Js=o("em"),xl=a("Mobile"),Wl=C(),$s=o("li"),Ol=a("Frame - "),Xs=o("em"),Nl=a("Desktop"),Rl=C(),us=o("li"),Sl=a("Huobiwallet - "),Zs=o("em"),Hl=a("Mobile"),ql=C(),Es=o("li"),Ul=a("Hyperpay - "),sn=o("em"),Gl=a("Mobile"),Yl=C(),hs=o("li"),Kl=a("IMtoken - "),nn=o("em"),zl=a("Mobile"),Ql=C(),bs=o("li"),Vl=a("Liquality - "),ln=o("em"),Jl=a("Desktop"),Xl=C(),_s=o("li"),Zl=a("Meetone - "),an=o("em"),sa=a("Mobile"),na=C(),ws=o("li"),la=a("Mykey - "),en=o("em"),aa=a("Mobile"),ea=C(),vs=o("li"),oa=a("Ownbit - "),on=o("em"),ta=a("Mobile"),pa=C(),Ms=o("li"),ra=a("Tokenpocket - "),tn=o("em"),ca=a("Desktop & Mobile"),Da=C(),ks=o("li"),ia=a("TP - "),pn=o("em"),ya=a("Mobile"),Fa=C(),gs=o("li"),Ca=a("xDefi - "),rn=o("em"),Aa=a("Desktop & Mobile"),fa=C(),Is=o("li"),da=a("1inch - "),cn=o("em"),ma=a("Mobile"),$a=C(),js=o("li"),ua=a("Tokenary - "),Dn=o("em"),Ea=a("Mobile"),ha=C(),Ls=o("li"),ba=a("GameStop - "),yn=o("em"),_a=a("Desktop"),wa=C(),Ts=o("li"),va=a("Rabby - "),Fn=o("em"),Ma=a("Desktop"),ka=C(),Bs=o("li"),ga=a("MathWallet - "),Cn=o("em"),Ia=a("Desktop & Mobile"),this.h()},l(n){r=t(n,"H1",{});var y=p(r);D=e(y,"@web3-onboard/injected-wallets"),y.forEach(l),F=A(n),w=t(n,"P",{});var P=p(w);d=e(P,"This module lets web3-onboard automatically detect Browser Injected Wallets such as Metamask or Coinbase Wallet. We recommend you install this module to get the most out of your w3o implementation. This module supports "),u(v.$$.fragment,P),ns=e(P," and "),u(M.$$.fragment,P),Bn=e(P,"."),P.forEach(l),mn=A(n),ls=t(n,"P",{});var An=p(ls);Pn=e(An,"Note: Make sure to install the core module before installing other modules to w3o."),An.forEach(l),$n=A(n),I=t(n,"H2",{id:!0,tabindex:!0});var Ps=p(I);u(W.$$.fragment,Ps),xn=e(Ps," Install"),Ps.forEach(l),un=A(n),u(O.$$.fragment,n),En=A(n),j=t(n,"H2",{id:!0,tabindex:!0});var xs=p(j);u(N.$$.fragment,xs),Wn=e(xs," Quickstart"),xs.forEach(l),hn=A(n),as=t(n,"P",{});var fn=p(as);On=e(fn,"To allow all injected wallets that are supported, don't pass in any options:"),fn.forEach(l),bn=A(n),u(U.$$.fragment,n),L=t(n,"H2",{id:!0,tabindex:!0});var Ws=p(L);u(R.$$.fragment,Ws),Nn=e(Ws," Filtering Wallets"),Ws.forEach(l),_n=A(n),k=t(n,"P",{});var x=p(k);Rn=e(x,"Injected wallets that you do not want to support can be filtered based on the "),u(G.$$.fragment,x),Sn=e(x," the user is on. For example you may not want to support the 'Detected Wallet' that is detected automatically and filter it via all platforms by passing "),u(Y.$$.fragment,x),Hn=e(x,":"),x.forEach(l),wn=A(n),u(K.$$.fragment,n),es=t(n,"P",{});var dn=p(es);qn=e(dn,"Or you may want to only filter the 'Detected Wallet' on a select few platforms:"),dn.forEach(l),vn=A(n),u(z.$$.fragment,n),os=t(n,"P",{});var ce=p(os);Un=e(ce,"The following platforms can be used to filter wallets:"),ce.forEach(l),Mn=A(n),u(Q.$$.fragment,n),T=t(n,"H2",{id:!0,tabindex:!0});var ja=p(T);u(S.$$.fragment,ja),Gn=e(ja," Adding Custom Injected Wallets"),ja.forEach(l),kn=A(n),H=t(n,"P",{});var Ln=p(H);Yn=e(Ln,"If there is an injected wallet that you would like to support in your app, but is not yet included in this repo, you can add a custom wallet module in the "),u(V.$$.fragment,Ln),Kn=e(Ln," field:"),Ln.forEach(l),gn=A(n),u(J.$$.fragment,n),B=t(n,"H3",{id:!0,tabindex:!0});var La=p(B);u(q.$$.fragment,La),zn=e(La," Injected Wallets Supported Natively"),La.forEach(l),In=A(n),c=t(n,"UL",{});var i=p(c);X=t(i,"LI",{});var Tn=p(X);Qn=e(Tn,"Metamask - "),Os=t(Tn,"EM",{});var De=p(Os);Vn=e(De,"Desktop & Mobile"),De.forEach(l),Jn=e(Tn," (Mobile relies on Wallet Connect and is detected inside MetaMask app browser)"),Tn.forEach(l),Xn=A(i),ts=t(i,"LI",{});var Ta=p(ts);Zn=e(Ta,"Binance - "),Ns=t(Ta,"EM",{});var ie=p(Ns);sl=e(ie,"Desktop"),ie.forEach(l),Ta.forEach(l),nl=A(i),ps=t(i,"LI",{});var Ba=p(ps);ll=e(Ba,"Coinbase - "),Rs=t(Ba,"EM",{});var ye=p(Rs);al=e(ye,"Desktop & Mobile"),ye.forEach(l),Ba.forEach(l),el=A(i),rs=t(i,"LI",{});var Pa=p(rs);ol=e(Pa,"Tally - "),Ss=t(Pa,"EM",{});var Fe=p(Ss);tl=e(Fe,"Desktop"),Fe.forEach(l),Pa.forEach(l),pl=A(i),cs=t(i,"LI",{});var xa=p(cs);rl=e(xa,"Exodus - "),Hs=t(xa,"EM",{});var Ce=p(Hs);cl=e(Ce,"Desktop & Mobile"),Ce.forEach(l),xa.forEach(l),Dl=A(i),Ds=t(i,"LI",{});var Wa=p(Ds);il=e(Wa,"Trust - "),qs=t(Wa,"EM",{});var Ae=p(qs);yl=e(Ae,"Mobile"),Ae.forEach(l),Wa.forEach(l),Fl=A(i),is=t(i,"LI",{});var Oa=p(is);Cl=e(Oa,"Opera - "),Us=t(Oa,"EM",{});var fe=p(Us);Al=e(fe,"Desktop & Mobile"),fe.forEach(l),Oa.forEach(l),fl=A(i),ys=t(i,"LI",{});var Na=p(ys);dl=e(Na,"Status - "),Gs=t(Na,"EM",{});var de=p(Gs);ml=e(de,"Mobile"),de.forEach(l),Na.forEach(l),$l=A(i),Fs=t(i,"LI",{});var Ra=p(Fs);ul=e(Ra,"Alphawallet - "),Ys=t(Ra,"EM",{});var me=p(Ys);El=e(me,"Mobile"),me.forEach(l),Ra.forEach(l),hl=A(i),Cs=t(i,"LI",{});var Sa=p(Cs);bl=e(Sa,"Atoken - "),Ks=t(Sa,"EM",{});var $e=p(Ks);_l=e($e,"Mobile"),$e.forEach(l),Sa.forEach(l),wl=A(i),As=t(i,"LI",{});var Ha=p(As);vl=e(Ha,"Bitpie - "),zs=t(Ha,"EM",{});var ue=p(zs);Ml=e(ue,"Mobile"),ue.forEach(l),Ha.forEach(l),kl=A(i),fs=t(i,"LI",{});var qa=p(fs);gl=e(qa,"Blockwallet - "),Qs=t(qa,"EM",{});var Ee=p(Qs);Il=e(Ee,"Desktop"),Ee.forEach(l),qa.forEach(l),jl=A(i),ds=t(i,"LI",{});var Ua=p(ds);Ll=e(Ua,"Brave - "),Vs=t(Ua,"EM",{});var he=p(Vs);Tl=e(he,"Desktop & Mobile"),he.forEach(l),Ua.forEach(l),Bl=A(i),ms=t(i,"LI",{});var Ga=p(ms);Pl=e(Ga,"D'Cent - "),Js=t(Ga,"EM",{});var be=p(Js);xl=e(be,"Mobile"),be.forEach(l),Ga.forEach(l),Wl=A(i),$s=t(i,"LI",{});var Ya=p($s);Ol=e(Ya,"Frame - "),Xs=t(Ya,"EM",{});var _e=p(Xs);Nl=e(_e,"Desktop"),_e.forEach(l),Ya.forEach(l),Rl=A(i),us=t(i,"LI",{});var Ka=p(us);Sl=e(Ka,"Huobiwallet - "),Zs=t(Ka,"EM",{});var we=p(Zs);Hl=e(we,"Mobile"),we.forEach(l),Ka.forEach(l),ql=A(i),Es=t(i,"LI",{});var za=p(Es);Ul=e(za,"Hyperpay - "),sn=t(za,"EM",{});var ve=p(sn);Gl=e(ve,"Mobile"),ve.forEach(l),za.forEach(l),Yl=A(i),hs=t(i,"LI",{});var Qa=p(hs);Kl=e(Qa,"IMtoken - "),nn=t(Qa,"EM",{});var Me=p(nn);zl=e(Me,"Mobile"),Me.forEach(l),Qa.forEach(l),Ql=A(i),bs=t(i,"LI",{});var Va=p(bs);Vl=e(Va,"Liquality - "),ln=t(Va,"EM",{});var ke=p(ln);Jl=e(ke,"Desktop"),ke.forEach(l),Va.forEach(l),Xl=A(i),_s=t(i,"LI",{});var Ja=p(_s);Zl=e(Ja,"Meetone - "),an=t(Ja,"EM",{});var ge=p(an);sa=e(ge,"Mobile"),ge.forEach(l),Ja.forEach(l),na=A(i),ws=t(i,"LI",{});var Xa=p(ws);la=e(Xa,"Mykey - "),en=t(Xa,"EM",{});var Ie=p(en);aa=e(Ie,"Mobile"),Ie.forEach(l),Xa.forEach(l),ea=A(i),vs=t(i,"LI",{});var Za=p(vs);oa=e(Za,"Ownbit - "),on=t(Za,"EM",{});var je=p(on);ta=e(je,"Mobile"),je.forEach(l),Za.forEach(l),pa=A(i),Ms=t(i,"LI",{});var se=p(Ms);ra=e(se,"Tokenpocket - "),tn=t(se,"EM",{});var Le=p(tn);ca=e(Le,"Desktop & Mobile"),Le.forEach(l),se.forEach(l),Da=A(i),ks=t(i,"LI",{});var ne=p(ks);ia=e(ne,"TP - "),pn=t(ne,"EM",{});var Te=p(pn);ya=e(Te,"Mobile"),Te.forEach(l),ne.forEach(l),Fa=A(i),gs=t(i,"LI",{});var le=p(gs);Ca=e(le,"xDefi - "),rn=t(le,"EM",{});var Be=p(rn);Aa=e(Be,"Desktop & Mobile"),Be.forEach(l),le.forEach(l),fa=A(i),Is=t(i,"LI",{});var ae=p(Is);da=e(ae,"1inch - "),cn=t(ae,"EM",{});var Pe=p(cn);ma=e(Pe,"Mobile"),Pe.forEach(l),ae.forEach(l),$a=A(i),js=t(i,"LI",{});var ee=p(js);ua=e(ee,"Tokenary - "),Dn=t(ee,"EM",{});var xe=p(Dn);Ea=e(xe,"Mobile"),xe.forEach(l),ee.forEach(l),ha=A(i),Ls=t(i,"LI",{});var oe=p(Ls);ba=e(oe,"GameStop - "),yn=t(oe,"EM",{});var We=p(yn);_a=e(We,"Desktop"),We.forEach(l),oe.forEach(l),wa=A(i),Ts=t(i,"LI",{});var te=p(Ts);va=e(te,"Rabby - "),Fn=t(te,"EM",{});var Oe=p(Fn);Ma=e(Oe,"Desktop"),Oe.forEach(l),te.forEach(l),ka=A(i),Bs=t(i,"LI",{});var pe=p(Bs);ga=e(pe,"MathWallet - "),Cn=t(pe,"EM",{});var Ne=p(Cn);Ia=e(Ne,"Desktop & Mobile"),Ne.forEach(l),pe.forEach(l),i.forEach(l),this.h()},h(){g(I,"id","install"),g(I,"tabindex","-1"),g(j,"id","quickstart"),g(j,"tabindex","-1"),g(L,"id","filtering-wallets"),g(L,"tabindex","-1"),g(T,"id","adding-custom-injected-wallets"),g(T,"tabindex","-1"),g(B,"id","injected-wallets-supported-natively"),g(B,"tabindex","-1")},m(n,y){f(n,r,y),s(r,D),f(n,F,y),f(n,w,y),s(w,d),E(v,w,null),s(w,ns),E(M,w,null),s(w,Bn),f(n,mn,y),f(n,ls,y),s(ls,Pn),f(n,$n,y),f(n,I,y),E(W,I,null),s(I,xn),f(n,un,y),E(O,n,y),f(n,En,y),f(n,j,y),E(N,j,null),s(j,Wn),f(n,hn,y),f(n,as,y),s(as,On),f(n,bn,y),E(U,n,y),f(n,L,y),E(R,L,null),s(L,Nn),f(n,_n,y),f(n,k,y),s(k,Rn),E(G,k,null),s(k,Sn),E(Y,k,null),s(k,Hn),f(n,wn,y),E(K,n,y),f(n,es,y),s(es,qn),f(n,vn,y),E(z,n,y),f(n,os,y),s(os,Un),f(n,Mn,y),E(Q,n,y),f(n,T,y),E(S,T,null),s(T,Gn),f(n,kn,y),f(n,H,y),s(H,Yn),E(V,H,null),s(H,Kn),f(n,gn,y),E(J,n,y),f(n,B,y),E(q,B,null),s(B,zn),f(n,In,y),f(n,c,y),s(c,X),s(X,Qn),s(X,Os),s(Os,Vn),s(X,Jn),s(c,Xn),s(c,ts),s(ts,Zn),s(ts,Ns),s(Ns,sl),s(c,nl),s(c,ps),s(ps,ll),s(ps,Rs),s(Rs,al),s(c,el),s(c,rs),s(rs,ol),s(rs,Ss),s(Ss,tl),s(c,pl),s(c,cs),s(cs,rl),s(cs,Hs),s(Hs,cl),s(c,Dl),s(c,Ds),s(Ds,il),s(Ds,qs),s(qs,yl),s(c,Fl),s(c,is),s(is,Cl),s(is,Us),s(Us,Al),s(c,fl),s(c,ys),s(ys,dl),s(ys,Gs),s(Gs,ml),s(c,$l),s(c,Fs),s(Fs,ul),s(Fs,Ys),s(Ys,El),s(c,hl),s(c,Cs),s(Cs,bl),s(Cs,Ks),s(Ks,_l),s(c,wl),s(c,As),s(As,vl),s(As,zs),s(zs,Ml),s(c,kl),s(c,fs),s(fs,gl),s(fs,Qs),s(Qs,Il),s(c,jl),s(c,ds),s(ds,Ll),s(ds,Vs),s(Vs,Tl),s(c,Bl),s(c,ms),s(ms,Pl),s(ms,Js),s(Js,xl),s(c,Wl),s(c,$s),s($s,Ol),s($s,Xs),s(Xs,Nl),s(c,Rl),s(c,us),s(us,Sl),s(us,Zs),s(Zs,Hl),s(c,ql),s(c,Es),s(Es,Ul),s(Es,sn),s(sn,Gl),s(c,Yl),s(c,hs),s(hs,Kl),s(hs,nn),s(nn,zl),s(c,Ql),s(c,bs),s(bs,Vl),s(bs,ln),s(ln,Jl),s(c,Xl),s(c,_s),s(_s,Zl),s(_s,an),s(an,sa),s(c,na),s(c,ws),s(ws,la),s(ws,en),s(en,aa),s(c,ea),s(c,vs),s(vs,oa),s(vs,on),s(on,ta),s(c,pa),s(c,Ms),s(Ms,ra),s(Ms,tn),s(tn,ca),s(c,Da),s(c,ks),s(ks,ia),s(ks,pn),s(pn,ya),s(c,Fa),s(c,gs),s(gs,Ca),s(gs,rn),s(rn,Aa),s(c,fa),s(c,Is),s(Is,da),s(Is,cn),s(cn,ma),s(c,$a),s(c,js),s(js,ua),s(js,Dn),s(Dn,Ea),s(c,ha),s(c,Ls),s(Ls,ba),s(Ls,yn),s(yn,_a),s(c,wa),s(c,Ts),s(Ts,va),s(Ts,Fn),s(Fn,Ma),s(c,ka),s(c,Bs),s(Bs,ga),s(Bs,Cn),s(Cn,Ia),jn=!0},p(n,[y]){const P={};y&1&&(P.$$scope={dirty:y,ctx:n}),v.$set(P);const An={};y&1&&(An.$$scope={dirty:y,ctx:n}),M.$set(An);const Ps={};y&1&&(Ps.$$scope={dirty:y,ctx:n}),W.$set(Ps);const xs={};y&1&&(xs.$$scope={dirty:y,ctx:n}),O.$set(xs);const fn={};y&1&&(fn.$$scope={dirty:y,ctx:n}),N.$set(fn);const Ws={};y&1&&(Ws.$$scope={dirty:y,ctx:n}),R.$set(Ws);const x={};y&1&&(x.$$scope={dirty:y,ctx:n}),S.$set(x);const dn={};y&1&&(dn.$$scope={dirty:y,ctx:n}),q.$set(dn)},i(n){jn||(h(v.$$.fragment,n),h(M.$$.fragment,n),h(W.$$.fragment,n),h(O.$$.fragment,n),h(N.$$.fragment,n),h(U.$$.fragment,n),h(R.$$.fragment,n),h(G.$$.fragment,n),h(Y.$$.fragment,n),h(K.$$.fragment,n),h(z.$$.fragment,n),h(Q.$$.fragment,n),h(S.$$.fragment,n),h(V.$$.fragment,n),h(J.$$.fragment,n),h(q.$$.fragment,n),jn=!0)},o(n){b(v.$$.fragment,n),b(M.$$.fragment,n),b(W.$$.fragment,n),b(O.$$.fragment,n),b(N.$$.fragment,n),b(U.$$.fragment,n),b(R.$$.fragment,n),b(G.$$.fragment,n),b(Y.$$.fragment,n),b(K.$$.fragment,n),b(z.$$.fragment,n),b(Q.$$.fragment,n),b(S.$$.fragment,n),b(V.$$.fragment,n),b(J.$$.fragment,n),b(q.$$.fragment,n),jn=!1},d(n){n&&l(r),n&&l(F),n&&l(w),_(v),_(M),n&&l(mn),n&&l(ls),n&&l($n),n&&l(I),_(W),n&&l(un),_(O,n),n&&l(En),n&&l(j),_(N),n&&l(hn),n&&l(as),n&&l(bn),_(U,n),n&&l(L),_(R),n&&l(_n),n&&l(k),_(G),_(Y),n&&l(wn),_(K,n),n&&l(es),n&&l(vn),_(z,n),n&&l(os),n&&l(Mn),_(Q,n),n&&l(T),_(S),n&&l(kn),n&&l(H),_(V),n&&l(gn),_(J,n),n&&l(B),_(q),n&&l(In),n&&l(c)}}}class yo extends He{constructor(r){super(),qe(this,r,null,lo,Ue,{})}}export{yo as default};

import{S as Vs,i as Ys,s as Zs,e as u,t as p,k as d,w as D,c as g,a as h,h as r,d as o,m as b,x as y,b as E,g as t,M as A,y as f,q as $,o as C,B as m,E as qs}from"../../../chunks/index-c32358ff.js";import"../../../chunks/scroll-5387a6f1.js";import{C as cs}from"../../../chunks/CodeFence-ac7b69e1.js";import{C as Gs}from"../../../chunks/CodeInline-8df56a89.js";import{L as q}from"../../../chunks/Link-d3089e65.js";import{A as js}from"../../../chunks/Admonition-5e8d71e1.js";/* empty css                                                            */import{T as Js,a as Rs}from"../../../chunks/Tabs-f2c9522f.js";import"../../../chunks/singletons-37dfeae3.js";import"../../../chunks/contexts-2aef7541.js";function Qs(c){let n;return{c(){n=p("#")},l(a){n=r(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function Xs(c){let n,a;return{c(){n=u("p"),a=p("The Magic Module currently only supports email login but we are open to expand to sms or socials*")},l(l){n=g(l,"P",{});var F=h(n);a=r(F,"The Magic Module currently only supports email login but we are open to expand to sms or socials*"),F.forEach(o)},m(l,F){t(l,n,F),A(n,a)},p:qs,d(l){l&&o(n)}}}function sn(c){let n;return{c(){n=p("#")},l(a){n=r(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function nn(c){let n,a;return n=new cs({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/magic
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/magic</span></span>
<span class="line"></span></code></pre>`}}),{c(){D(n.$$.fragment)},l(l){y(n.$$.fragment,l)},m(l,F){f(n,l,F),a=!0},p:qs,i(l){a||($(n.$$.fragment,l),a=!0)},o(l){C(n.$$.fragment,l),a=!1},d(l){m(n,l)}}}function an(c){let n,a;return n=new cs({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/magic
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/magic</span></span>
<span class="line"></span></code></pre>`}}),{c(){D(n.$$.fragment)},l(l){y(n.$$.fragment,l)},m(l,F){f(n,l,F),a=!0},p:qs,i(l){a||($(n.$$.fragment,l),a=!0)},o(l){C(n.$$.fragment,l),a=!1},d(l){m(n,l)}}}function en(c){let n,a,l,F;return n=new Rs({props:{value:"yarn",$$slots:{default:[nn]},$$scope:{ctx:c}}}),l=new Rs({props:{value:"npm",$$slots:{default:[an]},$$scope:{ctx:c}}}),{c(){D(n.$$.fragment),a=d(),D(l.$$.fragment)},l(i){y(n.$$.fragment,i),a=b(i),y(l.$$.fragment,i)},m(i,_){f(n,i,_),t(i,a,_),f(l,i,_),F=!0},p(i,_){const w={};_&1&&(w.$$scope={dirty:_,ctx:i}),n.$set(w);const M={};_&1&&(M.$$scope={dirty:_,ctx:i}),l.$set(M)},i(i){F||($(n.$$.fragment,i),$(l.$$.fragment,i),F=!0)},o(i){C(n.$$.fragment,i),C(l.$$.fragment,i),F=!1},d(i){m(n,i),i&&o(a),m(l,i)}}}function ln(c){let n;return{c(){n=p("#")},l(a){n=r(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function on(c){let n;return{c(){n=p("#")},l(a){n=r(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function tn(c){let n;return{c(){n=p("#")},l(a){n=r(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function pn(c){let n;return{c(){n=p("Magic's official docs")},l(a){n=r(a,"Magic's official docs")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function rn(c){let n;return{c(){n=p("#")},l(a){n=r(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function cn(c){let n;return{c(){n=p("CSS variables")},l(a){n=r(a,"CSS variables")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function Dn(c){let n,a,l,F,i,_,w,M,Es,$s,ns,as,is,Ms,ks,Cs,B,ms,k,O,Ss,Fs,W,As,S,L,xs,us,R,x,P,Ts,ds,V,T,U,Is,gs,z,Bs,Y,Os,hs,Z,j,Ws,H,bs,I,K,Ls,_s,v,Ps,N,Us,J,zs,Q,Hs,ws,X,vs;return M=new q({props:{class:"header-anchor",href:"#login-options","aria-hidden":"true",$$slots:{default:[Qs]},$$scope:{ctx:c}}}),B=new js({props:{type:"note",$$slots:{default:[Xs]},$$scope:{ctx:c}}}),O=new q({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[sn]},$$scope:{ctx:c}}}),W=new Js({props:{values:["yarn","npm"],$$slots:{default:[en]},$$scope:{ctx:c}}}),L=new q({props:{class:"header-anchor",href:"#options","aria-hidden":"true",$$slots:{default:[ln]},$$scope:{ctx:c}}}),R=new cs({props:{lang:"typescript",ext:"ts",linesCount:5,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">MagicInitOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">apiKey</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">userEmail</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// optional - if user has already logged in and/or session is still active a login modal will not appear</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),P=new q({props:{class:"header-anchor",href:"#usage","aria-hidden":"true",$$slots:{default:[on]},$$scope:{ctx:c}}}),V=new cs({props:{lang:"typescript",ext:"ts",linesCount:19,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> magicModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/magic</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> magic </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">magicModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">apiKey</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">API_KEY</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">userEmail</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> localStorage</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getItem</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">magicUserEmail</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// ... other Onboard options</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    magic</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">//... other wallets</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(connectedWallets)</span></span>
<span class="line"></span></code></pre>`}}),U=new q({props:{class:"header-anchor",href:"#accessing-the-magic-wallet-configuration","aria-hidden":"true",$$slots:{default:[tn]},$$scope:{ctx:c}}}),Y=new Gs({props:{code:"MagicInitOptions"}}),Z=new cs({props:{lang:"typescript",ext:"ts",linesCount:10,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">magicWallet</span><span style="color: #89DDFF">]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">try</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">email</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">publicAddress</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">magicWallet</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">instance</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">user</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getMetadata</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">localStorage</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setItem</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">magicUserEmail</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">email</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// This email can then be passed through the MagicInitOptions to continue the users session and avoid having to login again</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">catch</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// Handle errors if required!</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),H=new q({props:{href:"https://magic.link/docs/api-reference/client-side-sdks/web#user-module",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[pn]},$$scope:{ctx:c}}}),K=new q({props:{class:"header-anchor",href:"#custom-styling","aria-hidden":"true",$$slots:{default:[rn]},$$scope:{ctx:c}}}),N=new q({props:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[cn]},$$scope:{ctx:c}}}),J=new Gs({props:{code:":root"}}),Q=new Gs({props:{code:"--onboard"}}),X=new cs({props:{lang:"css",ext:"css",linesCount:30,code:`<pre><code><span class="line"><span style="color: #89DDFF">:</span><span style="color: #C792EA">root</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* *if not set will fallback to variables with \`--onboard\` prefix shown above */</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* CUSTOMIZE THE COLOR  PALLETTE */</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-white</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> white</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-black</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> black</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-primary-300</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">b1b8f2</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-primary-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">6370e5</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-gray-200</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">c2c4c9</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-gray-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">33394b</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-danger-500</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">#</span><span style="color: #A6ACCD">ff4f4f</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* FONTS */</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-font-family-normal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Sofia Pro</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-font-family-light</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Sofia Pro Light</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-font-size-5</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-font-line-height-1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">24px</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* SPACING */</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-margin-4</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">  --login-modal-margin-5</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.5rem</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/* MAGIC WALLET MODAL POSITIONING */</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-z-index</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-top</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-bottom</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-right</span></span>
<span class="line"><span style="color: #A6ACCD">  --onboard-login-modal-left</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),{c(){n=u("h1"),a=p("@web3-onboard/magic"),l=d(),F=u("p"),i=p("Wallet module for connecting Magic wallets to Onboard V2"),_=d(),w=u("h3"),D(M.$$.fragment),Es=p(" Login options"),$s=d(),ns=u("ul"),as=u("li"),is=u("strong"),Ms=p("Email"),ks=p(` - The Magic module comes with a built in email login modal that is customizable
in the same fashion that all other web3-onboard UI components are`),Cs=d(),D(B.$$.fragment),ms=d(),k=u("h2"),D(O.$$.fragment),Ss=p(" Install"),Fs=d(),D(W.$$.fragment),As=d(),S=u("h2"),D(L.$$.fragment),xs=p(" Options"),us=d(),D(R.$$.fragment),x=u("h2"),D(P.$$.fragment),Ts=p(" Usage"),ds=d(),D(V.$$.fragment),T=u("h3"),D(U.$$.fragment),Is=p(" Accessing the Magic Wallet configuration"),gs=d(),z=u("p"),Bs=p(`When a Magic wallet is connected the Magic instance is exposed.
This can be used to get information such as user MetaData, update a user's email address or handle the user's token.
The user's email can be set in local storage and passed through the `),D(Y.$$.fragment),Os=p(` to avoid a user having to login again if they are returning to the DApp within the set user session time.
Magic has a default time of 7 days and this can be configured through your Magic API Key settings.`),hs=d(),D(Z.$$.fragment),j=u("p"),Ws=p("For full documentation and examples please visit "),D(H.$$.fragment),bs=d(),I=u("h2"),D(K.$$.fragment),Ls=p(" Custom Styling"),_s=d(),v=u("p"),Ps=p("The Magic Wallet Login styles can customized via "),D(N.$$.fragment),Us=p(". The following properties and their default properties can be customized by adding these variables to the "),D(J.$$.fragment),zs=p(" in your CSS file. If they are not specified they will fall back on the style variables prefixed with "),D(Q.$$.fragment),Hs=p(" and beyond that to the styles developed by Blocknative:"),ws=d(),D(X.$$.fragment),this.h()},l(s){n=g(s,"H1",{});var e=h(n);a=r(e,"@web3-onboard/magic"),e.forEach(o),l=b(s),F=g(s,"P",{});var Ds=h(F);i=r(Ds,"Wallet module for connecting Magic wallets to Onboard V2"),Ds.forEach(o),_=b(s),w=g(s,"H3",{id:!0,tabindex:!0});var es=h(w);y(M.$$.fragment,es),Es=r(es," Login options"),es.forEach(o),$s=b(s),ns=g(s,"UL",{});var ys=h(ns);as=g(ys,"LI",{});var ls=h(as);is=g(ls,"STRONG",{});var fs=h(is);Ms=r(fs,"Email"),fs.forEach(o),ks=r(ls,` - The Magic module comes with a built in email login modal that is customizable
in the same fashion that all other web3-onboard UI components are`),ls.forEach(o),ys.forEach(o),Cs=b(s),y(B.$$.fragment,s),ms=b(s),k=g(s,"H2",{id:!0,tabindex:!0});var os=h(k);y(O.$$.fragment,os),Ss=r(os," Install"),os.forEach(o),Fs=b(s),y(W.$$.fragment,s),As=b(s),S=g(s,"H2",{id:!0,tabindex:!0});var ts=h(S);y(L.$$.fragment,ts),xs=r(ts," Options"),ts.forEach(o),us=b(s),y(R.$$.fragment,s),x=g(s,"H2",{id:!0,tabindex:!0});var ps=h(x);y(P.$$.fragment,ps),Ts=r(ps," Usage"),ps.forEach(o),ds=b(s),y(V.$$.fragment,s),T=g(s,"H3",{id:!0,tabindex:!0});var rs=h(T);y(U.$$.fragment,rs),Is=r(rs," Accessing the Magic Wallet configuration"),rs.forEach(o),gs=b(s),z=g(s,"P",{});var ss=h(z);Bs=r(ss,`When a Magic wallet is connected the Magic instance is exposed.
This can be used to get information such as user MetaData, update a user's email address or handle the user's token.
The user's email can be set in local storage and passed through the `),y(Y.$$.fragment,ss),Os=r(ss,` to avoid a user having to login again if they are returning to the DApp within the set user session time.
Magic has a default time of 7 days and this can be configured through your Magic API Key settings.`),ss.forEach(o),hs=b(s),y(Z.$$.fragment,s),j=g(s,"P",{});var Ks=h(j);Ws=r(Ks,"For full documentation and examples please visit "),y(H.$$.fragment,Ks),Ks.forEach(o),bs=b(s),I=g(s,"H2",{id:!0,tabindex:!0});var Ns=h(I);y(K.$$.fragment,Ns),Ls=r(Ns," Custom Styling"),Ns.forEach(o),_s=b(s),v=g(s,"P",{});var G=h(v);Ps=r(G,"The Magic Wallet Login styles can customized via "),y(N.$$.fragment,G),Us=r(G,". The following properties and their default properties can be customized by adding these variables to the "),y(J.$$.fragment,G),zs=r(G," in your CSS file. If they are not specified they will fall back on the style variables prefixed with "),y(Q.$$.fragment,G),Hs=r(G," and beyond that to the styles developed by Blocknative:"),G.forEach(o),ws=b(s),y(X.$$.fragment,s),this.h()},h(){E(w,"id","login-options"),E(w,"tabindex","-1"),E(k,"id","install"),E(k,"tabindex","-1"),E(S,"id","options"),E(S,"tabindex","-1"),E(x,"id","usage"),E(x,"tabindex","-1"),E(T,"id","accessing-the-magic-wallet-configuration"),E(T,"tabindex","-1"),E(I,"id","custom-styling"),E(I,"tabindex","-1")},m(s,e){t(s,n,e),A(n,a),t(s,l,e),t(s,F,e),A(F,i),t(s,_,e),t(s,w,e),f(M,w,null),A(w,Es),t(s,$s,e),t(s,ns,e),A(ns,as),A(as,is),A(is,Ms),A(as,ks),t(s,Cs,e),f(B,s,e),t(s,ms,e),t(s,k,e),f(O,k,null),A(k,Ss),t(s,Fs,e),f(W,s,e),t(s,As,e),t(s,S,e),f(L,S,null),A(S,xs),t(s,us,e),f(R,s,e),t(s,x,e),f(P,x,null),A(x,Ts),t(s,ds,e),f(V,s,e),t(s,T,e),f(U,T,null),A(T,Is),t(s,gs,e),t(s,z,e),A(z,Bs),f(Y,z,null),A(z,Os),t(s,hs,e),f(Z,s,e),t(s,j,e),A(j,Ws),f(H,j,null),t(s,bs,e),t(s,I,e),f(K,I,null),A(I,Ls),t(s,_s,e),t(s,v,e),A(v,Ps),f(N,v,null),A(v,Us),f(J,v,null),A(v,zs),f(Q,v,null),A(v,Hs),t(s,ws,e),f(X,s,e),vs=!0},p(s,[e]){const Ds={};e&1&&(Ds.$$scope={dirty:e,ctx:s}),M.$set(Ds);const es={};e&1&&(es.$$scope={dirty:e,ctx:s}),B.$set(es);const ys={};e&1&&(ys.$$scope={dirty:e,ctx:s}),O.$set(ys);const ls={};e&1&&(ls.$$scope={dirty:e,ctx:s}),W.$set(ls);const fs={};e&1&&(fs.$$scope={dirty:e,ctx:s}),L.$set(fs);const os={};e&1&&(os.$$scope={dirty:e,ctx:s}),P.$set(os);const ts={};e&1&&(ts.$$scope={dirty:e,ctx:s}),U.$set(ts);const ps={};e&1&&(ps.$$scope={dirty:e,ctx:s}),H.$set(ps);const rs={};e&1&&(rs.$$scope={dirty:e,ctx:s}),K.$set(rs);const ss={};e&1&&(ss.$$scope={dirty:e,ctx:s}),N.$set(ss)},i(s){vs||($(M.$$.fragment,s),$(B.$$.fragment,s),$(O.$$.fragment,s),$(W.$$.fragment,s),$(L.$$.fragment,s),$(R.$$.fragment,s),$(P.$$.fragment,s),$(V.$$.fragment,s),$(U.$$.fragment,s),$(Y.$$.fragment,s),$(Z.$$.fragment,s),$(H.$$.fragment,s),$(K.$$.fragment,s),$(N.$$.fragment,s),$(J.$$.fragment,s),$(Q.$$.fragment,s),$(X.$$.fragment,s),vs=!0)},o(s){C(M.$$.fragment,s),C(B.$$.fragment,s),C(O.$$.fragment,s),C(W.$$.fragment,s),C(L.$$.fragment,s),C(R.$$.fragment,s),C(P.$$.fragment,s),C(V.$$.fragment,s),C(U.$$.fragment,s),C(Y.$$.fragment,s),C(Z.$$.fragment,s),C(H.$$.fragment,s),C(K.$$.fragment,s),C(N.$$.fragment,s),C(J.$$.fragment,s),C(Q.$$.fragment,s),C(X.$$.fragment,s),vs=!1},d(s){s&&o(n),s&&o(l),s&&o(F),s&&o(_),s&&o(w),m(M),s&&o($s),s&&o(ns),s&&o(Cs),m(B,s),s&&o(ms),s&&o(k),m(O),s&&o(Fs),m(W,s),s&&o(As),s&&o(S),m(L),s&&o(us),m(R,s),s&&o(x),m(P),s&&o(ds),m(V,s),s&&o(T),m(U),s&&o(gs),s&&o(z),m(Y),s&&o(hs),m(Z,s),s&&o(j),m(H),s&&o(bs),s&&o(I),m(K),s&&o(_s),s&&o(v),m(N),m(J),m(Q),s&&o(ws),m(X,s)}}}class hn extends Vs{constructor(n){super(),Ys(this,n,null,Dn,Zs,{})}}export{hn as default};

import{S as X,i as Y,s as Z,e as I,t as _,k as E,w as F,c as K,a as L,h as w,d as o,m as x,x as A,b as O,g as r,M,y as i,q as f,o as $,B as m,E as V}from"../../../chunks/index-c32358ff.js";import"../../../chunks/scroll-5387a6f1.js";import{C as U}from"../../../chunks/CodeFence-ac7b69e1.js";import{L as J}from"../../../chunks/Link-d3089e65.js";/* empty css                                                            */import{T as ss,a as Q}from"../../../chunks/Tabs-f2c9522f.js";import"../../../chunks/singletons-37dfeae3.js";import"../../../chunks/contexts-2aef7541.js";function ns(c){let n;return{c(){n=_("#")},l(l){n=w(l,"#")},m(l,a){r(l,n,a)},d(l){l&&o(n)}}}function as(c){let n,l;return n=new U({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/keystone
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/keystone</span></span>
<span class="line"></span></code></pre>`}}),{c(){F(n.$$.fragment)},l(a){A(n.$$.fragment,a)},m(a,t){i(n,a,t),l=!0},p:V,i(a){l||(f(n.$$.fragment,a),l=!0)},o(a){$(n.$$.fragment,a),l=!1},d(a){m(n,a)}}}function ls(c){let n,l;return n=new U({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/keystone
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/keystone</span></span>
<span class="line"></span></code></pre>`}}),{c(){F(n.$$.fragment)},l(a){A(n.$$.fragment,a)},m(a,t){i(n,a,t),l=!0},p:V,i(a){l||(f(n.$$.fragment,a),l=!0)},o(a){$(n.$$.fragment,a),l=!1},d(a){m(n,a)}}}function ps(c){let n,l,a,t;return n=new Q({props:{value:"yarn",$$slots:{default:[as]},$$scope:{ctx:c}}}),a=new Q({props:{value:"npm",$$slots:{default:[ls]},$$scope:{ctx:c}}}),{c(){F(n.$$.fragment),l=E(),F(a.$$.fragment)},l(e){A(n.$$.fragment,e),l=x(e),A(a.$$.fragment,e)},m(e,y){i(n,e,y),r(e,l,y),i(a,e,y),t=!0},p(e,y){const C={};y&1&&(C.$$scope={dirty:y,ctx:e}),n.$set(C);const D={};y&1&&(D.$$scope={dirty:y,ctx:e}),a.$set(D)},i(e){t||(f(n.$$.fragment,e),f(a.$$.fragment,e),t=!0)},o(e){$(n.$$.fragment,e),$(a.$$.fragment,e),t=!1},d(e){m(n,e),e&&o(l),m(a,e)}}}function es(c){let n;return{c(){n=_("#")},l(l){n=w(l,"#")},m(l,a){r(l,n,a)},d(l){l&&o(n)}}}function os(c){let n;return{c(){n=_("#")},l(l){n=w(l,"#")},m(l,a){r(l,n,a)},d(l){l&&o(n)}}}function ts(c){let n,l,a,t,e,y,C,D,R,T,B,q,u,b,j,G,h,d,g,z,P,k,S;return D=new J({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[ns]},$$scope:{ctx:c}}}),B=new ss({props:{values:["yarn","npm"],$$slots:{default:[ps]},$$scope:{ctx:c}}}),b=new J({props:{class:"header-anchor",href:"#options","aria-hidden":"true",$$slots:{default:[es]},$$scope:{ctx:c}}}),h=new U({props:{lang:"typescript",ext:"ts",linesCount:36,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">KeystoneOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">customNetwork</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNetwork</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">interface</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNetwork</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">networkId</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">genesis</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">GenesisBlock</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">hardforks</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Hardfork</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">bootstrapNodes</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">BootstrapNode</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">interface</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">GenesisBlock</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">hash</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">timestamp</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">null</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">gasLimit</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">difficulty</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">nonce</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">extraData</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">stateRoot</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">interface</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Hardfork</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">block</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">null</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">interface</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">BootstrapNode</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">ip</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">port</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">network</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chainId</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">location</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">comment</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),g=new J({props:{class:"header-anchor",href:"#usage","aria-hidden":"true",$$slots:{default:[os]},$$scope:{ctx:c}}}),k=new U({props:{lang:"typescript",ext:"ts",linesCount:16,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> keystoneModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/keystone</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> keystone </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">keystoneModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// ... other Onboard options</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    keystone</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">//... other wallets</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(connectedWallets)</span></span>
<span class="line"></span></code></pre>`}}),{c(){n=I("h1"),l=_("@web3-onboard/keystone"),a=E(),t=I("p"),e=_("Wallet module for connecting Keystone hardware wallets to web3-onboard"),y=E(),C=I("h2"),F(D.$$.fragment),R=_(" Install"),T=E(),F(B.$$.fragment),q=E(),u=I("h2"),F(b.$$.fragment),j=_(" Options"),G=E(),F(h.$$.fragment),d=I("h2"),F(g.$$.fragment),z=_(" Usage"),P=E(),F(k.$$.fragment),this.h()},l(s){n=K(s,"H1",{});var p=L(n);l=w(p,"@web3-onboard/keystone"),p.forEach(o),a=x(s),t=K(s,"P",{});var W=L(t);e=w(W,"Wallet module for connecting Keystone hardware wallets to web3-onboard"),W.forEach(o),y=x(s),C=K(s,"H2",{id:!0,tabindex:!0});var v=L(C);A(D.$$.fragment,v),R=w(v," Install"),v.forEach(o),T=x(s),A(B.$$.fragment,s),q=x(s),u=K(s,"H2",{id:!0,tabindex:!0});var H=L(u);A(b.$$.fragment,H),j=w(H," Options"),H.forEach(o),G=x(s),A(h.$$.fragment,s),d=K(s,"H2",{id:!0,tabindex:!0});var N=L(d);A(g.$$.fragment,N),z=w(N," Usage"),N.forEach(o),P=x(s),A(k.$$.fragment,s),this.h()},h(){O(C,"id","install"),O(C,"tabindex","-1"),O(u,"id","options"),O(u,"tabindex","-1"),O(d,"id","usage"),O(d,"tabindex","-1")},m(s,p){r(s,n,p),M(n,l),r(s,a,p),r(s,t,p),M(t,e),r(s,y,p),r(s,C,p),i(D,C,null),M(C,R),r(s,T,p),i(B,s,p),r(s,q,p),r(s,u,p),i(b,u,null),M(u,j),r(s,G,p),i(h,s,p),r(s,d,p),i(g,d,null),M(d,z),r(s,P,p),i(k,s,p),S=!0},p(s,[p]){const W={};p&1&&(W.$$scope={dirty:p,ctx:s}),D.$set(W);const v={};p&1&&(v.$$scope={dirty:p,ctx:s}),B.$set(v);const H={};p&1&&(H.$$scope={dirty:p,ctx:s}),b.$set(H);const N={};p&1&&(N.$$scope={dirty:p,ctx:s}),g.$set(N)},i(s){S||(f(D.$$.fragment,s),f(B.$$.fragment,s),f(b.$$.fragment,s),f(h.$$.fragment,s),f(g.$$.fragment,s),f(k.$$.fragment,s),S=!0)},o(s){$(D.$$.fragment,s),$(B.$$.fragment,s),$(b.$$.fragment,s),$(h.$$.fragment,s),$(g.$$.fragment,s),$(k.$$.fragment,s),S=!1},d(s){s&&o(n),s&&o(a),s&&o(t),s&&o(y),s&&o(C),m(D),s&&o(T),m(B,s),s&&o(q),s&&o(u),m(b),s&&o(G),m(h,s),s&&o(d),m(g),s&&o(P),m(k,s)}}}class fs extends X{constructor(n){super(),Y(this,n,null,ts,Z,{})}}export{fs as default};
